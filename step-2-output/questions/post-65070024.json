{"Id": "65070024", "PostTypeId": "1", "AcceptedAnswerId": "65070474", "CreationDate": "2020-11-30T08:15:48.503", "Score": "0", "ViewCount": "620", "Body": "<p>I have created a Nested Cloudformation YAML template set.  It consists of the Main YAML, and the Nested YAML.</p>\n<p>It creates 22 AWS Budgets with various aggregates of common AWS Services that I currently use.</p>\n<p>The main file is very long, and it &quot;feels wrong&quot; to do it this way.\nI am wondering, if I could instead use mapping and loops to accomplish the same thing?</p>\n<p>Note:  Some Budgets have only 1 Service, while others have 4 or 5.</p>\n<p>My 2 files are below.  They are designed to be hosted in an S3 bucket (at minimum the nested file needs to be) and then the BUDGETS.YAML file would be used to create a new Stack.</p>\n<p>The Console looks like this when the Script is executed now:</p>\n<p><a href=\"https://i.stack.imgur.com/3oOiI.png\" rel=\"nofollow noreferrer\">Screenshot of the AWS Budget Screen</a></p>\n<p>Here is the code for the 'CreateBudget.yaml' file, which is the Nested Stack that needs to be hosted on S3 and is 'called' by the main stack:</p>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>Description: Create-New-Monthly-Budget\nParameters:\n    NamingPrefix:\n        Type: String\n    BudgetAmount:\n        Type: Number\n    ServiceFilters:\n        Type: CommaDelimitedList\n    AlertEmail:\n        Type: String\nResources:\n  NewBudget:\n    Type: AWS::Budgets::Budget\n    Properties:\n      Budget:\n        BudgetName: !Sub ${NamingPrefix}-Monthly-Budget\n        BudgetLimit:\n          Amount: !Ref BudgetAmount\n          Unit: USD\n        TimeUnit: MONTHLY\n        TimePeriod:\n          Start: 1225864800\n          End: 1926864800\n        BudgetType: COST\n        CostFilters:\n          Service:\n            !Ref ServiceFilters\n        CostTypes:\n          IncludeCredit: true\n          IncludeDiscount: true\n          IncludeOtherSubscription: true\n          IncludeRecurring: true\n          IncludeRefund: true\n          IncludeSubscription: true\n          IncludeSupport: true\n          IncludeTax: true\n          IncludeUpfront: true\n          UseAmortized: false\n          UseBlended: false\n      NotificationsWithSubscribers:\n        - Notification:\n            NotificationType: FORECASTED\n            ComparisonOperator: GREATER_THAN\n            Threshold: 100\n          Subscribers:\n            - SubscriptionType: EMAIL\n              Address: !Ref AlertEmail\n        - Notification:\n            NotificationType: ACTUAL\n            ComparisonOperator: GREATER_THAN\n            Threshold: 75\n          Subscribers:\n            - SubscriptionType: EMAIL\n              Address: !Ref AlertEmail\n        - Notification:\n            NotificationType: ACTUAL\n            ComparisonOperator: GREATER_THAN\n            Threshold: 50\n          Subscribers:\n            - SubscriptionType: EMAIL\n              Address: !Ref AlertEmail\n        - Notification:\n            NotificationType: ACTUAL\n            ComparisonOperator: GREATER_THAN\n            Threshold: 25\n          Subscribers:\n            - SubscriptionType: EMAIL\n              Address: !Ref AlertEmail\nOutputs:\n  NewBudgetName:\n    Value: !Ref NewBudget</code></pre>\r\n</div>\r\n</div>\r\n</p>\n<p>And here is the Main Stack file, which you can host with S3 or you can just Upload it when you create the Stack. I called this Budgets.yaml but it can be called anything since it's not referenced by the other file.</p>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>Description: Create-Multiple-Budgets\nParameters:\n  AlertEmail:\n    Type: String\n    Default: \"my_email_address@gmail.com\"\n  s3TemplateURL:\n    Type: String\n    Default: \"https://my-s3-bucket-name.s3.ca-central-1.amazonaws.com/budgets/CreateBudget.yaml\"\nResources:\n  \n  # 01\n  NestedCallEC2:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"EC2\"\n        BudgetAmount: 170\n        ServiceFilters: !Join \n          - ','\n          - - Amazon Elastic Block Store\n            - Savings Plans for AWS Compute usage\n            - Amazon Elastic Load Balancing\n            - Amazon Elastic Compute Cloud - Compute\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n\n  # 02\n  NestedCallRDS:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"RDS\"\n        BudgetAmount: 80\n        ServiceFilters: !Join \n          - ','\n          - - Amazon Relational Database Service\n            - Amazon DynamoDB\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n\n  # 03\n  NestedCallCloudWatch:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"CloudWatch\"\n        BudgetAmount: 20\n        ServiceFilters: !Join \n          - ','\n          - - AmazonCloudWatch\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 04\n  NestedCallSecurity:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"Security\"\n        BudgetAmount: 10\n        ServiceFilters: !Join \n          - ','\n          - - AWS WAF\n            - AWS Secrets Manager\n            - AWS Security Hub\n            - AWS Key Management Service\n            - Amazon Cognito\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 05\n  NestedCallRoute53:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"Route53\"\n        BudgetAmount: 5\n        ServiceFilters: !Join \n          - ','\n          - - Amazon Route 53\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 06\n  NestedCallSNS:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"SNS\"\n        BudgetAmount: 5\n        ServiceFilters: !Join \n          - ','\n          - - Amazon Simple Notification Service\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 07\n  NestedCallPipeline:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"Pipeline\"\n        BudgetAmount: 1\n        ServiceFilters: !Join \n          - ','\n          - - AWS Data Pipeline\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 08\n  NestedCallGlacier:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"Glacier\"\n        BudgetAmount: 2\n        ServiceFilters: !Join \n          - ','\n          - - Amazon Glacier\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 09\n  NestedCallMisc:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"Misc\"\n        BudgetAmount: 1\n        ServiceFilters: !Join \n          - ','\n          - - AWS Cost Explorer\n            - AWS Systems Manager\n            - AWS Budgets\n            - AWS Elemental MediaStore\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 10\n  NestedCallStorage:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"Storage\"\n        BudgetAmount: 2\n        ServiceFilters: !Join \n          - ','\n          - - Amazon Simple Storage Service\n            - Amazon Elastic File System\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 11\n  NestedCallCloudFront:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"CloudFront\"\n        BudgetAmount: 2\n        ServiceFilters: !Join \n          - ','\n          - - Amazon CloudFront\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 12\n  NestedCallKinesis:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"Kinesis\"\n        BudgetAmount: 2\n        ServiceFilters: !Join \n          - ','\n          - - Amazon Kinesis\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 13\n  NestedCallAthena:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"Athena\"\n        BudgetAmount: 2\n        ServiceFilters: !Join \n          - ','\n          - - Amazon Athena\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 14\n  NestedCallAPIGateway:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"APIGateway\"\n        BudgetAmount: 2\n        ServiceFilters: !Join \n          - ','\n          - - Amazon API Gateway\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 15\n  NestedCallAmplify:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"Amplify\"\n        BudgetAmount: 2\n        ServiceFilters: !Join \n          - ','\n          - - AWS Amplify\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 16\n  NestedCallLambda:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"Lambda\"\n        BudgetAmount: 2\n        ServiceFilters: !Join \n          - ','\n          - - AWS Lambda\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n\n  # 17\n  NestedCallSES:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"SES\"\n        BudgetAmount: 2\n        ServiceFilters: !Join \n          - ','\n          - - Amazon Simple Email Service\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 18\n  NestedCallDevSupport:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"DevSupport\"\n        BudgetAmount: 2\n        ServiceFilters: !Join \n          - ','\n          - - AWS Support (Developer)\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 19\n  NestedCallAnalytics:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"Analytics\"\n        BudgetAmount: 2\n        ServiceFilters: !Join \n          - ','\n          - - AWS Glue\n            - Amazon QuickSight\n            - AWS X-Ray\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 20\n  NestedCallSQS:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"SQS\"\n        BudgetAmount: 2\n        ServiceFilters: !Join \n          - ','\n          - - Amazon Simple Queue Service\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 21\n  NestedCallDataTransfer:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"DataTransfer\"\n        BudgetAmount: 2\n        ServiceFilters: !Join \n          - ','\n          - - AWS Data Transfer\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n  \n  # 22\n  NestedCallIQ:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      Parameters:\n        AlertEmail: !Ref AlertEmail\n        NamingPrefix: \"IQ\"\n        BudgetAmount: 2\n        ServiceFilters: !Join \n          - ','\n          - - Professional services provided by AWS IQ Expert\n      TimeoutInMinutes: 60\n      TemplateURL: !Ref s3TemplateURL\n\n\nOutputs:\n  BudgetName01:\n    Value: !Ref NestedCallEC2\n  BudgetARN01:\n    Value: !GetAtt NestedCallEC2.Outputs.NewBudgetName\n  BudgetName02:\n    Value: !Ref NestedCallRDS\n  BudgetARN02:\n    Value: !GetAtt NestedCallRDS.Outputs.NewBudgetName\n  BudgetName03:\n    Value: !Ref NestedCallCloudWatch\n  BudgetArn03:\n    Value: !GetAtt NestedCallCloudWatch.Outputs.NewBudgetName\n  BudgetName04:\n    Value: !Ref NestedCallSecurity\n  BudgetArn04:\n    Value: !GetAtt NestedCallSecurity.Outputs.NewBudgetName\n  BudgetName05:\n    Value: !Ref NestedCallRoute53\n  BudgetArn05:\n    Value: !GetAtt NestedCallRoute53.Outputs.NewBudgetName\n  BudgetName06:\n    Value: !Ref NestedCallSNS\n  BudgetArn06:\n    Value: !GetAtt NestedCallSNS.Outputs.NewBudgetName\n  BudgetName07:\n    Value: !Ref NestedCallPipeline\n  BudgetArn07:\n    Value: !GetAtt NestedCallPipeline.Outputs.NewBudgetName\n  BudgetName08:\n    Value: !Ref NestedCallGlacier\n  BudgetArn08:\n    Value: !GetAtt NestedCallGlacier.Outputs.NewBudgetName\n  BudgetName09:\n    Value: !Ref NestedCallMisc\n  BudgetArn09:\n    Value: !GetAtt NestedCallMisc.Outputs.NewBudgetName\n  BudgetName10:\n    Value: !Ref NestedCallStorage\n  BudgetArn10:\n    Value: !GetAtt NestedCallStorage.Outputs.NewBudgetName\n  BudgetName11:\n    Value: !Ref NestedCallCloudFront\n  BudgetArn11:\n    Value: !GetAtt NestedCallCloudFront.Outputs.NewBudgetName\n  BudgetName12:\n    Value: !Ref NestedCallKinesis\n  BudgetArn12:\n    Value: !GetAtt NestedCallKinesis.Outputs.NewBudgetName\n  BudgetName13:\n    Value: !Ref NestedCallAthena\n  BudgetArn13:\n    Value: !GetAtt NestedCallAthena.Outputs.NewBudgetName\n  BudgetName14:\n    Value: !Ref NestedCallAPIGateway\n  BudgetArn14:\n    Value: !GetAtt NestedCallAPIGateway.Outputs.NewBudgetName\n  BudgetName15:\n    Value: !Ref NestedCallAmplify\n  BudgetArn15:\n    Value: !GetAtt NestedCallAmplify.Outputs.NewBudgetName\n  BudgetName16:\n    Value: !Ref NestedCallLambda\n  BudgetArn16:\n    Value: !GetAtt NestedCallLambda.Outputs.NewBudgetName\n  BudgetName17:\n    Value: !Ref NestedCallSES\n  BudgetArn17:\n    Value: !GetAtt NestedCallSES.Outputs.NewBudgetName\n  BudgetName18:\n    Value: !Ref NestedCallDevSupport\n  BudgetArn18:\n    Value: !GetAtt NestedCallDevSupport.Outputs.NewBudgetName\n  BudgetName19:\n    Value: !Ref NestedCallAnalytics\n  BudgetArn19:\n    Value: !GetAtt NestedCallAnalytics.Outputs.NewBudgetName\n  BudgetName20:\n    Value: !Ref NestedCallSQS\n  BudgetArn20:\n    Value: !GetAtt NestedCallSQS.Outputs.NewBudgetName\n  BudgetName21:\n    Value: !Ref NestedCallDataTransfer\n  BudgetArn21:\n    Value: !GetAtt NestedCallDataTransfer.Outputs.NewBudgetName\n  BudgetName22:\n    Value: !Ref NestedCallIQ\n  BudgetArn22:\n    Value: !GetAtt NestedCallIQ.Outputs.NewBudgetName</code></pre>\r\n</div>\r\n</div>\r\n</p>\n<p>Thanks a lot!</p>\n", "OwnerUserId": "14733528", "LastActivityDate": "2020-11-30T08:52:50.410", "Title": "Can loops and mapping be used in Cloudformation Templates to make multiple AWS Budgets with different CostFilter Services?", "Tags": "|amazon-web-services|loops|nested|yaml|aws-cloudformation|", "AnswerCount": "1", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "115037354", "PostId": "65070024", "Score": "0", "Text": "What is the issue? There are no loops in CFN, as you have in terraform for instance.", "CreationDate": "2020-11-30T08:19:52.470", "UserId": "248823", "filtered-sentences": [{"source": "Text", "text": "There are no loops in CFN, as you have in terraform for instance.", "keywords": ["instance"]}]}], "history": [{"Id": "235932891", "PostHistoryTypeId": "2", "PostId": "65070024", "RevisionGUID": "c7abadf9-7078-4fd6-9306-d8e3c1f64d64", "CreationDate": "2020-11-30T08:15:48.503", "UserId": "14733528", "Text": "I have created a Nested Cloudformation YAML template set.  It consists of the Main YAML, and the Nested YAML.\r\n\r\nIt creates 22 AWS Budgets with various aggregates of common AWS Services that I currently use.\r\n\r\nThe main file is very long, and it \"feels wrong\" to do it this way.\r\nI am wondering, if I could instead use mapping and loops to accomplish the same thing?\r\n\r\nNote:  Some Budgets have only 1 Service, while others have 4 or 5.\r\n\r\nMy 2 files are below.  They are designed to be hosted in an S3 bucket (at minimum the nested file needs to be) and then the BUDGETS.YAML file would be used to create a new Stack.\r\n\r\nThe Console looks like this when the Script is executed now:\r\n\r\n[Screenshot of the AWS Budget Screen][1]\r\n\r\nHere is the code for the 'CreateBudget.yaml' file, which is the Nested Stack that needs to be hosted on S3 and is 'called' by the main stack:\r\n\r\n<!-- begin snippet: js hide: true console: true babel: false -->\r\n\r\n<!-- language: lang-html -->\r\n\r\n\r\n    Description: Create-New-Monthly-Budget\r\n    Parameters:\r\n        NamingPrefix:\r\n            Type: String\r\n        BudgetAmount:\r\n            Type: Number\r\n        ServiceFilters:\r\n            Type: CommaDelimitedList\r\n        AlertEmail:\r\n            Type: String\r\n    Resources:\r\n      NewBudget:\r\n        Type: AWS::Budgets::Budget\r\n        Properties:\r\n          Budget:\r\n            BudgetName: !Sub ${NamingPrefix}-Monthly-Budget\r\n            BudgetLimit:\r\n              Amount: !Ref BudgetAmount\r\n              Unit: USD\r\n            TimeUnit: MONTHLY\r\n            TimePeriod:\r\n              Start: 1225864800\r\n              End: 1926864800\r\n            BudgetType: COST\r\n            CostFilters:\r\n              Service:\r\n                !Ref ServiceFilters\r\n            CostTypes:\r\n              IncludeCredit: true\r\n              IncludeDiscount: true\r\n              IncludeOtherSubscription: true\r\n              IncludeRecurring: true\r\n              IncludeRefund: true\r\n              IncludeSubscription: true\r\n              IncludeSupport: true\r\n              IncludeTax: true\r\n              IncludeUpfront: true\r\n              UseAmortized: false\r\n              UseBlended: false\r\n          NotificationsWithSubscribers:\r\n            - Notification:\r\n                NotificationType: FORECASTED\r\n                ComparisonOperator: GREATER_THAN\r\n                Threshold: 100\r\n              Subscribers:\r\n                - SubscriptionType: EMAIL\r\n                  Address: !Ref AlertEmail\r\n            - Notification:\r\n                NotificationType: ACTUAL\r\n                ComparisonOperator: GREATER_THAN\r\n                Threshold: 75\r\n              Subscribers:\r\n                - SubscriptionType: EMAIL\r\n                  Address: !Ref AlertEmail\r\n            - Notification:\r\n                NotificationType: ACTUAL\r\n                ComparisonOperator: GREATER_THAN\r\n                Threshold: 50\r\n              Subscribers:\r\n                - SubscriptionType: EMAIL\r\n                  Address: !Ref AlertEmail\r\n            - Notification:\r\n                NotificationType: ACTUAL\r\n                ComparisonOperator: GREATER_THAN\r\n                Threshold: 25\r\n              Subscribers:\r\n                - SubscriptionType: EMAIL\r\n                  Address: !Ref AlertEmail\r\n    Outputs:\r\n      NewBudgetName:\r\n        Value: !Ref NewBudget\r\n\r\n<!-- end snippet -->\r\n\r\nAnd here is the Main Stack file, which you can host with S3 or you can just Upload it when you create the Stack. I called this Budgets.yaml but it can be called anything since it's not referenced by the other file.\r\n\r\n<!-- begin snippet: js hide: true console: true babel: false -->\r\n\r\n<!-- language: lang-html -->\r\n\r\n    Description: Create-Multiple-Budgets\r\n    Parameters:\r\n      AlertEmail:\r\n        Type: String\r\n        Default: \"my_email_address@gmail.com\"\r\n      s3TemplateURL:\r\n        Type: String\r\n        Default: \"https://my-s3-bucket-name.s3.ca-central-1.amazonaws.com/budgets/CreateBudget.yaml\"\r\n    Resources:\r\n      \r\n      # 01\r\n      NestedCallEC2:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"EC2\"\r\n            BudgetAmount: 170\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - Amazon Elastic Block Store\r\n                - Savings Plans for AWS Compute usage\r\n                - Amazon Elastic Load Balancing\r\n                - Amazon Elastic Compute Cloud - Compute\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n\r\n      # 02\r\n      NestedCallRDS:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"RDS\"\r\n            BudgetAmount: 80\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - Amazon Relational Database Service\r\n                - Amazon DynamoDB\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n\r\n      # 03\r\n      NestedCallCloudWatch:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"CloudWatch\"\r\n            BudgetAmount: 20\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - AmazonCloudWatch\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 04\r\n      NestedCallSecurity:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"Security\"\r\n            BudgetAmount: 10\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - AWS WAF\r\n                - AWS Secrets Manager\r\n                - AWS Security Hub\r\n                - AWS Key Management Service\r\n                - Amazon Cognito\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 05\r\n      NestedCallRoute53:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"Route53\"\r\n            BudgetAmount: 5\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - Amazon Route 53\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 06\r\n      NestedCallSNS:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"SNS\"\r\n            BudgetAmount: 5\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - Amazon Simple Notification Service\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 07\r\n      NestedCallPipeline:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"Pipeline\"\r\n            BudgetAmount: 1\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - AWS Data Pipeline\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 08\r\n      NestedCallGlacier:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"Glacier\"\r\n            BudgetAmount: 2\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - Amazon Glacier\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 09\r\n      NestedCallMisc:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"Misc\"\r\n            BudgetAmount: 1\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - AWS Cost Explorer\r\n                - AWS Systems Manager\r\n                - AWS Budgets\r\n                - AWS Elemental MediaStore\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 10\r\n      NestedCallStorage:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"Storage\"\r\n            BudgetAmount: 2\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - Amazon Simple Storage Service\r\n                - Amazon Elastic File System\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 11\r\n      NestedCallCloudFront:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"CloudFront\"\r\n            BudgetAmount: 2\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - Amazon CloudFront\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 12\r\n      NestedCallKinesis:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"Kinesis\"\r\n            BudgetAmount: 2\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - Amazon Kinesis\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 13\r\n      NestedCallAthena:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"Athena\"\r\n            BudgetAmount: 2\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - Amazon Athena\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 14\r\n      NestedCallAPIGateway:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"APIGateway\"\r\n            BudgetAmount: 2\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - Amazon API Gateway\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 15\r\n      NestedCallAmplify:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"Amplify\"\r\n            BudgetAmount: 2\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - AWS Amplify\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 16\r\n      NestedCallLambda:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"Lambda\"\r\n            BudgetAmount: 2\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - AWS Lambda\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n\r\n      # 17\r\n      NestedCallSES:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"SES\"\r\n            BudgetAmount: 2\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - Amazon Simple Email Service\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 18\r\n      NestedCallDevSupport:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"DevSupport\"\r\n            BudgetAmount: 2\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - AWS Support (Developer)\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 19\r\n      NestedCallAnalytics:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"Analytics\"\r\n            BudgetAmount: 2\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - AWS Glue\r\n                - Amazon QuickSight\r\n                - AWS X-Ray\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 20\r\n      NestedCallSQS:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"SQS\"\r\n            BudgetAmount: 2\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - Amazon Simple Queue Service\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 21\r\n      NestedCallDataTransfer:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"DataTransfer\"\r\n            BudgetAmount: 2\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - AWS Data Transfer\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n      \r\n      # 22\r\n      NestedCallIQ:\r\n        Type: AWS::CloudFormation::Stack\r\n        Properties:\r\n          Parameters:\r\n            AlertEmail: !Ref AlertEmail\r\n            NamingPrefix: \"IQ\"\r\n            BudgetAmount: 2\r\n            ServiceFilters: !Join \r\n              - ','\r\n              - - Professional services provided by AWS IQ Expert\r\n          TimeoutInMinutes: 60\r\n          TemplateURL: !Ref s3TemplateURL\r\n\r\n\r\n    Outputs:\r\n      BudgetName01:\r\n        Value: !Ref NestedCallEC2\r\n      BudgetARN01:\r\n        Value: !GetAtt NestedCallEC2.Outputs.NewBudgetName\r\n      BudgetName02:\r\n        Value: !Ref NestedCallRDS\r\n      BudgetARN02:\r\n        Value: !GetAtt NestedCallRDS.Outputs.NewBudgetName\r\n      BudgetName03:\r\n        Value: !Ref NestedCallCloudWatch\r\n      BudgetArn03:\r\n        Value: !GetAtt NestedCallCloudWatch.Outputs.NewBudgetName\r\n      BudgetName04:\r\n        Value: !Ref NestedCallSecurity\r\n      BudgetArn04:\r\n        Value: !GetAtt NestedCallSecurity.Outputs.NewBudgetName\r\n      BudgetName05:\r\n        Value: !Ref NestedCallRoute53\r\n      BudgetArn05:\r\n        Value: !GetAtt NestedCallRoute53.Outputs.NewBudgetName\r\n      BudgetName06:\r\n        Value: !Ref NestedCallSNS\r\n      BudgetArn06:\r\n        Value: !GetAtt NestedCallSNS.Outputs.NewBudgetName\r\n      BudgetName07:\r\n        Value: !Ref NestedCallPipeline\r\n      BudgetArn07:\r\n        Value: !GetAtt NestedCallPipeline.Outputs.NewBudgetName\r\n      BudgetName08:\r\n        Value: !Ref NestedCallGlacier\r\n      BudgetArn08:\r\n        Value: !GetAtt NestedCallGlacier.Outputs.NewBudgetName\r\n      BudgetName09:\r\n        Value: !Ref NestedCallMisc\r\n      BudgetArn09:\r\n        Value: !GetAtt NestedCallMisc.Outputs.NewBudgetName\r\n      BudgetName10:\r\n        Value: !Ref NestedCallStorage\r\n      BudgetArn10:\r\n        Value: !GetAtt NestedCallStorage.Outputs.NewBudgetName\r\n      BudgetName11:\r\n        Value: !Ref NestedCallCloudFront\r\n      BudgetArn11:\r\n        Value: !GetAtt NestedCallCloudFront.Outputs.NewBudgetName\r\n      BudgetName12:\r\n        Value: !Ref NestedCallKinesis\r\n      BudgetArn12:\r\n        Value: !GetAtt NestedCallKinesis.Outputs.NewBudgetName\r\n      BudgetName13:\r\n        Value: !Ref NestedCallAthena\r\n      BudgetArn13:\r\n        Value: !GetAtt NestedCallAthena.Outputs.NewBudgetName\r\n      BudgetName14:\r\n        Value: !Ref NestedCallAPIGateway\r\n      BudgetArn14:\r\n        Value: !GetAtt NestedCallAPIGateway.Outputs.NewBudgetName\r\n      BudgetName15:\r\n        Value: !Ref NestedCallAmplify\r\n      BudgetArn15:\r\n        Value: !GetAtt NestedCallAmplify.Outputs.NewBudgetName\r\n      BudgetName16:\r\n        Value: !Ref NestedCallLambda\r\n      BudgetArn16:\r\n        Value: !GetAtt NestedCallLambda.Outputs.NewBudgetName\r\n      BudgetName17:\r\n        Value: !Ref NestedCallSES\r\n      BudgetArn17:\r\n        Value: !GetAtt NestedCallSES.Outputs.NewBudgetName\r\n      BudgetName18:\r\n        Value: !Ref NestedCallDevSupport\r\n      BudgetArn18:\r\n        Value: !GetAtt NestedCallDevSupport.Outputs.NewBudgetName\r\n      BudgetName19:\r\n        Value: !Ref NestedCallAnalytics\r\n      BudgetArn19:\r\n        Value: !GetAtt NestedCallAnalytics.Outputs.NewBudgetName\r\n      BudgetName20:\r\n        Value: !Ref NestedCallSQS\r\n      BudgetArn20:\r\n        Value: !GetAtt NestedCallSQS.Outputs.NewBudgetName\r\n      BudgetName21:\r\n        Value: !Ref NestedCallDataTransfer\r\n      BudgetArn21:\r\n        Value: !GetAtt NestedCallDataTransfer.Outputs.NewBudgetName\r\n      BudgetName22:\r\n        Value: !Ref NestedCallIQ\r\n      BudgetArn22:\r\n        Value: !GetAtt NestedCallIQ.Outputs.NewBudgetName\r\n\r\n<!-- end snippet -->\r\n\r\nThanks a lot!\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/3oOiI.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Here is the code for the 'CreateBudget.yaml' file, which is the Nested Stack that needs to be hosted on S3 and is 'called' by the main stack: Description: Create-New-Monthly-Budget Parameters: NamingPrefix: Type: String BudgetAmount: Type: Number ServiceFilters: Type: CommaDelimitedList AlertEmail: Type: String Resources: NewBudget: Type: AWS::Budgets::Budget Properties: Budget: BudgetName: !Sub ${NamingPrefix}-Monthly-Budget BudgetLimit: Amount: !Ref BudgetAmount Unit: USD TimeUnit: MONTHLY TimePeriod: Start: 1225864800 End: 1926864800 BudgetType: COST CostFilters: Service: !Ref ServiceFilters CostTypes: IncludeCredit: true IncludeDiscount: true IncludeOtherSubscription: true IncludeRecurring: true IncludeRefund: true IncludeSubscription: true IncludeSupport: true IncludeTax: true IncludeUpfront: true UseAmortized: false UseBlended: false NotificationsWithSubscribers: - Notification: NotificationType: FORECASTED ComparisonOperator: GREATER_THAN Threshold: 100 Subscribers: - SubscriptionType: EMAIL Address: !Ref AlertEmail - Notification: NotificationType: ACTUAL ComparisonOperator: GREATER_THAN Threshold: 75 Subscribers: - SubscriptionType: EMAIL Address: !Ref AlertEmail - Notification: NotificationType: ACTUAL ComparisonOperator: GREATER_THAN Threshold: 50 Subscribers: - SubscriptionType: EMAIL Address: !Ref AlertEmail - Notification: NotificationType: ACTUAL ComparisonOperator: GREATER_THAN Threshold: 25 Subscribers: - SubscriptionType: EMAIL Address: !Ref AlertEmail Outputs: NewBudgetName: Value: !Ref NewBudget And here is the Main Stack file, which you can host with S3 or you can just Upload it when you create the Stack. ", "keywords": ["cost"]}, {"source": "Text", "text": "Description: Create-Multiple-Budgets Parameters: AlertEmail: Type: String Default: \"my_email_address@gmail.com\" s3TemplateURL: Type: String Default: \"https://my-s3-bucket-name.s3.ca-central-1.amazonaws.com/budgets/CreateBudget.yaml\" Resources: # 01 NestedCallEC2: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"EC2\" BudgetAmount: 170 ServiceFilters: !Join - ',' - - Amazon Elastic Block Store - Savings Plans for AWS Compute usage - Amazon Elastic Load Balancing - Amazon Elastic Compute Cloud - Compute TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 02 NestedCallRDS: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"RDS\" BudgetAmount: 80 ServiceFilters: !Join - ',' - - Amazon Relational Database Service - Amazon DynamoDB TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 03 NestedCallCloudWatch: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"CloudWatch\" BudgetAmount: 20 ServiceFilters: !Join - ',' - - AmazonCloudWatch TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 04 NestedCallSecurity: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"Security\" BudgetAmount: 10 ServiceFilters: !Join - ',' - - AWS WAF - AWS Secrets Manager - AWS Security Hub - AWS Key Management Service - Amazon Cognito TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 05 NestedCallRoute53: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"Route53\" BudgetAmount: 5 ServiceFilters: !Join - ',' - - Amazon Route 53 TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 06 NestedCallSNS: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"SNS\" BudgetAmount: 5 ServiceFilters: !Join - ',' - - Amazon Simple Notification Service TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 07 NestedCallPipeline: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"Pipeline\" BudgetAmount: 1 ServiceFilters: !Join - ',' - - AWS Data Pipeline TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 08 NestedCallGlacier: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"Glacier\" BudgetAmount: 2 ServiceFilters: !Join - ',' - - Amazon Glacier TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 09 NestedCallMisc: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"Misc\" BudgetAmount: 1 ServiceFilters: !Join - ',' - - AWS Cost Explorer - AWS Systems Manager - AWS Budgets - AWS Elemental MediaStore TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 10 NestedCallStorage: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"Storage\" BudgetAmount: 2 ServiceFilters: !Join - ',' - - Amazon Simple Storage Service - Amazon Elastic File System TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 11 NestedCallCloudFront: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"CloudFront\" BudgetAmount: 2 ServiceFilters: !Join - ',' - - Amazon CloudFront TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 12 NestedCallKinesis: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"Kinesis\" BudgetAmount: 2 ServiceFilters: !Join - ',' - - Amazon Kinesis TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 13 NestedCallAthena: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"Athena\" BudgetAmount: 2 ServiceFilters: !Join - ',' - - Amazon Athena TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 14 NestedCallAPIGateway: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"APIGateway\" BudgetAmount: 2 ServiceFilters: !Join - ',' - - Amazon API Gateway TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 15 NestedCallAmplify: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"Amplify\" BudgetAmount: 2 ServiceFilters: !Join - ',' - - AWS Amplify TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 16 NestedCallLambda: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"Lambda\" BudgetAmount: 2 ServiceFilters: !Join - ',' - - AWS Lambda TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 17 NestedCallSES: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"SES\" BudgetAmount: 2 ServiceFilters: !Join - ',' - - Amazon Simple Email Service TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 18 NestedCallDevSupport: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"DevSupport\" BudgetAmount: 2 ServiceFilters: !Join - ',' - - AWS Support (Developer) TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 19 NestedCallAnalytics: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"Analytics\" BudgetAmount: 2 ServiceFilters: !Join - ',' - - AWS Glue - Amazon QuickSight - AWS X-Ray TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 20 NestedCallSQS: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"SQS\" BudgetAmount: 2 ServiceFilters: !Join - ',' - - Amazon Simple Queue Service TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 21 NestedCallDataTransfer: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"DataTransfer\" BudgetAmount: 2 ServiceFilters: !Join - ',' - - AWS Data Transfer TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL # 22 NestedCallIQ: Type: AWS::CloudFormation::Stack Properties: Parameters: AlertEmail: !Ref AlertEmail NamingPrefix: \"IQ\" BudgetAmount: 2 ServiceFilters: !Join - ',' - - Professional services provided by AWS IQ Expert TimeoutInMinutes: 60 TemplateURL: !Ref s3TemplateURL Outputs: BudgetName01: Value: !Ref NestedCallEC2 BudgetARN01: Value: !GetAtt NestedCallEC2.Outputs.NewBudgetName BudgetName02: Value: !Ref NestedCallRDS BudgetARN02: Value: !GetAtt NestedCallRDS.Outputs.NewBudgetName BudgetName03: Value: !Ref NestedCallCloudWatch BudgetArn03: Value: !GetAtt NestedCallCloudWatch.Outputs.NewBudgetName BudgetName04: Value: !Ref NestedCallSecurity BudgetArn04: Value: !GetAtt NestedCallSecurity.Outputs.NewBudgetName BudgetName05: Value: !Ref NestedCallRoute53 BudgetArn05: Value: !GetAtt NestedCallRoute53.Outputs.NewBudgetName BudgetName06: Value: !Ref NestedCallSNS BudgetArn06: Value: !GetAtt NestedCallSNS.Outputs.NewBudgetName BudgetName07: Value: !Ref NestedCallPipeline BudgetArn07: Value: !GetAtt NestedCallPipeline.Outputs.NewBudgetName BudgetName08: Value: !Ref NestedCallGlacier BudgetArn08: Value: !GetAtt NestedCallGlacier.Outputs.NewBudgetName BudgetName09: Value: !Ref NestedCallMisc BudgetArn09: Value: !GetAtt NestedCallMisc.Outputs.NewBudgetName BudgetName10: Value: !Ref NestedCallStorage BudgetArn10: Value: !GetAtt NestedCallStorage.Outputs.NewBudgetName BudgetName11: Value: !Ref NestedCallCloudFront BudgetArn11: Value: !GetAtt NestedCallCloudFront.Outputs.NewBudgetName BudgetName12: Value: !Ref NestedCallKinesis BudgetArn12: Value: !GetAtt NestedCallKinesis.Outputs.NewBudgetName BudgetName13: Value: !Ref NestedCallAthena BudgetArn13: Value: !GetAtt NestedCallAthena.Outputs.NewBudgetName BudgetName14: Value: !Ref NestedCallAPIGateway BudgetArn14: Value: !GetAtt NestedCallAPIGateway.Outputs.NewBudgetName BudgetName15: Value: !Ref NestedCallAmplify BudgetArn15: Value: !GetAtt NestedCallAmplify.Outputs.NewBudgetName BudgetName16: Value: !Ref NestedCallLambda BudgetArn16: Value: !GetAtt NestedCallLambda.Outputs.NewBudgetName BudgetName17: Value: !Ref NestedCallSES BudgetArn17: Value: !GetAtt NestedCallSES.Outputs.NewBudgetName BudgetName18: Value: !Ref NestedCallDevSupport BudgetArn18: Value: !GetAtt NestedCallDevSupport.Outputs.NewBudgetName BudgetName19: Value: !Ref NestedCallAnalytics BudgetArn19: Value: !GetAtt NestedCallAnalytics.Outputs.NewBudgetName BudgetName20: Value: !Ref NestedCallSQS BudgetArn20: Value: !GetAtt NestedCallSQS.Outputs.NewBudgetName BudgetName21: Value: !Ref NestedCallDataTransfer BudgetArn21: Value: !GetAtt NestedCallDataTransfer.Outputs.NewBudgetName BudgetName22: Value: !Ref NestedCallIQ BudgetArn22: Value: !GetAtt NestedCallIQ.Outputs.NewBudgetName Thanks a lot! [1]: https://i.stack.imgur.com/3oOiI.png", "keywords": ["cost", "storage"]}]}, {"Id": "235932892", "PostHistoryTypeId": "1", "PostId": "65070024", "RevisionGUID": "c7abadf9-7078-4fd6-9306-d8e3c1f64d64", "CreationDate": "2020-11-30T08:15:48.503", "UserId": "14733528", "Text": "Can loops and mapping be used in Cloudformation Templates to make multiple AWS Budgets with different CostFilter Services?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "235932893", "PostHistoryTypeId": "3", "PostId": "65070024", "RevisionGUID": "c7abadf9-7078-4fd6-9306-d8e3c1f64d64", "CreationDate": "2020-11-30T08:15:48.503", "UserId": "14733528", "Text": "|amazon-web-services|loops|nested|yaml|aws-cloudformation|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "65070474", "PostTypeId": "2", "ParentId": "65070024", "CreationDate": "2020-11-30T08:52:50.410", "Score": "0", "Body": "<p>CloudFormation <strong>doesn't have a concept like loops</strong>.</p>\n<p>But you could use so called <strong>Macros</strong> to tackle this problem. Here is an <a href=\"https://github.com/awslabs/aws-cloudformation-templates/tree/master/aws/services/CloudFormation/MacrosExamples/Count\" rel=\"nofollow noreferrer\">example</a> that might help you.</p>\n", "OwnerUserId": "12638118", "LastActivityDate": "2020-11-30T08:52:50.410", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "235934787", "PostHistoryTypeId": "2", "PostId": "65070474", "RevisionGUID": "0a171a1f-7484-400c-b88c-7104d600ee40", "CreationDate": "2020-11-30T08:52:50.410", "UserId": "12638118", "Text": "CloudFormation **doesn't have a concept like loops**.\r\n\r\nBut you could use so called **Macros** to tackle this problem. Here is an [example][1] that might help you.\r\n\r\n\r\n  [1]: https://github.com/awslabs/aws-cloudformation-templates/tree/master/aws/services/CloudFormation/MacrosExamples/Count", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}
{"Id": "54747044", "PostTypeId": "1", "CreationDate": "2019-02-18T12:12:34.680", "Score": "5", "ViewCount": "1764", "Body": "<p>I have several AWS Lambda Functions created using <strong>AWS Console</strong> and every function has some dependent APIs.Now I want to integrate the same with <em>AWS CI/CD using CodeBuild, CodePipeline, and CloudFormation</em>. But the problem is I'm unable to update the existing lambda functions that are not created using the CloudFormation Stack <br />\n<strong>Error Message</strong> <em>ABC_Lambda already exists</em> <br/>\n<br /> Please note that if I create a new lambda using the CI/CD flow and then try to update it, that's working fine.<br /></p>\n<p><strong>So my questions are</strong></p>\n<blockquote>\n<ol>\n<li><p>How do I integrate the existing Lambda functions with AWS CI/CD workflow, without deleting and re-creating them?</p>\n</li>\n<li><p>Is there any way or SAM_template config param that force the CloudFormation to update the existing lambda(created using AWS\nconsole/AWS Commandline tool).</p>\n</li>\n</ol>\n</blockquote>\n", "OwnerUserId": "6309765", "LastEditorUserId": "-1", "LastEditDate": "2020-06-20T09:12:55.060", "LastActivityDate": "2019-02-20T11:07:02.423", "Title": "Update Existing Lambda Function Using AWS Continuous Integration/Deployment", "Tags": "|amazon-web-services|aws-lambda|aws-cloudformation|aws-codepipeline|aws-codebuild|", "AnswerCount": "4", "CommentCount": "0", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "191877193", "PostHistoryTypeId": "2", "PostId": "54747044", "RevisionGUID": "ceac6bfe-84f4-44bc-827d-1390df725b5d", "CreationDate": "2019-02-18T12:12:34.680", "UserId": "6309765", "Text": "I have several AWS Lambda Functions created using **AWS Console** and every function has some dependent APIs.Now I want to integrate the same with *AWS CI/CD using CodeBuild, CodePipeline, and CloudFormation*. But the problem is I'm unable to update the existing lambda functions that are not created using the CloudFormation Stack <br /> \r\n**Error Message** *ABC_Lambda already exists* <br/>\r\n<br /> Please note that if I create a new lambda using the CI/CD flow and then try to update it, that's working fine.<br />\r\n\r\n**So my questions are** \r\n\r\n>  1. How do I integrate the existing Lambda functions with AWS CI/CD workflow, without deleting and re-creating them?\r\n\r\n>  2. Is there any way or SAM_template config param that force the CloudFormation to update the existing lambda(created using AWS\r\n> console/AWS Commandline tool).\r\n\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "191877194", "PostHistoryTypeId": "1", "PostId": "54747044", "RevisionGUID": "ceac6bfe-84f4-44bc-827d-1390df725b5d", "CreationDate": "2019-02-18T12:12:34.680", "UserId": "6309765", "Text": "Update Existing Lambda Function Using AWS Continuous Integration/Deployment", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "191877195", "PostHistoryTypeId": "3", "PostId": "54747044", "RevisionGUID": "ceac6bfe-84f4-44bc-827d-1390df725b5d", "CreationDate": "2019-02-18T12:12:34.680", "UserId": "6309765", "Text": "|amazon-web-services|aws-lambda|aws-cloudformation|aws-codepipeline|aws-codebuild|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "224833869", "PostHistoryTypeId": "5", "PostId": "54747044", "RevisionGUID": "58963bbe-3044-42cf-b313-667e3fcf7a8b", "CreationDate": "2020-06-20T09:12:55.060", "UserId": "-1", "Comment": "Commonmark migration", "Text": "I have several AWS Lambda Functions created using **AWS Console** and every function has some dependent APIs.Now I want to integrate the same with *AWS CI/CD using CodeBuild, CodePipeline, and CloudFormation*. But the problem is I'm unable to update the existing lambda functions that are not created using the CloudFormation Stack <br /> \n**Error Message** *ABC_Lambda already exists* <br/>\n<br /> Please note that if I create a new lambda using the CI/CD flow and then try to update it, that's working fine.<br />\n\n**So my questions are** \n\n>  1. How do I integrate the existing Lambda functions with AWS CI/CD workflow, without deleting and re-creating them?\n>\n>  2. Is there any way or SAM_template config param that force the CloudFormation to update the existing lambda(created using AWS\n> console/AWS Commandline tool).\n\n\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "54747542", "PostTypeId": "2", "ParentId": "54747044", "CreationDate": "2019-02-18T12:40:56.657", "Score": "1", "Body": "<p>AWS CloudFormation can update only resources created by the same stack.</p>\n\n<p>The only possibility I can think of is to have CloudFormation Custom Resource.</p>\n\n<p>The custom resource lambda should take care of handling any resources that are not created by the stack.</p>\n\n<p>Learn more about it here (<a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources-lambda.html\" rel=\"nofollow noreferrer\">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources-lambda.html</a>)</p>\n\n<p>Hoe this helps !!!</p>\n", "OwnerUserId": "4840338", "LastActivityDate": "2019-02-18T12:40:56.657", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "96282156", "PostId": "54747542", "Score": "0", "Text": "Yes, I know that CF can only update the resources created by the same stack. And the Custom Resource method is only possible using CloudFormation to create/update/delete a custom resource, but how do I implement it using SAM template? I didn't find any article regarding this though I read \"AWS::Serverless::CustomResource\" written somewhere in aws serverless docs, but still don't know how to use it.", "CreationDate": "2019-02-18T15:02:14.933", "UserId": "6309765", "filtered-sentences": []}], "history": [{"Id": "191879302", "PostHistoryTypeId": "2", "PostId": "54747542", "RevisionGUID": "a6cac640-43b1-4fce-9c66-cc609e33a7ed", "CreationDate": "2019-02-18T12:40:56.657", "UserId": "4840338", "Text": "AWS CloudFormation can update only resources created by the same stack.\r\n\r\nThe only possibility I can think of is to have CloudFormation Custom Resource.\r\n\r\nThe custom resource lambda should take care of handling any resources that are not created by the stack.\r\n\r\nLearn more about it here (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources-lambda.html)\r\n\r\nHoe this helps !!!", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "54758852", "PostTypeId": "2", "ParentId": "54747044", "CreationDate": "2019-02-19T04:26:51.087", "Score": "0", "Body": "<p>I would treat the Lambda functions you created in the console as prototypes and incrementally build a CloudFormation stack to replace the prototype. The trick to avoid the error message (ABC_Lambda already exists) is to only specify a logical name in CloudFormation and let it assign the physical name. If you call the Lambda functions by name or an API Gateway endpoint, you'll need to update the caller when you're ready to cut over to the new stack.</p>\n", "OwnerUserId": "31304", "LastActivityDate": "2019-02-19T04:26:51.087", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "191926068", "PostHistoryTypeId": "2", "PostId": "54758852", "RevisionGUID": "c3e308d2-d501-40b7-a39c-24f71229006c", "CreationDate": "2019-02-19T04:26:51.087", "UserId": "31304", "Text": "I would treat the Lambda functions you created in the console as prototypes and incrementally build a CloudFormation stack to replace the prototype. The trick to avoid the error message (ABC_Lambda already exists) is to only specify a logical name in CloudFormation and let it assign the physical name. If you call the Lambda functions by name or an API Gateway endpoint, you'll need to update the caller when you're ready to cut over to the new stack.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "54748336", "PostTypeId": "2", "ParentId": "54747044", "CreationDate": "2019-02-18T13:23:52.357", "Score": "2", "Body": "<p>As noted by @omuthu, if you have not created the Lambdas with Cloudformation, you cannot use Cloudformation to update them.</p>\n\n<p>What you could do, is, in your CodeBuild step, use the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/lambda/update-function-code.html\" rel=\"nofollow noreferrer\"><code>update-function-code</code></a> and <a href=\"https://docs.aws.amazon.com/cli/latest/reference/lambda/update-function-configuration.html\" rel=\"nofollow noreferrer\"><code>update-function-configuration</code></a> APIs to perform the operations you need. This though does not allow you to integrate with SAM due to the limitation mentioned above.</p>\n", "OwnerUserId": "1370986", "LastActivityDate": "2019-02-18T13:23:52.357", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "191882587", "PostHistoryTypeId": "2", "PostId": "54748336", "RevisionGUID": "6e9d3b5a-0516-46eb-85cf-1032b16ea9dd", "CreationDate": "2019-02-18T13:23:52.357", "UserId": "1370986", "Text": "As noted by @omuthu, if you have not created the Lambdas with Cloudformation, you cannot use Cloudformation to update them.\r\n\r\nWhat you could do, is, in your CodeBuild step, use the [`update-function-code`][1] and [`update-function-configuration`][2] APIs to perform the operations you need. This though does not allow you to integrate with SAM due to the limitation mentioned above.\r\n\r\n\r\n  [1]: https://docs.aws.amazon.com/cli/latest/reference/lambda/update-function-code.html\r\n  [2]: https://docs.aws.amazon.com/cli/latest/reference/lambda/update-function-configuration.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "54784863", "PostTypeId": "2", "ParentId": "54747044", "CreationDate": "2019-02-20T11:07:02.423", "Score": "0", "Body": "<p>If you really needed to keep the old lambda functions around for legacy reasons you could create your new functions in Cloudformation, and update your old function manually to \"proxy\" and execute your new lambda code.</p>\n\n<p>However, you will incur additional cost for the second lambda - and possibly hit your concurrent lambda request limit.</p>\n\n<p>Over time you can update your old config / code to call just the new function, and eventually remove the old one entirely.</p>\n", "OwnerUserId": "11076865", "LastActivityDate": "2019-02-20T11:07:02.423", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "192031202", "PostHistoryTypeId": "2", "PostId": "54784863", "RevisionGUID": "6c13ddfe-5757-427d-a28f-809c7183f47b", "CreationDate": "2019-02-20T11:07:02.423", "UserId": "11076865", "Text": "If you really needed to keep the old lambda functions around for legacy reasons you could create your new functions in Cloudformation, and update your old function manually to \"proxy\" and execute your new lambda code.\r\n\r\nHowever, you will incur additional cost for the second lambda - and possibly hit your concurrent lambda request limit.\r\n\r\nOver time you can update your old config / code to call just the new function, and eventually remove the old one entirely.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "However, you will incur additional cost for the second lambda - and possibly hit your concurrent lambda request limit. ", "keywords": ["cost"]}]}], "filtered-sentences": [{"source": "Body", "text": "However, you will incur additional cost for the second lambda - and possibly hit your concurrent lambda request limit. ", "keywords": ["cost"]}]}], "contains-topic": false, "filtered-sentences": []}
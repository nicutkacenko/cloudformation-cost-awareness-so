{"Id": "60751764", "PostTypeId": "1", "AcceptedAnswerId": "60937027", "CreationDate": "2020-03-19T06:09:24.553", "Score": "0", "ViewCount": "423", "Body": "<p>I'm looking for an automised way to activate the option the AWS Billing Preferences to receive billing alerts. As far as know, this is a requirement for receiving billing alerts from Cloudwatch.</p>\n\n<p>I searched the boto3 reference doc, but I wasn't successfull. I don't want to use static checkt like mentionend <a href=\"https://medium.com/@rafael.natali/lambda-python-for-daily-aws-billing-alert-52559aac7552\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>For me, some scanning over a certain preiod and threshold seems to be the ideal solution.</p>\n\n<p>I'm thinking of a <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html\" rel=\"nofollow noreferrer\">CustomResource</a> in an account set up stack to activate this option.</p>\n\n<p>Thanks in advance!</p>\n", "OwnerUserId": "8093853", "LastActivityDate": "2020-03-30T18:24:03.343", "Title": "Automised way to activate Receive Billing Alerts Option with the AWS Console", "Tags": "|amazon-web-services|aws-cloudformation|aws-cdk|", "AnswerCount": "1", "CommentCount": "4", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "107559794", "PostId": "60751764", "Score": "1", "Text": "Did you look at AWS budgets? it might solve your need, You can set it to many dimensions and thresholds", "CreationDate": "2020-03-21T22:11:56.573", "UserId": "1495765", "filtered-sentences": []}, {"Id": "107589869", "PostId": "60751764", "Score": "0", "Text": "Yeah I know about budgets, but the stackholder requires a global alarm on all AWS spendings.", "CreationDate": "2020-03-23T09:24:45.287", "UserId": "8093853", "filtered-sentences": []}, {"Id": "107611797", "PostId": "60751764", "Score": "1", "Text": "Are you using AWS consolidated account? Organization?", "CreationDate": "2020-03-23T23:06:59.663", "UserId": "1495765", "filtered-sentences": []}, {"Id": "107648330", "PostId": "60751764", "Score": "0", "Text": "Yes. I need to clarify, that the Billing Alert needs to be placed on the OUs as well as on a specific account.", "CreationDate": "2020-03-25T06:32:00.750", "UserId": "8093853", "filtered-sentences": []}], "history": [{"Id": "217221738", "PostHistoryTypeId": "2", "PostId": "60751764", "RevisionGUID": "13e7a07c-e481-4b9e-9968-6ea48f92405b", "CreationDate": "2020-03-19T06:09:24.553", "UserId": "8093853", "Text": "I'm looking for an automised way to activate the option the AWS Billing Preferences to receive billing alerts. As far as know, this is a requirement for receiving billing alerts from Cloudwatch.\r\n\r\nI searched the boto3 reference doc, but I wasn't successfull. I don't want to use static checkt like mentionend [here](https://medium.com/@rafael.natali/lambda-python-for-daily-aws-billing-alert-52559aac7552).\r\n\r\nFor me, some scanning over a certain preiod and threshold seems to be the ideal solution.\r\n\r\nI'm thinking of a [CustomResource](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html) in an account set up stack to activate this option.\r\n\r\nThanks in advance!", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I'm looking for an automised way to activate the option the AWS Billing Preferences to receive billing alerts. ", "keywords": ["bill"]}, {"source": "Text", "text": "As far as know, this is a requirement for receiving billing alerts from Cloudwatch. ", "keywords": ["bill"]}, {"source": "Text", "text": "I don't want to use static checkt like mentionend [here](https://medium.com/@rafael.natali/lambda-python-for-daily-aws-billing-alert-52559aac7552). ", "keywords": ["bill"]}]}, {"Id": "217221739", "PostHistoryTypeId": "1", "PostId": "60751764", "RevisionGUID": "13e7a07c-e481-4b9e-9968-6ea48f92405b", "CreationDate": "2020-03-19T06:09:24.553", "UserId": "8093853", "Text": "Automised way to activate Receive Billing Alerts Option with the AWS Console", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "217221740", "PostHistoryTypeId": "3", "PostId": "60751764", "RevisionGUID": "13e7a07c-e481-4b9e-9968-6ea48f92405b", "CreationDate": "2020-03-19T06:09:24.553", "UserId": "8093853", "Text": "|amazon-web-services|aws-cloudformation|aws-cdk|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "60937027", "PostTypeId": "2", "ParentId": "60751764", "CreationDate": "2020-03-30T18:24:03.343", "Score": "1", "Body": "<p>Thanks to @Dvir669. I figured out, that <a href=\"https://aws.amazon.com/aws-cost-management/aws-budgets/?nc1=h_ls\" rel=\"nofollow noreferrer\">AWS Budgets</a> solves my problems without restrictions according to regions (global service, with regional endpoints) and without the need to change billing preferences. But <code>AWS Budgets</code> comes with a sophisticated billing dashboard. Finally, the alert notifications are well-formatted and by default no SNS topic is needed. I attached a picture.</p>\n\n<p><a href=\"https://i.stack.imgur.com/JkqFC.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/JkqFC.png\" alt=\"enter image description here\"></a></p>\n\n<p>Within the CDK, it's pretty simple to configure AWS Budgets:</p>\n\n<pre><code># CDK Libs\nfrom aws_cdk import core\nfrom aws_cdk import aws_budgets as _budgets\n\nclass BillingAlertStack(core.Stack):\n\n    def __init__(self, scope: core.Construct, id: str, **kwargs) -&gt; None:\n        super().__init__(scope, id, **kwargs)\n\n        # The code that defines your stack goes here\n\n        #####################\n        # Emails for Alerts\n        #####################\n\n        emails_list = [\n            \"youremail1@example.com\",\n            ...\n        ]\n\n        #####################\n        # Thresholds for Alerts\n        #####################\n\n        thresholds_list = [\n            15,\n            ...\n        ]\n\n        #####################\n        # Budget Alert\n        #####################\n\n        subscribers_list=[]\n\n        for emails in emails_list:\n            subscribers_list.append(\n                _budgets.CfnBudget.SubscriberProperty(\n                    address=emails,\n                    subscription_type=\"EMAIL\"\n                )\n            )\n\n        for thresholds in thresholds_list:\n            property= _budgets.CfnBudget.BudgetDataProperty(\n                budget_type=\"COST\",\n                budget_limit=_budgets.CfnBudget.SpendProperty(\n                    amount=thresholds,\n                    unit=\"USD\"\n                ),\n                time_unit=\"MONTHLY\",\n            )\n            budgets = _budgets.CfnBudget(\n                self,\n                id=\"Budget-{}\".format(thresholds),\n                budget=property,\n                notifications_with_subscribers=[\n                    _budgets.CfnBudget.NotificationWithSubscribersProperty(\n                        notification=_budgets.CfnBudget.NotificationProperty(\n                            comparison_operator=\"GREATER_THAN\",\n                            notification_type=\"ACTUAL\",\n                            threshold=80,\n                            threshold_type=\"PERCENTAGE\"\n                        ),\n                        subscribers=subscribers_list\n                    )\n                ]\n            )\n</code></pre>\n\n<p>As you can see,  so far no elaborated constructs are available, but <code>Python</code> it self brings advantages against plain <code>CloudFormation</code>. Within the <code>app.py</code>, you can specifiy multiple accounts at once. Which makes perfectly sense, to apply AWS Budgets on an OU within <code>AWS Organizations</code>.</p>\n", "OwnerUserId": "8093853", "LastActivityDate": "2020-03-30T18:24:03.343", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "218030214", "PostHistoryTypeId": "2", "PostId": "60937027", "RevisionGUID": "e4cd24c4-b0d1-4c24-ba2a-643aca2001df", "CreationDate": "2020-03-30T18:24:03.343", "UserId": "8093853", "Text": "Thanks to @Dvir669. I figured out, that [AWS Budgets](https://aws.amazon.com/aws-cost-management/aws-budgets/?nc1=h_ls) solves my problems without restrictions according to regions (global service, with regional endpoints) and without the need to change billing preferences. But `AWS Budgets` comes with a sophisticated billing dashboard. Finally, the alert notifications are well-formatted and by default no SNS topic is needed. I attached a picture.\r\n\r\n[![enter image description here][1]][1]\r\n\r\nWithin the CDK, it's pretty simple to configure AWS Budgets:\r\n\r\n```\r\n# CDK Libs\r\nfrom aws_cdk import core\r\nfrom aws_cdk import aws_budgets as _budgets\r\n\r\nclass BillingAlertStack(core.Stack):\r\n\r\n    def __init__(self, scope: core.Construct, id: str, **kwargs) -> None:\r\n        super().__init__(scope, id, **kwargs)\r\n\r\n        # The code that defines your stack goes here\r\n\r\n        #####################\r\n        # Emails for Alerts\r\n        #####################\r\n\r\n        emails_list = [\r\n            \"youremail1@example.com\",\r\n            ...\r\n        ]\r\n\r\n        #####################\r\n        # Thresholds for Alerts\r\n        #####################\r\n\r\n        thresholds_list = [\r\n            15,\r\n            ...\r\n        ]\r\n\r\n        #####################\r\n        # Budget Alert\r\n        #####################\r\n\r\n        subscribers_list=[]\r\n\r\n        for emails in emails_list:\r\n            subscribers_list.append(\r\n                _budgets.CfnBudget.SubscriberProperty(\r\n                    address=emails,\r\n                    subscription_type=\"EMAIL\"\r\n                )\r\n            )\r\n\r\n        for thresholds in thresholds_list:\r\n            property= _budgets.CfnBudget.BudgetDataProperty(\r\n                budget_type=\"COST\",\r\n                budget_limit=_budgets.CfnBudget.SpendProperty(\r\n                    amount=thresholds,\r\n                    unit=\"USD\"\r\n                ),\r\n                time_unit=\"MONTHLY\",\r\n            )\r\n            budgets = _budgets.CfnBudget(\r\n                self,\r\n                id=\"Budget-{}\".format(thresholds),\r\n                budget=property,\r\n                notifications_with_subscribers=[\r\n                    _budgets.CfnBudget.NotificationWithSubscribersProperty(\r\n                        notification=_budgets.CfnBudget.NotificationProperty(\r\n                            comparison_operator=\"GREATER_THAN\",\r\n                            notification_type=\"ACTUAL\",\r\n                            threshold=80,\r\n                            threshold_type=\"PERCENTAGE\"\r\n                        ),\r\n                        subscribers=subscribers_list\r\n                    )\r\n                ]\r\n            )\r\n```\r\n\r\nAs you can see,  so far no elaborated constructs are available, but `Python` it self brings advantages against plain `CloudFormation`. Within the `app.py`, you can specifiy multiple accounts at once. Which makes perfectly sense, to apply AWS Budgets on an OU within `AWS Organizations`.\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/JkqFC.png", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I figured out, that [AWS Budgets](https://aws.amazon.com/aws-cost-management/aws-budgets/?nc1=h_ls) solves my problems without restrictions according to regions (global service, with regional endpoints) and without the need to change billing preferences. ", "keywords": ["bill", "cost", "change"]}, {"source": "Text", "text": "But `AWS Budgets` comes with a sophisticated billing dashboard. ", "keywords": ["bill"]}, {"source": "Text", "text": "Within the CDK, it's pretty simple to configure AWS Budgets: ``` # CDK Libs from aws_cdk import core from aws_cdk import aws_budgets as _budgets class BillingAlertStack(core.Stack): def __init__(self, scope: core.Construct, id: str, **kwargs) -> None: super().__init__(scope, id, **kwargs) # The code that defines your stack goes here ##################### # Emails for Alerts ##################### emails_list = [ \"youremail1@example.com\", ... ] ##################### # Thresholds for Alerts ##################### thresholds_list = [ 15, ... ] ##################### # Budget Alert ##################### subscribers_list=[] for emails in emails_list: subscribers_list.append( _budgets.CfnBudget.SubscriberProperty( address=emails, subscription_type=\"EMAIL\" ) ) for thresholds in thresholds_list: property= _budgets.CfnBudget.BudgetDataProperty( budget_type=\"COST\", budget_limit=_budgets.CfnBudget.SpendProperty( amount=thresholds, unit=\"USD\" ), time_unit=\"MONTHLY\", ) budgets = _budgets.CfnBudget( self, id=\"Budget-{}\".format(thresholds), budget=property, notifications_with_subscribers=[ _budgets.CfnBudget.NotificationWithSubscribersProperty( notification=_budgets.CfnBudget.NotificationProperty( comparison_operator=\"GREATER_THAN\", notification_type=\"ACTUAL\", threshold=80, threshold_type=\"PERCENTAGE\" ), subscribers=subscribers_list ) ] ) ``` ", "keywords": ["cost"]}]}], "filtered-sentences": [{"source": "Body", "text": "I figured out, that AWS Budgets solves my problems without restrictions according to regions (global service, with regional endpoints) and without the need to change billing preferences. ", "keywords": ["bill", "change"]}, {"source": "Body", "text": "But AWS Budgets comes with a sophisticated billing dashboard. ", "keywords": ["bill"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I'm looking for an automised way to activate the option the AWS Billing Preferences to receive billing alerts. ", "keywords": ["bill"]}, {"source": "Body", "text": "As far as know, this is a requirement for receiving billing alerts from Cloudwatch. ", "keywords": ["bill"]}]}
{"Id": "61736975", "PostTypeId": "1", "CreationDate": "2020-05-11T18:43:59.463", "Score": "0", "ViewCount": "1965", "Body": "<p>Fairly new to cloudformation templating but all I am looking to create a template where I create a S3 bucket and import contents into that bucket from another S3 bucket from a different account (that is also mine). I realize CloudFormation does not natively supports importing contents into S3 bucket, and I have to utilize custom resource. I could not find any reference/resources that does such tasks. Hoping someone could point out some examples or maybe even some guidance as to how to tackle this.</p>\n\n<p>Thank you very much!</p>\n", "OwnerUserId": "11467410", "LastActivityDate": "2020-05-12T03:09:43.970", "Title": "How to upload contents into S3 bucket via CloudFormation template using custom resource?", "Tags": "|amazon-web-services|amazon-s3|aws-cloudformation|aws-cloudformation-custom-resource|", "AnswerCount": "2", "CommentCount": "1", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "109204706", "PostId": "61736975", "Score": "0", "Text": "What part do you not understand? Creating a custom resource (and have you read the [docs](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html)?) or copying the file from a bucket belonging to a different account?", "CreationDate": "2020-05-11T19:51:19.127", "UserId": "13400729", "filtered-sentences": []}], "history": [{"Id": "221385379", "PostHistoryTypeId": "2", "PostId": "61736975", "RevisionGUID": "08697c9a-152d-4f44-8df8-1d6aa352b371", "CreationDate": "2020-05-11T18:43:59.463", "UserId": "11467410", "Text": "Fairly new to cloudformation templating but all I am looking to create a template where I create a S3 bucket and import contents into that bucket from another S3 bucket from a different account (that is also mine). I realize CloudFormation does not natively supports importing contents into S3 bucket, and I have to utilize custom resource. I could not find any reference/resources that does such tasks. Hoping someone could point out some examples or maybe even some guidance as to how to tackle this.\r\n\r\nThank you very much!", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "221385380", "PostHistoryTypeId": "1", "PostId": "61736975", "RevisionGUID": "08697c9a-152d-4f44-8df8-1d6aa352b371", "CreationDate": "2020-05-11T18:43:59.463", "UserId": "11467410", "Text": "How to upload contents into S3 bucket via CloudFormation template using custom resource?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "221385381", "PostHistoryTypeId": "3", "PostId": "61736975", "RevisionGUID": "08697c9a-152d-4f44-8df8-1d6aa352b371", "CreationDate": "2020-05-11T18:43:59.463", "UserId": "11467410", "Text": "|amazon-web-services|amazon-s3|aws-cloudformation|aws-cloudformation-custom-resource|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "61740945", "PostTypeId": "2", "ParentId": "61736975", "CreationDate": "2020-05-11T23:06:32.453", "Score": "3", "Body": "<p>Can't provide full code, but can provide some guidance. There are few ways of doing this, but I will list one:</p>\n\n<ol>\n<li><p>Create a <strong>bucket policy</strong> for the bucket in the second account. The policy should allow the first account (one with cfn) to read it. There are many resources on doing this. One from AWS is <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/example-walkthroughs-managing-access-example2.html\" rel=\"nofollow noreferrer\">here</a>.</p></li>\n<li><p>Create a <strong>standalone lambda function</strong> in the first account with execution role allowing it to the read bucket from the second account. This is not a custom resource yet. The purpose of this lambda function is to <strong>test the cross-account permissions</strong>, and your code which reads objects from it. This is like a test function to sort out all the permissions and polish object copying code from one bucket to other.</p></li>\n<li><p>Once your lambda function works as intended, you modify it (or create new one) as a <strong>custom resource</strong> in CFN. As a custom resource, it will need to take your newly created bucket in cfn as one of its arguments. For easier creation of custom resources <a href=\"https://github.com/aws-cloudformation/custom-resource-helper\" rel=\"nofollow noreferrer\">this</a> aws helper can be used.  </p></li>\n</ol>\n\n<p>Note, that the lambda execution timeout is <strong>15 minutes</strong>. Depending on how many objects you have, it may be not enough.</p>\n\n<p>Hope this helps.</p>\n", "OwnerUserId": "248823", "LastActivityDate": "2020-05-11T23:06:32.453", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "221401096", "PostHistoryTypeId": "2", "PostId": "61740945", "RevisionGUID": "383f166d-6158-4061-b0a5-a2ba069264e9", "CreationDate": "2020-05-11T23:06:32.453", "UserId": "248823", "Text": "Can't provide full code, but can provide some guidance. There are few ways of doing this, but I will list one:\r\n\r\n1. Create a **bucket policy** for the bucket in the second account. The policy should allow the first account (one with cfn) to read it. There are many resources on doing this. One from AWS is [here](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-walkthroughs-managing-access-example2.html).\r\n\r\n2. Create a **standalone lambda function** in the first account with execution role allowing it to the read bucket from the second account. This is not a custom resource yet. The purpose of this lambda function is to **test the cross-account permissions**, and your code which reads objects from it. This is like a test function to sort out all the permissions and polish object copying code from one bucket to other.\r\n\r\n3. Once your lambda function works as intended, you modify it (or create new one) as a **custom resource** in CFN. As a custom resource, it will need to take your newly created bucket in cfn as one of its arguments. For easier creation of custom resources [this](https://github.com/aws-cloudformation/custom-resource-helper) aws helper can be used.  \r\n\r\n\r\n\r\nNote, that the lambda execution timeout is **15 minutes**. Depending on how many objects you have, it may be not enough.\r\n\r\nHope this helps.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "There are few ways of doing this, but I will list one: 1. Create a **bucket policy** for the bucket in the second account. ", "keywords": ["policy"]}, {"source": "Text", "text": "The policy should allow the first account (one with cfn) to read it. ", "keywords": ["policy"]}, {"source": "Text", "text": "The purpose of this lambda function is to **test the cross-account permissions**, and your code which reads objects from it. ", "keywords": ["test"]}, {"source": "Text", "text": "This is like a test function to sort out all the permissions and polish object copying code from one bucket to other. ", "keywords": ["test"]}]}], "filtered-sentences": [{"source": "Body", "text": "There are few ways of doing this, but I will list one: Create a bucket policy for the bucket in the second account. ", "keywords": ["policy"]}, {"source": "Body", "text": "The policy should allow the first account (one with cfn) to read it. ", "keywords": ["policy"]}, {"source": "Body", "text": "The purpose of this lambda function is to test the cross-account permissions, and your code which reads objects from it. ", "keywords": ["test"]}, {"source": "Body", "text": "This is like a test function to sort out all the permissions and polish object copying code from one bucket to other. ", "keywords": ["test"]}]}, {"Id": "61743133", "PostTypeId": "2", "ParentId": "61736975", "CreationDate": "2020-05-12T03:09:43.970", "Score": "0", "Body": "<p>If Custom Resources scare you, then a simpler way is to launch an Amazon EC2 instance with a startup script specified via User Data.</p>\n\n<p>The CloudFormation template can 'insert' the name of the new bucket into the script by referencing the bucket resource that was created. The script could then run an AWS CLI command to copy the files across.</p>\n\n<p>Plus, it's not expensive. A <code>t3.micro</code> instance is about 1c/hour and it is charged <em>per second</em>, so it's pretty darn close to free.</p>\n", "OwnerUserId": "174777", "LastActivityDate": "2020-05-12T03:09:43.970", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "221411001", "PostHistoryTypeId": "2", "PostId": "61743133", "RevisionGUID": "0c42589b-e6bc-42d9-b337-44bd269dae39", "CreationDate": "2020-05-12T03:09:43.970", "UserId": "174777", "Text": "If Custom Resources scare you, then a simpler way is to launch an Amazon EC2 instance with a startup script specified via User Data.\r\n\r\nThe CloudFormation template can 'insert' the name of the new bucket into the script by referencing the bucket resource that was created. The script could then run an AWS CLI command to copy the files across.\r\n\r\nPlus, it's not expensive. A `t3.micro` instance is about 1c/hour and it is charged _per second_, so it's pretty darn close to free.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "If Custom Resources scare you, then a simpler way is to launch an Amazon EC2 instance with a startup script specified via User Data. ", "keywords": ["instance"]}, {"source": "Text", "text": "Plus, it's not expensive. ", "keywords": ["expense"]}, {"source": "Text", "text": "A `t3.micro` instance is about 1c/hour and it is charged _per second_, so it's pretty darn close to free.", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "If Custom Resources scare you, then a simpler way is to launch an Amazon EC2 instance with a startup script specified via User Data. ", "keywords": ["instance"]}, {"source": "Body", "text": "Plus, it's not expensive. ", "keywords": ["expense"]}, {"source": "Body", "text": "A t3.micro instance is about 1c/hour and it is charged per second, so it's pretty darn close to free.", "keywords": ["instance"]}]}], "contains-topic": true, "filtered-sentences": []}
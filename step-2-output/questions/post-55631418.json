{"Id": "55631418", "PostTypeId": "1", "AcceptedAnswerId": "55645802", "CreationDate": "2019-04-11T11:27:12.523", "Score": "0", "ViewCount": "1102", "Body": "<p>We want to <strong>tag every resource of a cloudformation stack</strong> with a specific tag (for billing and financial reasons). This includes the <strong>main storage used on the main partition mounted under (/dev/sda1).</strong></p>\n\n<p>This is what we have:</p>\n\n<pre><code>---\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: The Name\nParameters:\n  InstanceType:\n    Description: EC2 instance type\n    Type: String\n    Default: t3.small\n    AllowedValues:\n    - t3.nano\n    - ...\n  InstanceName:\n    Description: Name Tag\n    Type: String\nResources:\n  TheECCInstance:\n    Type: AWS::EC2::Instance\n    Properties:\n      KeyName: jenkins\n      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]\n      InstanceType:\n        Ref: InstanceType\n      SubnetId: subnet-0e9c7d7c2711aaf9e\n      BlockDeviceMappings:\n        - DeviceName: \"/dev/sda1\"\n          Ebs:\n            VolumeSize:\n              Ref: EBSBlockSize\n            VolumeType: gp2\n      Tags:\n      - Key: Name\n        Value:\n          Ref: InstanceName\n      - Key: Type\n        Value: TheType\n\nMappings:\n  RegionMap:\n    'ap-northeast-3':\n      NAME: ap-northeast-3b\n      AMI: 'ami-05e896b95030bd37c'\n    'sa-east-1':\n      NAME: sa-east-1b\n      AMI: 'ami-03c6239555bb12112'\n    'eu-west-1':\n      NAME: eu-west-1b\n      AMI: 'ami-00035f41c82244dab'\n    ...\n\nOutputs:\n  ...\n\n</code></pre>\n\n<p>I <strong>would not mind using something like that</strong>:</p>\n\n<pre><code>  RootVolume:\n    Type: AWS::EC2::Volume      // Or Something in that direction (EFS / EBS / whatever)\n    Properties:\n      Size:\n        Ref: EBSBlockSize\n      VolumeType: gp2\n      AvailabilityZone: !FindInMap [RegionMap, !Ref 'AWS::Region', NAME]\n      Tags:\n        - Key: Type\n          Value: TheType\n</code></pre>\n\n<p><strong>and mounting it</strong>. It just seems impossible, to get it attached as the main partition. Either as AWS::EC2::Volume, AWS::EFS, etc. Any help here would be appreciated. We currently create the instance and then tag after stack creation. But that seems somewhat fragile and there should be an easier way doing this....</p>\n", "OwnerUserId": "1856759", "LastActivityDate": "2019-04-12T06:36:03.083", "Title": "Set Tag on AWS::EC2::Instances BlockStorage of root Volume via CloudFormation", "Tags": "|amazon-web-services|configuration|tags|config|aws-cloudformation|", "AnswerCount": "1", "CommentCount": "10", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "97953956", "PostId": "55631418", "Score": "0", "Text": "The code above is simplified and modified for readability.", "CreationDate": "2019-04-11T11:28:06.310", "UserId": "1856759", "filtered-sentences": []}, {"Id": "97954275", "PostId": "55631418", "Score": "0", "Text": "AFAIK You can use BlockDeviceMappings to do this. You do need to define the EBS separately though.", "CreationDate": "2019-04-11T11:37:08.237", "UserId": "2947378", "filtered-sentences": []}, {"Id": "97954777", "PostId": "55631418", "Score": "0", "Text": "Thx @DroidX86. But the problem is not the device in general. It is the root device. I can spawn ephemerals, but \"/dev/sda1\" seems to be a an issue...", "CreationDate": "2019-04-11T11:53:02.710", "UserId": "1856759", "filtered-sentences": []}, {"Id": "97954849", "PostId": "55631418", "Score": "0", "Text": "Why is that? Any error?", "CreationDate": "2019-04-11T11:55:38.317", "UserId": "2947378", "filtered-sentences": []}, {"Id": "97955944", "PostId": "55631418", "Score": "0", "Text": "Different errors. I will try to update the question after I collected them.", "CreationDate": "2019-04-11T12:25:38.160", "UserId": "1856759", "filtered-sentences": []}, {"Id": "97961805", "PostId": "55631418", "Score": "0", "Text": "@DroidX86 found that this answers it pretty well: https://serverfault.com/questions/876942/create-new-ec2-instance-with-existing-ebs-volume-as-root-device-using-cloudforma", "CreationDate": "2019-04-11T14:45:51.993", "UserId": "1856759", "filtered-sentences": [{"source": "Text", "text": "@DroidX86 found that this answers it pretty well: https://serverfault.com/questions/876942/create-new-ec2-instance-with-existing-ebs-volume-as-root-device-using-cloudforma", "keywords": ["instance"]}]}, {"Id": "97961849", "PostId": "55631418", "Score": "0", "Text": "Will update the question and mark it as duplicate tomorrow. Short: It is not possible to spawn the root volume as a separate EBS Volume, as AMI initialization will not allow it...", "CreationDate": "2019-04-11T14:46:56.500", "UserId": "1856759", "filtered-sentences": []}, {"Id": "97973563", "PostId": "55631418", "Score": "0", "Text": "You might want to check whether tags applied to an Amazon EC2 propagate to the EBS volumes. This is an option in the management console, but might be ON by default when launching through CloudFormation. The `RunInstances` documentation says \"The specified tags are applied to all instances or volumes that are created during launch.\"", "CreationDate": "2019-04-11T21:47:32.983", "UserId": "174777", "filtered-sentences": []}, {"Id": "97980420", "PostId": "55631418", "Score": "0", "Text": "One would think so. But they dont. Even tags applied to the \"stack\" do not propagate to the root volume.", "CreationDate": "2019-04-12T06:14:30.183", "UserId": "1856759", "filtered-sentences": []}, {"Id": "101894664", "PostId": "55631418", "Score": "0", "Text": "Workaround with aws-cli and EC2 userdata (Linux OS only)\nhttps://stackoverflow.com/questions/49891037/retrieve-correct-amazon-attached-ebs-device-from-instance-metadata-endpoint/55158550#55158550", "CreationDate": "2019-08-30T13:04:28.217", "UserId": "10374572", "filtered-sentences": [{"source": "Text", "text": "Workaround with aws-cli and EC2 userdata (Linux OS only) https://stackoverflow.com/questions/49891037/retrieve-correct-amazon-attached-ebs-device-from-instance-metadata-endpoint/55158550#55158550", "keywords": ["instance"]}]}], "history": [{"Id": "195585151", "PostHistoryTypeId": "2", "PostId": "55631418", "RevisionGUID": "ff403698-82ee-4c90-b5c4-044f08269a88", "CreationDate": "2019-04-11T11:27:12.523", "UserId": "1856759", "Text": "We want to **tag every resource of a cloudformation stack** with a specific tag (for billing and financial reasons). This includes the **main storage used on the main partition mounted under (/dev/sda1).**\r\n\r\nThis is what we have:\r\n```yaml\r\n---\r\nAWSTemplateFormatVersion: '2010-09-09'\r\nDescription: The Name\r\nParameters:\r\n  InstanceType:\r\n    Description: EC2 instance type\r\n    Type: String\r\n    Default: t3.small\r\n    AllowedValues:\r\n    - t3.nano\r\n    - ...\r\n  InstanceName:\r\n    Description: Name Tag\r\n    Type: String\r\nResources:\r\n  TheECCInstance:\r\n    Type: AWS::EC2::Instance\r\n    Properties:\r\n      KeyName: jenkins\r\n      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]\r\n      InstanceType:\r\n        Ref: InstanceType\r\n      SubnetId: subnet-0e9c7d7c2711aaf9e\r\n      BlockDeviceMappings:\r\n        - DeviceName: \"/dev/sda1\"\r\n          Ebs:\r\n            VolumeSize:\r\n              Ref: EBSBlockSize\r\n            VolumeType: gp2\r\n      Tags:\r\n      - Key: Name\r\n        Value:\r\n          Ref: InstanceName\r\n      - Key: Type\r\n        Value: TheType\r\n\r\nMappings:\r\n  RegionMap:\r\n    'ap-northeast-3':\r\n      NAME: ap-northeast-3b\r\n      AMI: 'ami-05e896b95030bd37c'\r\n    'sa-east-1':\r\n      NAME: sa-east-1b\r\n      AMI: 'ami-03c6239555bb12112'\r\n    'eu-west-1':\r\n      NAME: eu-west-1b\r\n      AMI: 'ami-00035f41c82244dab'\r\n    ...\r\n\r\nOutputs:\r\n  ...\r\n\r\n```\r\n\r\nI **would not mind using something like that**:\r\n```yaml\r\n  RootVolume:\r\n    Type: AWS::EC2::Volume      // Or Something in that direction (EFS / EBS / whatever)\r\n    Properties:\r\n      Size:\r\n        Ref: EBSBlockSize\r\n      VolumeType: gp2\r\n      AvailabilityZone: !FindInMap [RegionMap, !Ref 'AWS::Region', NAME]\r\n      Tags:\r\n        - Key: Type\r\n          Value: TheType\r\n```\r\n**and mounting it**. It just seems impossible, to get it attached as the main partition. Either as AWS::EC2::Volume, AWS::EFS, etc. Any help here would be appreciated. We currently create the instance and then tag after stack creation. But that seems somewhat fragile and there should be an easier way doing this....", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "We want to **tag every resource of a cloudformation stack** with a specific tag (for billing and financial reasons). ", "keywords": ["bill"]}, {"source": "Text", "text": "This includes the **main storage used on the main partition mounted under (/dev/sda1).** ", "keywords": ["storage"]}, {"source": "Text", "text": "This is what we have: ```yaml --- AWSTemplateFormatVersion: '2010-09-09' Description: The Name Parameters: InstanceType: Description: EC2 instance type Type: String Default: t3.small AllowedValues: - t3.nano - ... InstanceName: Description: Name Tag Type: String Resources: TheECCInstance: Type: AWS::EC2::Instance Properties: KeyName: jenkins ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI] InstanceType: Ref: InstanceType SubnetId: subnet-0e9c7d7c2711aaf9e BlockDeviceMappings: - DeviceName: \"/dev/sda1\" Ebs: VolumeSize: Ref: EBSBlockSize VolumeType: gp2 Tags: - Key: Name Value: Ref: InstanceName - Key: Type Value: TheType Mappings: RegionMap: 'ap-northeast-3': NAME: ap-northeast-3b AMI: 'ami-05e896b95030bd37c' 'sa-east-1': NAME: sa-east-1b AMI: 'ami-03c6239555bb12112' 'eu-west-1': NAME: eu-west-1b AMI: 'ami-00035f41c82244dab' ... Outputs: ... ``` I **would not mind using something like that**: ```yaml RootVolume: Type: AWS::EC2::Volume // Or Something in that direction (EFS / EBS / whatever) Properties: Size: Ref: EBSBlockSize VolumeType: gp2 AvailabilityZone: !FindInMap [RegionMap, !Ref 'AWS::Region', NAME] Tags: - Key: Type Value: TheType ``` **and mounting it**. ", "keywords": ["instance"]}, {"source": "Text", "text": "We currently create the instance and then tag after stack creation. ", "keywords": ["instance"]}]}, {"Id": "195585152", "PostHistoryTypeId": "1", "PostId": "55631418", "RevisionGUID": "ff403698-82ee-4c90-b5c4-044f08269a88", "CreationDate": "2019-04-11T11:27:12.523", "UserId": "1856759", "Text": "Set Tag on AWS::EC2::Instances BlockStorage of root Volume via CloudFormation", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "195585153", "PostHistoryTypeId": "3", "PostId": "55631418", "RevisionGUID": "ff403698-82ee-4c90-b5c4-044f08269a88", "CreationDate": "2019-04-11T11:27:12.523", "UserId": "1856759", "Text": "|amazon-web-services|configuration|tags|config|aws-cloudformation|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "55645802", "PostTypeId": "2", "ParentId": "55631418", "CreationDate": "2019-04-12T06:36:03.083", "Score": "2", "Body": "<h3>Not possible with cloud formation</h3>\n\n<p>It turns out, this is not possible with aws cloudformation. \nThis question hinted me to this answer: <a href=\"https://serverfault.com/questions/876942/create-new-ec2-instance-with-existing-ebs-volume-as-root-device-using-cloudforma\">https://serverfault.com/questions/876942/create-new-ec2-instance-with-existing-ebs-volume-as-root-device-using-cloudforma</a></p>\n\n<h3>Solution with terraform</h3>\n\n<p>It is pretty simple with \"terraform\": </p>\n\n<pre><code>\nresource \"aws_instance\" \"someName\" {\n  ami           = \"ami-***********\"\n  instance_type = \"t2.*******\"\n  tags          = {\n    Type = \"InstanceTag\"\n  }\n  volume_tags   = {\n    Type = \"VolumeTag\"\n  }\n}\n</code></pre>\n\n<h3>Our solution (Jenkins and shell script)</h3>\n\n<p>We use cloudformation to spawn our CI-Instances via jenkins. Moving to terraform would have resulted in more work then we were willing to take. We needed the tags for cost calculation. So when realizing that cloudformation was no option, we used the cli to tag the instances after they were created. </p>\n\n<p>Obviously, the awscli has to be installed. The credentials come via environment variables.</p>\n\n<p>Here is the script we used:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>sleep 1m\nEC2_VOLUMES=$(aws ec2 describe-instances --region \"${INSTANCE_REGION}\" --filter \"Name=tag-key,Values=Type\" \"Name=tag-value,Values=Jenkins\" --filter \"Name=tag-key,Values=Name\" \"Name=tag-value,Values=BackendJenkins${BUILD_NUMBER}\" --query \"Reservations[*].Instances[*].BlockDeviceMappings[*].Ebs.[VolumeId]\" --output text)\n\necho $AWS_SECRET_ACCESS_KEY | base64 -i &gt; foo.txt\n\nwhile read -r RESOURCE; do\n    # We set the name and the type tag\n    aws ec2 create-tags --resources \"$RESOURCE\" --region \"${INSTANCE_REGION}\" --tags \"Key=Type,Value=TheTagValue\"\n    aws ec2 create-tags --resources \"$RESOURCE\" --region \"${INSTANCE_REGION}\" --tags \"Key=Name,Value=TheInstanceName${BUILD_NUMBER}\"\ndone &lt;&lt;&lt; \"$EC2_VOLUMES\"\n\n</code></pre>\n\n<p>Thx for all the hints about spawning EC2::Volumes and Tag Propagation.</p>\n", "OwnerUserId": "1856759", "LastActivityDate": "2019-04-12T06:36:03.083", "CommentCount": "4", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "98273694", "PostId": "55645802", "Score": "0", "Text": "Actually the part about terraform is not correct. https://github.com/hashicorp/terraform/issues/3531", "CreationDate": "2019-04-23T00:06:57.100", "UserId": "1495765", "filtered-sentences": []}, {"Id": "98273728", "PostId": "55645802", "Score": "0", "Text": "I would also suggest a better approach that the script will only tag the EBS volumes based on the tags that the instance has, so the management of the tags is still under CloudFormation for traceability, and the automation only tag the EBS volumes from the instance tags already deployed (this is what we're doing)", "CreationDate": "2019-04-23T00:09:34.143", "UserId": "1495765", "filtered-sentences": [{"source": "Text", "text": "I would also suggest a better approach that the script will only tag the EBS volumes based on the tags that the instance has, so the management of the tags is still under CloudFormation for traceability, and the automation only tag the EBS volumes from the instance tags already deployed (this is what we're doing)", "keywords": ["instance"]}]}, {"Id": "98329965", "PostId": "55645802", "Score": "0", "Text": "@Dvir669 The Issue you mention was closed and resolved via: \n- https://github.com/hashicorp/terraform/pull/14007\nIt is indeed working for us as far as I can tell. Sorry if this was somehow misleading for you.", "CreationDate": "2019-04-24T14:37:47.490", "UserId": "1856759", "filtered-sentences": []}, {"Id": "98330187", "PostId": "55645802", "Score": "0", "Text": "@Dvir669 thx for the second hint. We currently use jenkins and can - as such - separate builds by build number. This means instances are generated with a unique name and a commit-sha, so we are pretty shure what was build and will be tagged.\n\nI proposed the solution as such is just a simplified version of what we do. Still it would be nice to have the ability being built into Cloudformation.\nThx for your ideas though.", "CreationDate": "2019-04-24T14:43:08.660", "UserId": "1856759", "filtered-sentences": []}], "history": [{"Id": "195644023", "PostHistoryTypeId": "2", "PostId": "55645802", "RevisionGUID": "c8598e9e-5a2d-4cdb-b4f3-3d208feebfee", "CreationDate": "2019-04-12T06:36:03.083", "UserId": "1856759", "Text": "### Not possible with cloud formation\r\nIt turns out, this is not possible with aws cloudformation. \r\nThis question hinted me to this answer: https://serverfault.com/questions/876942/create-new-ec2-instance-with-existing-ebs-volume-as-root-device-using-cloudforma\r\n\r\n### Solution with terraform\r\nIt is pretty simple with \"terraform\": \r\n\r\n```json\r\n\r\nresource \"aws_instance\" \"someName\" {\r\n  ami           = \"ami-***********\"\r\n  instance_type = \"t2.*******\"\r\n  tags          = {\r\n    Type = \"InstanceTag\"\r\n  }\r\n  volume_tags   = {\r\n    Type = \"VolumeTag\"\r\n  }\r\n}\r\n```\r\n\r\n### Our solution (Jenkins and shell script)\r\nWe use cloudformation to spawn our CI-Instances via jenkins. Moving to terraform would have resulted in more work then we were willing to take. We needed the tags for cost calculation. So when realizing that cloudformation was no option, we used the cli to tag the instances after they were created. \r\n\r\nObviously, the awscli has to be installed. The credentials come via environment variables.\r\n\r\nHere is the script we used:\r\n\r\n```sh\r\nsleep 1m\r\nEC2_VOLUMES=$(aws ec2 describe-instances --region \"${INSTANCE_REGION}\" --filter \"Name=tag-key,Values=Type\" \"Name=tag-value,Values=Jenkins\" --filter \"Name=tag-key,Values=Name\" \"Name=tag-value,Values=BackendJenkins${BUILD_NUMBER}\" --query \"Reservations[*].Instances[*].BlockDeviceMappings[*].Ebs.[VolumeId]\" --output text)\r\n\r\necho $AWS_SECRET_ACCESS_KEY | base64 -i > foo.txt\r\n\r\nwhile read -r RESOURCE; do\r\n    # We set the name and the type tag\r\n    aws ec2 create-tags --resources \"$RESOURCE\" --region \"${INSTANCE_REGION}\" --tags \"Key=Type,Value=TheTagValue\"\r\n    aws ec2 create-tags --resources \"$RESOURCE\" --region \"${INSTANCE_REGION}\" --tags \"Key=Name,Value=TheInstanceName${BUILD_NUMBER}\"\r\ndone <<< \"$EC2_VOLUMES\"\r\n\r\n```\r\n\r\nThx for all the hints about spawning EC2::Volumes and Tag Propagation.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "This question hinted me to this answer: https://serverfault.com/questions/876942/create-new-ec2-instance-with-existing-ebs-volume-as-root-device-using-cloudforma ### Solution with terraform ", "keywords": ["instance"]}, {"source": "Text", "text": "We needed the tags for cost calculation. ", "keywords": ["cost"]}]}], "filtered-sentences": [{"source": "Body", "text": "This question hinted me to this answer: https://serverfault.com/questions/876942/create-new-ec2-instance-with-existing-ebs-volume-as-root-device-using-cloudforma Solution with terraform ", "keywords": ["instance"]}, {"source": "Body", "text": "We needed the tags for cost calculation. ", "keywords": ["cost"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "We want to tag every resource of a cloudformation stack with a specific tag (for billing and financial reasons). ", "keywords": ["bill"]}, {"source": "Body", "text": "This includes the main storage used on the main partition mounted under (/dev/sda1). ", "keywords": ["storage"]}, {"source": "Body", "text": "We currently create the instance and then tag after stack creation. ", "keywords": ["instance"]}]}
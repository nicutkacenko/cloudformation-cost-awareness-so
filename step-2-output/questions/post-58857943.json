{"Id": "58857943", "PostTypeId": "1", "CreationDate": "2019-11-14T13:29:35.000", "Score": "0", "ViewCount": "135", "Body": "<p>I am trying to setup my windows 2016 instances in cloudformation stack and It requires some inputs from user that is taken in parameter section to be transferred into the instance and the software inside would require those parameters. Till now i only found that i can send it by parsing it inside a powershell script while saving the data into a text file. Is there anyother method? or more efficient method to do this???</p>\n", "OwnerUserId": "12369051", "LastActivityDate": "2019-11-14T23:42:33.823", "Title": "Parse user/metadata/runtime data from cloudformation into EC2", "Tags": "|windows|amazon-web-services|amazon-ec2|metadata|aws-cloudformation|", "AnswerCount": "2", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "209205840", "PostHistoryTypeId": "2", "PostId": "58857943", "RevisionGUID": "cd8f0933-7004-4ec9-ad99-82d1431c988c", "CreationDate": "2019-11-14T13:29:35.000", "UserId": "12369051", "Text": "I am trying to setup my windows 2016 instances in cloudformation stack and It requires some inputs from user that is taken in parameter section to be transferred into the instance and the software inside would require those parameters. Till now i only found that i can send it by parsing it inside a powershell script while saving the data into a text file. Is there anyother method? or more efficient method to do this???\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am trying to setup my windows 2016 instances in cloudformation stack and It requires some inputs from user that is taken in parameter section to be transferred into the instance and the software inside would require those parameters. ", "keywords": ["instance"]}, {"source": "Text", "text": "Is there anyother method? or more efficient method to do this???", "keywords": ["efficient"]}]}, {"Id": "209205841", "PostHistoryTypeId": "1", "PostId": "58857943", "RevisionGUID": "cd8f0933-7004-4ec9-ad99-82d1431c988c", "CreationDate": "2019-11-14T13:29:35.000", "UserId": "12369051", "Text": "Parse user/metadata/runtime data from cloudformation into EC2", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "209205842", "PostHistoryTypeId": "3", "PostId": "58857943", "RevisionGUID": "cd8f0933-7004-4ec9-ad99-82d1431c988c", "CreationDate": "2019-11-14T13:29:35.000", "UserId": "12369051", "Text": "|windows|amazon-web-services|amazon-ec2|metadata|aws-cloudformation|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "58868216", "PostTypeId": "2", "ParentId": "58857943", "CreationDate": "2019-11-14T23:42:33.823", "Score": "0", "Body": "<p>Here is an AWS CloudFormation template that can take a parameter from the CloudFormation stack and put that information onto the Windows instance:</p>\n\n<pre><code>AWSTemplateFormatVersion: 2010-09-09\n\nParameters:\n\n  Username:\n    Type: String\n    Description: Ask for a username, will be placed on the instance\n\n  WindowsAmiId:\n      Type: 'AWS::SSM::Parameter::Value&lt;AWS::EC2::Image::Id&gt;'\n      Default: /aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base\n\n  KeyName:\n    Type: String\n    Description: Keyname for the keypair to use when launching EC2 instances\n\nResources:\n\n  AppInstance:\n    Type: AWS::EC2::Instance\n    Properties:\n      KeyName: !Ref KeyName\n      ImageId: !Ref WindowsAmiId\n      InstanceType: t2.large\n      UserData:\n        Fn::Base64: !Sub |\n          &lt;powershell&gt;\n          Set-Content -Path 'C:\\username.txt' -Value '${Username}'\n          &lt;/powershell&gt;\n</code></pre>\n\n<p>The result is a file in <code>C:\\username.txt</code> that contains the <code>Username</code> parameter that was provided when the stack was launched.</p>\n\n<p>Alternatively, you could call <code>describe-stack</code> to retrieve the parameters.</p>\n", "OwnerUserId": "174777", "LastActivityDate": "2019-11-14T23:42:33.823", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "209243978", "PostHistoryTypeId": "2", "PostId": "58868216", "RevisionGUID": "e66c78c2-0816-4074-b470-3c43347198a7", "CreationDate": "2019-11-14T23:42:33.823", "UserId": "174777", "Text": "Here is an AWS CloudFormation template that can take a parameter from the CloudFormation stack and put that information onto the Windows instance:\r\n\r\n```json\r\nAWSTemplateFormatVersion: 2010-09-09\r\n\r\nParameters:\r\n\r\n  Username:\r\n    Type: String\r\n    Description: Ask for a username, will be placed on the instance\r\n\r\n  WindowsAmiId:\r\n      Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'\r\n      Default: /aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base\r\n\r\n  KeyName:\r\n    Type: String\r\n    Description: Keyname for the keypair to use when launching EC2 instances\r\n\r\nResources:\r\n\r\n  AppInstance:\r\n    Type: AWS::EC2::Instance\r\n    Properties:\r\n      KeyName: !Ref KeyName\r\n      ImageId: !Ref WindowsAmiId\r\n      InstanceType: t2.large\r\n      UserData:\r\n        Fn::Base64: !Sub |\r\n          <powershell>\r\n          Set-Content -Path 'C:\\username.txt' -Value '${Username}'\r\n          </powershell>\r\n```\r\n\r\nThe result is a file in `C:\\username.txt` that contains the `Username` parameter that was provided when the stack was launched.\r\n\r\nAlternatively, you could call `describe-stack` to retrieve the parameters.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Here is an AWS CloudFormation template that can take a parameter from the CloudFormation stack and put that information onto the Windows instance: ```json AWSTemplateFormatVersion: 2010-09-09 Parameters: Username: Type: String Description: Ask for a username, will be placed on the instance WindowsAmiId: Type: 'AWS::SSM::Parameter::Value' Default: /aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base KeyName: Type: String Description: Keyname for the keypair to use when launching EC2 instances Resources: AppInstance: Type: AWS::EC2::Instance Properties: KeyName: !Ref KeyName ImageId: !Ref WindowsAmiId InstanceType: t2.large UserData: Fn::Base64: !Sub | Set-Content -Path 'C:\\username.txt' -Value '${Username}' ``` The result is a file in `C:\\username.txt` that contains the `Username` parameter that was provided when the stack was launched", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "Here is an AWS CloudFormation template that can take a parameter from the CloudFormation stack and put that information onto the Windows instance: The result is a file in C:\\username.txt that contains the Username parameter that was provided when the stack was launched. ", "keywords": ["instance"]}]}, {"Id": "58864036", "PostTypeId": "2", "ParentId": "58857943", "CreationDate": "2019-11-14T19:01:17.857", "Score": "0", "Body": "<p>See <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-windows-stacks-bootstrapping.html\" rel=\"nofollow noreferrer\">Bootstrapping AWS CloudFormation Windows Stacks</a>.</p>\n\n<p>In short, you typically use <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-init.html\" rel=\"nofollow noreferrer\">AWS::CloudFormation::Init</a> metadata and <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-init.html\" rel=\"nofollow noreferrer\"><code>cfn-init</code></a> in <code>UserData</code> to bootstrap and initialize your instances.</p>\n", "OwnerUserId": "303810", "LastActivityDate": "2019-11-14T19:01:17.857", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "209230141", "PostHistoryTypeId": "2", "PostId": "58864036", "RevisionGUID": "4d268246-6168-408e-a65c-8d6ed64bfd7b", "CreationDate": "2019-11-14T19:01:17.857", "UserId": "303810", "Text": "See [Bootstrapping AWS CloudFormation Windows Stacks](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-windows-stacks-bootstrapping.html).\r\n\r\nIn short, you typically use [AWS::CloudFormation::Init](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-init.html) metadata and [`cfn-init`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-init.html) in `UserData` to bootstrap and initialize your instances.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I am trying to setup my windows 2016 instances in cloudformation stack and It requires some inputs from user that is taken in parameter section to be transferred into the instance and the software inside would require those parameters. ", "keywords": ["instance"]}, {"source": "Body", "text": "Is there anyother method? or more efficient method to do this???", "keywords": ["efficient"]}]}
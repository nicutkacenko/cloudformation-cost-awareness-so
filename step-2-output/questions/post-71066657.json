{"Id": "71066657", "PostTypeId": "1", "AcceptedAnswerId": "71204948", "CreationDate": "2022-02-10T14:13:03.717", "Score": "1", "ViewCount": "1507", "Body": "<p>I'm starting to think there is a fundamental flaw in AWS Cloudformation Template validation/resource lookup related to <code>&quot;Type&quot;: &quot;AWS::ElasticLoadBalancingV2::ListenerRule&quot;,</code> resources.</p>\n<p>Specifically, every time I try to create a new ListenerRule for known working Listeners, Cloudformation errors out with</p>\n<pre><code>Unable to retrieve ListenerArn attribute for AWS::ElasticLoadBalancingV2::Listener, with error message One or more listeners not found (Service: ElasticLoadBalancingV2, Status Code: 400, Request ID: c6914f71-074c-4367-983a-bcf1d8fd1350, Extended Request ID: null)\n</code></pre>\n<p>Upon testing, I can make it work by hardcoding the ListenArn attribute in my template, but that's not a solution since the template is used for multiple Stacks with different resources.</p>\n<p>Below are the relevant parts of the template:</p>\n<pre><code>    &quot;WLBListenerHttp&quot;: {\n      &quot;Type&quot;: &quot;AWS::ElasticLoadBalancingV2::Listener&quot;,\n      &quot;Properties&quot;: {\n        &quot;DefaultActions&quot;: [{\n          &quot;Type&quot;: &quot;forward&quot;,\n          &quot;TargetGroupArn&quot;: { &quot;Ref&quot;: &quot;WLBTargetGroupHttp&quot; }\n        }],\n        &quot;LoadBalancerArn&quot;: { &quot;Ref&quot;: &quot;WebLoadBalancer&quot; },\n        &quot;Port&quot;: 80,\n        &quot;Protocol&quot;: &quot;HTTP&quot;\n      }\n    },\n    &quot;ListenerRuleHttp&quot;: {\n      &quot;DependsOn&quot;: &quot;WLBListenerHttp&quot;,\n      &quot;Type&quot;: &quot;AWS::ElasticLoadBalancingV2::ListenerRule&quot;,\n      &quot;Properties&quot;: {\n        &quot;Actions&quot;: [{\n          &quot;Type&quot;: &quot;fixed-response&quot;,\n          &quot;FixedResponseConfig&quot;: { &quot;StatusCode&quot;: &quot;200&quot; }\n        }],\n        &quot;Conditions&quot;: [{\n          &quot;Field&quot;: &quot;host-header&quot;,\n          &quot;HostHeaderConfig&quot;: { &quot;Values&quot;: [&quot;domain*&quot;] }\n        }, {\n          &quot;Field&quot;: &quot;path-pattern&quot;,\n          &quot;PathPatternConfig&quot;: { &quot;Values&quot;: [&quot;/path/to/respond/to&quot;] }\n        }],\n        &quot;ListenerArn&quot;: { &quot;Fn::GetAtt&quot;: [&quot;WLBListenerHttp&quot;, &quot;ListenerArn&quot;] },\n        &quot;Priority&quot;: 1\n      }\n    },\n</code></pre>\n<p>Per the documentation on listeners, Fn::GetAtt or Ref should both return the ListenerARN:\n<a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html\" rel=\"nofollow noreferrer\">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html</a></p>\n<p>&quot;Return values\nRef\nWhen you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the Amazon Resource Name (ARN) of the listener.</p>\n<p>For more information about using the Ref function, see Ref.</p>\n<p>Fn::GetAtt\nThe Fn::GetAtt intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.</p>\n<p>For more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt.</p>\n<p>ListenerArn\nThe Amazon Resource Name (ARN) of the listener.&quot;</p>\n<p>I've tried both <code>&quot;ListenerArn&quot;: { &quot;Fn::GetAtt&quot;: [&quot;WLBListenerHttp&quot;, &quot;ListenerArn&quot;] },</code> and <code>&quot;ListenerArn&quot;: { &quot;Ref&quot;: &quot;WLBListenerHttp&quot;},</code> with no success, resulting in the error noted. If I hardcode the Arn <code>&quot;ListenerArn&quot;: &quot;arn::&quot;,</code> with the full Arn, it works fine.</p>\n", "OwnerUserId": "9964074", "LastEditorUserId": "9964074", "LastEditDate": "2022-02-10T16:07:27.660", "LastActivityDate": "2022-02-21T10:46:23.767", "Title": "How do I successfully retrieve an ALB ListenerArn with CloudFormation to setup ListenerRules?", "Tags": "|amazon-web-services|aws-cloudformation|amazon-elb|", "AnswerCount": "1", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "125643861", "PostId": "71066657", "Score": "0", "Text": "I see you tried \"ListenerArn\": { \"Ref\": \"WLBListenerHttp\"}.  I think that is correct...", "CreationDate": "2022-02-11T06:18:51.653", "UserId": "168589", "filtered-sentences": []}, {"Id": "125657937", "PostId": "71066657", "Score": "0", "Text": "@TimBassett yes I tried that with the same result. I really feel like this might be an issue at AWS, but their support team all but ignored my request because we don't pay for support.  We use references to hundreds of items in our template (it's a full 3 tier web application stack) and they all work fine, but for whatever reason this one just doesn't.", "CreationDate": "2022-02-11T17:27:08.893", "UserId": "9964074", "filtered-sentences": [{"source": "Text", "text": "I really feel like this might be an issue at AWS, but their support team all but ignored my request because we don't pay for support. ", "keywords": ["pay"]}]}], "history": [{"Id": "263849541", "PostHistoryTypeId": "6", "PostId": "71066657", "RevisionGUID": "f4079dd4-8ee2-435f-a444-a59c74a7f280", "CreationDate": "2022-02-10T16:07:27.660", "UserId": "9964074", "Comment": "edited tags", "Text": "|amazon-web-services|aws-cloudformation|amazon-elb|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "263840316", "PostHistoryTypeId": "2", "PostId": "71066657", "RevisionGUID": "09d79c3e-3f67-4b8e-9a27-f234f78afca8", "CreationDate": "2022-02-10T14:13:03.717", "UserId": "9964074", "Text": "I'm starting to think there is a fundamental flaw in AWS Cloudformation Template validation/resource lookup related to `\"Type\": \"AWS::ElasticLoadBalancingV2::ListenerRule\",` resources.  \r\n\r\nSpecifically, every time I try to create a new ListenerRule for known working Listeners, Cloudformation errors out with \r\n\r\n    Unable to retrieve ListenerArn attribute for AWS::ElasticLoadBalancingV2::Listener, with error message One or more listeners not found (Service: ElasticLoadBalancingV2, Status Code: 400, Request ID: c6914f71-074c-4367-983a-bcf1d8fd1350, Extended Request ID: null)\r\n\r\nUpon testing, I can make it work by hardcoding the ListenArn attribute in my template, but that's not a solution since the template is used for multiple Stacks with different resources. \r\n\r\nBelow are the relevant parts of the template:\r\n\r\n   \r\n\r\n        \"WLBListenerHttp\": {\r\n          \"Type\": \"AWS::ElasticLoadBalancingV2::Listener\",\r\n          \"Properties\": {\r\n            \"DefaultActions\": [{\r\n              \"Type\": \"forward\",\r\n              \"TargetGroupArn\": { \"Ref\": \"WLBTargetGroupHttp\" }\r\n            }],\r\n            \"LoadBalancerArn\": { \"Ref\": \"WebLoadBalancer\" },\r\n            \"Port\": 80,\r\n            \"Protocol\": \"HTTP\"\r\n          }\r\n        },\r\n        \"ListenerRuleHttp\": {\r\n          \"DependsOn\": \"WLBListenerHttp\",\r\n          \"Type\": \"AWS::ElasticLoadBalancingV2::ListenerRule\",\r\n          \"Properties\": {\r\n            \"Actions\": [{\r\n              \"Type\": \"fixed-response\",\r\n              \"FixedResponseConfig\": { \"StatusCode\": \"200\" }\r\n            }],\r\n            \"Conditions\": [{\r\n              \"Field\": \"host-header\",\r\n              \"HostHeaderConfig\": { \"Values\": [\"domain*\"] }\r\n            }, {\r\n              \"Field\": \"path-pattern\",\r\n              \"PathPatternConfig\": { \"Values\": [\"/path/to/respond/to\"] }\r\n            }],\r\n            \"ListenerArn\": { \"Fn::GetAtt\": [\"WLBListenerHttp\", \"ListenerArn\"] },\r\n            \"Priority\": 1\r\n          }\r\n        },\r\n\r\n\r\n\r\n\r\nPer the documentation on listeners, Fn::GetAtt or Ref should both return the ListenerARN:\r\nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html\r\n\r\n\"Return values\r\nRef\r\nWhen you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the Amazon Resource Name (ARN) of the listener.\r\n\r\nFor more information about using the Ref function, see Ref.\r\n\r\nFn::GetAtt\r\nThe Fn::GetAtt intrinsic function returns a value for a specified attribute of this type. The following are the available attributes and sample return values.\r\n\r\nFor more information about using the Fn::GetAtt intrinsic function, see Fn::GetAtt.\r\n\r\nListenerArn\r\nThe Amazon Resource Name (ARN) of the listener.\"\r\n\r\nI've tried both `\"ListenerArn\": { \"Fn::GetAtt\": [\"WLBListenerHttp\", \"ListenerArn\"] },` and `\"ListenerArn\": { \"Ref\": \"WLBListenerHttp\"},` with no success, resulting in the error noted. If I hardcode the Arn `\"ListenerArn\": \"arn::\",` with the full Arn, it works fine.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Specifically, every time I try to create a new ListenerRule for known working Listeners, Cloudformation errors out with Unable to retrieve ListenerArn attribute for AWS::ElasticLoadBalancingV2::Listener, with error message One or more listeners not found (Service: ElasticLoadBalancingV2, Status Code: 400, Request ID: c6914f71-074c-4367-983a-bcf1d8fd1350, Extended Request ID: null) Upon testing, I can make it work by hardcoding the ListenArn attribute in my template, but that's not a solution since the template is used for multiple Stacks with different resources. ", "keywords": ["test"]}, {"source": "Text", "text": "Below are the relevant parts of the template: \"WLBListenerHttp\": { \"Type\": \"AWS::ElasticLoadBalancingV2::Listener\", \"Properties\": { \"DefaultActions\": [{ \"Type\": \"forward\", \"TargetGroupArn\": { \"Ref\": \"WLBTargetGroupHttp\" } }], \"LoadBalancerArn\": { \"Ref\": \"WebLoadBalancer\" }, \"Port\": 80, \"Protocol\": \"HTTP\" } }, \"ListenerRuleHttp\": { \"DependsOn\": \"WLBListenerHttp\", \"Type\": \"AWS::ElasticLoadBalancingV2::ListenerRule\", \"Properties\": { \"Actions\": [{ \"Type\": \"fixed-response\", \"FixedResponseConfig\": { \"StatusCode\": \"200\" } }], \"Conditions\": [{ \"Field\": \"host-header\", \"HostHeaderConfig\": { \"Values\": [\"domain*\"] } }, { \"Field\": \"path-pattern\", \"PathPatternConfig\": { \"Values\": [\"/path/to/respond/to\"] } }], \"ListenerArn\": { \"Fn::GetAtt\": [\"WLBListenerHttp\", \"ListenerArn\"] }, \"Priority\": 1 } }, Per the documentation on listeners, Fn::GetAtt or Ref should both return the ListenerARN: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html \"Return values Ref When you pass the logical ID of this resource to the intrinsic Ref function, Ref returns the Amazon Resource Name (ARN) of the listener. ", "keywords": ["domain"]}]}, {"Id": "263840318", "PostHistoryTypeId": "1", "PostId": "71066657", "RevisionGUID": "09d79c3e-3f67-4b8e-9a27-f234f78afca8", "CreationDate": "2022-02-10T14:13:03.717", "UserId": "9964074", "Text": "How do I successfully retrieve an ALB ListenerArn with CloudFormation to setup ListenerRules?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "263840319", "PostHistoryTypeId": "3", "PostId": "71066657", "RevisionGUID": "09d79c3e-3f67-4b8e-9a27-f234f78afca8", "CreationDate": "2022-02-10T14:13:03.717", "UserId": "9964074", "Text": "|json|amazon-web-services|aws-cloudformation|amazon-elb|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "71204948", "PostTypeId": "2", "ParentId": "71066657", "CreationDate": "2022-02-21T10:46:23.767", "Score": "1", "Body": "<p>As it turns out, my syntax was perfectly fine.  However, what I didn't realize is that while the WLBListenerHttp resource existed, it was not actually the same ARN as the one created by CloudFormation.  Apparently, someone accidentally deleted it at some point without telling us and then manually recreated it.  This left the account in a broken state where CloudFormation had an ARN recorded for the listener from when it was created, but it was truly no longer valid since the new resource had a new ARN.</p>\n<p>The solution to this was to delete the offending resource manually, then change the name of it slightly in our CloudFormation templates so it would create a new one.</p>\n", "OwnerUserId": "9964074", "LastActivityDate": "2022-02-21T10:46:23.767", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "264581321", "PostHistoryTypeId": "2", "PostId": "71204948", "RevisionGUID": "5bb544a5-77b6-4e9b-bbc2-ff3073b79d2d", "CreationDate": "2022-02-21T10:46:23.767", "UserId": "9964074", "Text": "As it turns out, my syntax was perfectly fine.  However, what I didn't realize is that while the WLBListenerHttp resource existed, it was not actually the same ARN as the one created by CloudFormation.  Apparently, someone accidentally deleted it at some point without telling us and then manually recreated it.  This left the account in a broken state where CloudFormation had an ARN recorded for the listener from when it was created, but it was truly no longer valid since the new resource had a new ARN.\r\n\r\nThe solution to this was to delete the offending resource manually, then change the name of it slightly in our CloudFormation templates so it would create a new one.  ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The solution to this was to delete the offending resource manually, then change the name of it slightly in our CloudFormation templates so it would create a new one.", "keywords": ["change"]}]}], "filtered-sentences": [{"source": "Body", "text": "The solution to this was to delete the offending resource manually, then change the name of it slightly in our CloudFormation templates so it would create a new one.", "keywords": ["change"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "Specifically, every time I try to create a new ListenerRule for known working Listeners, Cloudformation errors out with Upon testing, I can make it work by hardcoding the ListenArn attribute in my template, but that's not a solution since the template is used for multiple Stacks with different resources. ", "keywords": ["test"]}]}
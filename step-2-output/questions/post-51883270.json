{"Id": "51883270", "PostTypeId": "1", "CreationDate": "2018-08-16T18:27:13.597", "Score": "7", "ViewCount": "5628", "Body": "<p>From the AWS docs </p>\n\n<p><a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-signal.html\" rel=\"noreferrer\">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-signal.html</a></p>\n\n<blockquote>\n  <p>A common usage pattern is to use cfn-init and cfn-signal together. The\n  cfn-signal call uses the return status of the call to cfn-init (using\n  the $? shell construct). If the application fails to install, the\n  instance will fail to create and the stack will rollback.</p>\n</blockquote>\n\n<p>Below is my stack</p>\n\n<pre><code>{\n    \"AWSTemplateFormatVersion\" : \"2010-09-09\",\n\n    \"Description\" : \"AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create an Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based on the region in which the stack is run. This example creates an EC2 security group for the instance to give you SSH access. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.\",\n\n    \"Parameters\" : {\n      \"KeyName\": {\n        \"Description\" : \"Name of an existing EC2 KeyPair to enable SSH access to the instance\",\n        \"Type\": \"AWS::EC2::KeyPair::KeyName\",\n        \"ConstraintDescription\" : \"Must be the name of an existing EC2 KeyPair.\"\n      },\n\n      \"InstanceType\" : {\n        \"Description\" : \"WebServer EC2 instance type\",\n        \"Type\" : \"String\",\n        \"Default\" : \"t2.micro\",\n        \"AllowedValues\" : [ \"t1.micro\", \"t2.nano\", \"t2.micro\", \"t2.small\", \"t2.medium\", \"t2.large\", \"m1.small\", \"m1.medium\",\n                            \"m1.large\", \"m1.xlarge\", \"m2.xlarge\", \"m2.2xlarge\", \"m2.4xlarge\", \"m3.medium\", \"m3.large\", \"m3.xlarge\", \n                            \"m3.2xlarge\", \"m4.large\", \"m4.xlarge\", \"m4.2xlarge\", \"m4.4xlarge\", \"m4.10xlarge\", \"c1.medium\", \"c1.xlarge\", \n                            \"c3.large\", \"c3.xlarge\", \"c3.2xlarge\", \"c3.4xlarge\", \"c3.8xlarge\", \"c4.large\", \"c4.xlarge\", \"c4.2xlarge\", \"c4.4xlarge\",\n                            \"c4.8xlarge\", \"g2.2xlarge\", \"g2.8xlarge\", \"r3.large\", \"r3.xlarge\", \"r3.2xlarge\", \"r3.4xlarge\", \"r3.8xlarge\", \"i2.xlarge\",\n                            \"i2.2xlarge\", \"i2.4xlarge\", \"i2.8xlarge\", \"d2.xlarge\", \"d2.2xlarge\", \"d2.4xlarge\", \"d2.8xlarge\"]\n  ,\n        \"ConstraintDescription\" : \"Must be a valid EC2 instance type.\"\n      },\n\n      \"SSHLocation\" : {\n        \"Description\" : \"The IP address range that can be used to SSH to the EC2 instances\",\n        \"Type\": \"String\",\n        \"MinLength\": \"9\",\n        \"MaxLength\": \"18\",\n        \"Default\": \"0.0.0.0/0\",\n        \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\",\n        \"ConstraintDescription\": \"Must be a valid IP CIDR range of the form x.x.x.x/x.\"\n     }\n    },\n\n    \"Mappings\" : {\n      \"AWSInstanceType2Arch\" : {\n        \"t1.micro\"    : { \"Arch\" : \"PV64\"   }, \"t2.nano\"     : { \"Arch\" : \"HVM64\"  }, \"t2.micro\"    : { \"Arch\" : \"HVM64\"  },\n        \"t2.small\"    : { \"Arch\" : \"HVM64\"  }, \"t2.medium\"   : { \"Arch\" : \"HVM64\"  }, \"t2.large\"    : { \"Arch\" : \"HVM64\"  },\n        \"m1.small\"    : { \"Arch\" : \"PV64\"   }, \"m1.medium\"   : { \"Arch\" : \"PV64\"   }, \"m1.large\"    : { \"Arch\" : \"PV64\"   },\n        \"m1.xlarge\"   : { \"Arch\" : \"PV64\"   }, \"m2.xlarge\"   : { \"Arch\" : \"PV64\"   }, \"m2.2xlarge\"  : { \"Arch\" : \"PV64\"   },\n        \"m2.4xlarge\"  : { \"Arch\" : \"PV64\"   }, \"m3.medium\"   : { \"Arch\" : \"HVM64\"  }, \"m3.large\"    : { \"Arch\" : \"HVM64\"  },\n        \"m3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"m3.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"m4.large\"    : { \"Arch\" : \"HVM64\"  },\n        \"m4.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"m4.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"m4.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"m4.10xlarge\" : { \"Arch\" : \"HVM64\"  }, \"c1.medium\"   : { \"Arch\" : \"PV64\"   }, \"c1.xlarge\"   : { \"Arch\" : \"PV64\"   },\n        \"c3.large\"    : { \"Arch\" : \"HVM64\"  }, \"c3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"c3.2xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"c3.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c3.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c4.large\"    : { \"Arch\" : \"HVM64\"  },\n        \"c4.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"c4.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c4.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"c4.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"g2.2xlarge\"  : { \"Arch\" : \"HVMG2\"  }, \"g2.8xlarge\"  : { \"Arch\" : \"HVMG2\"  },\n        \"r3.large\"    : { \"Arch\" : \"HVM64\"  }, \"r3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"r3.2xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"r3.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"r3.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.xlarge\"   : { \"Arch\" : \"HVM64\"  },\n        \"i2.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.8xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"d2.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"d2.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"d2.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"d2.8xlarge\"  : { \"Arch\" : \"HVM64\"  }\n      }\n  ,\n      \"AWSRegionArch2AMI\" : {\n        \"us-east-1\"        : {\"PV64\" : \"ami-2a69aa47\", \"HVM64\" : \"ami-97785bed\", \"HVMG2\" : \"ami-0a6e3770\"},\n        \"us-west-2\"        : {\"PV64\" : \"ami-7f77b31f\", \"HVM64\" : \"ami-f2d3638a\", \"HVMG2\" : \"ami-ee15a196\"},\n        \"us-west-1\"        : {\"PV64\" : \"ami-a2490dc2\", \"HVM64\" : \"ami-824c4ee2\", \"HVMG2\" : \"ami-0da4a46d\"},\n        \"eu-west-1\"        : {\"PV64\" : \"ami-4cdd453f\", \"HVM64\" : \"ami-d834aba1\", \"HVMG2\" : \"ami-af8013d6\"},\n        \"eu-west-2\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-403e2524\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"eu-west-3\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-8ee056f3\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"eu-central-1\"     : {\"PV64\" : \"ami-6527cf0a\", \"HVM64\" : \"ami-5652ce39\", \"HVMG2\" : \"ami-1d58ca72\"},\n        \"ap-northeast-1\"   : {\"PV64\" : \"ami-3e42b65f\", \"HVM64\" : \"ami-ceafcba8\", \"HVMG2\" : \"ami-edfd658b\"},\n        \"ap-northeast-2\"   : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-863090e8\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"ap-northeast-3\"   : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-83444afe\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"ap-southeast-1\"   : {\"PV64\" : \"ami-df9e4cbc\", \"HVM64\" : \"ami-68097514\", \"HVMG2\" : \"ami-c06013bc\"},\n        \"ap-southeast-2\"   : {\"PV64\" : \"ami-63351d00\", \"HVM64\" : \"ami-942dd1f6\", \"HVMG2\" : \"ami-85ef12e7\"},\n        \"ap-south-1\"       : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-531a4c3c\", \"HVMG2\" : \"ami-411e492e\"},\n        \"us-east-2\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-f63b1193\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"ca-central-1\"     : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-a954d1cd\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"sa-east-1\"        : {\"PV64\" : \"ami-1ad34676\", \"HVM64\" : \"ami-84175ae8\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"cn-north-1\"       : {\"PV64\" : \"ami-77559f1a\", \"HVM64\" : \"ami-cb19c4a6\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"cn-northwest-1\"   : {\"PV64\" : \"ami-80707be2\", \"HVM64\" : \"ami-3e60745c\", \"HVMG2\" : \"NOT_SUPPORTED\"}\n      }\n\n    },\n\n    \"Resources\" : {\n      \"EC2Instance\" : {\n        \"Type\" : \"AWS::EC2::Instance\",\n        \"Metadata\" : {\n          \"AWS::CloudFormation::Init\" : {\n              \"configSets\" : {\n                  \"InstallAndRun\" : [ \"config1\", \"config2\" ]\n              },\n              \"config1\" : {\n                  \"packages\" : {\n                      \"yum\" : {\n                          \"httpd\" : []\n                      }\n                  },\n                  \"files\" : {\n                      \"/var/www/html/index.html\" : {\n                          \"mode\" : \"000644\", \n                          \"owner\" : \"apache\", \n                          \"group\" : \"apache\",\n                          \"source\" : \"https://s3.amazonaws.com/pcr-docs/index.html\"\n                      }\n                  }\n              },\n              \"config2\" : {\n                  \"services\" : {\n                      \"sysvinit\" : {\n                          \"httpd\" : {\n                              \"enabled\" : \"true\",\n                              \"ensureRunning\" : \"true\",\n                              \"packages\" : { \"yum\" : [\"httpd\"] }\n                          }\n                      }\n                  }\n              }\n          }\n      },\n        \"Properties\" : {\n          \"InstanceType\" : { \"Ref\" : \"InstanceType\" },\n          \"SecurityGroups\" : [ { \"Ref\" : \"InstanceSecurityGroup\" } ],\n          \"KeyName\" : { \"Ref\" : \"KeyName\" },\n          \"ImageId\" : { \"Fn::FindInMap\" : [ \"AWSRegionArch2AMI\", { \"Ref\" : \"AWS::Region\" },\n                            { \"Fn::FindInMap\" : [ \"AWSInstanceType2Arch\", { \"Ref\" : \"InstanceType\" }, \"Arch\" ] } ] },\n          \"UserData\" : { \"Fn::Base64\" :\n                              { \"Fn::Join\" : [\"\", [\n                                 \"#!/bin/bash -xe\\n\",\n                                 \"yum update -y aws-cfn-bootstrap\\n\",\n                                 \"# Install the files and packages from the metadata\\n\",\n                                 \"/opt/aws/bin/cfn-init -v \",\n                                 \"         --stack \", { \"Ref\" : \"AWS::StackName\" },\n                                 \"         --resource EC2Instance \",\n                                 \"         --configsets InstallAndRun \",\n                                 \"         --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\",\n                                 \"# Signal the status from cfn-init\\n\",\n                                 \"/opt/aws/bin/cfn-signal -e $? \",\n                                 \"         --stack \", { \"Ref\" : \"AWS::StackName\" },\n                                 \"         --resource EC2Instance \",\n                                 \"         --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\"\n                              ]]}\n                      }                  \n        }\n      },\n\n      \"InstanceSecurityGroup\" : {\n        \"Type\" : \"AWS::EC2::SecurityGroup\",\n        \"Properties\" : {\n          \"GroupDescription\" : \"Enable SSH access via port 22\",\n          \"SecurityGroupIngress\" : [ \n            { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"22\", \"ToPort\" : \"22\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} },\n            { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"80\", \"ToPort\" : \"80\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} }\n           ]\n        }\n      }\n    },\n\n    \"Outputs\" : {\n      \"InstanceId\" : {\n        \"Description\" : \"InstanceId of the newly created EC2 instance\",\n        \"Value\" : { \"Ref\" : \"EC2Instance\" }\n      },\n      \"AZ\" : {\n        \"Description\" : \"Availability Zone of the newly created EC2 instance\",\n        \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"AvailabilityZone\" ] }\n      },\n      \"PublicDNS\" : {\n        \"Description\" : \"Public DNSName of the newly created EC2 instance\",\n        \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicDnsName\" ] }\n      },\n      \"PublicIP\" : {\n        \"Description\" : \"Public IP address of the newly created EC2 instance\",\n        \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicIp\" ] }\n      }\n    }\n  }\n</code></pre>\n\n<p>It creates the EC2 Instance and runs the cfn-init defined as Instance Metadata, Installs the httpd and copies the index.html file to /var/www/html/index.html</p>\n\n<p>Although stack created the EC2 Instance and reached to CREATE_COMPLETE state, but when I check the System Logs for the Instance from EC2 console. I see an error on cfn-signal , looks like Cloudformation stack was already reached to CREATE_COMPLETE state hence signaling after CREATE_COMPLETE doesn't make sense</p>\n\n<pre><code>Updated:\n  aws-cfn-bootstrap.noarch 0:1.4-30.21.amzn1                                    \n\nComplete!\n+ /opt/aws/bin/cfn-init -v --stack EC2-cfn-init --resource EC2Instance --configsets InstallAndRun --region us-east-1\n+ /opt/aws/bin/cfn-signal -e 0 --stack EC2-cfn-init --resource EC2Instance --region us-east-1\nValidationError: Stack arn:aws:cloudformation:us-east-1:472821263165:stack/EC2-cfn-init/1f08fc80-a148-11e8-9779-500c28b3e2d2 is in CREATE_COMPLETE state and cannot be signaled\nAug 16 11:34:04 cloud-init[2680]: util.py[WARNING]: Failed running /var/lib/cloud/instance/scripts/part-001 [1]\n</code></pre>\n\n<p>Also If I remove the cfn-signal altogether and just cfn-init to run the Init Metadata script it works the same, stack reaches to CREATE_COMPLETE after creating the Instance. </p>\n\n<p>Again from the docs</p>\n\n<blockquote>\n  <p>You use the cfn-signal script in conjunction with a CreationPolicy or\n  an Auto Scaling group with a WaitOnResourceSignals update policy. When\n  AWS CloudFormation creates or updates resources with those policies,\n  it suspends work on the stack until the resource receives the\n  requisite number of signals or until the timeout period is exceeded.</p>\n</blockquote>\n\n<p>But I'm not clear on when and how we should use cfn-signal?</p>\n", "OwnerUserId": "2947158", "LastActivityDate": "2018-08-17T11:33:31.713", "Title": "Understanding use of CloudFormation cfn-signal", "Tags": "|amazon-web-services|aws-cloudformation|", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "179899609", "PostHistoryTypeId": "2", "PostId": "51883270", "RevisionGUID": "0ec7b1dd-20f3-49e6-9ab0-bb5b146bb9c6", "CreationDate": "2018-08-16T18:27:13.597", "UserId": "2947158", "Text": "From the AWS docs \r\n\r\nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-signal.html\r\n\r\n> A common usage pattern is to use cfn-init and cfn-signal together. The\r\n> cfn-signal call uses the return status of the call to cfn-init (using\r\n> the $? shell construct). If the application fails to install, the\r\n> instance will fail to create and the stack will rollback.\r\n\r\nBelow is my stack\r\n\r\n    {\r\n        \"AWSTemplateFormatVersion\" : \"2010-09-09\",\r\n      \r\n        \"Description\" : \"AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create an Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based on the region in which the stack is run. This example creates an EC2 security group for the instance to give you SSH access. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.\",\r\n      \r\n        \"Parameters\" : {\r\n          \"KeyName\": {\r\n            \"Description\" : \"Name of an existing EC2 KeyPair to enable SSH access to the instance\",\r\n            \"Type\": \"AWS::EC2::KeyPair::KeyName\",\r\n            \"ConstraintDescription\" : \"Must be the name of an existing EC2 KeyPair.\"\r\n          },\r\n      \r\n          \"InstanceType\" : {\r\n            \"Description\" : \"WebServer EC2 instance type\",\r\n            \"Type\" : \"String\",\r\n            \"Default\" : \"t2.micro\",\r\n            \"AllowedValues\" : [ \"t1.micro\", \"t2.nano\", \"t2.micro\", \"t2.small\", \"t2.medium\", \"t2.large\", \"m1.small\", \"m1.medium\",\r\n                                \"m1.large\", \"m1.xlarge\", \"m2.xlarge\", \"m2.2xlarge\", \"m2.4xlarge\", \"m3.medium\", \"m3.large\", \"m3.xlarge\", \r\n                                \"m3.2xlarge\", \"m4.large\", \"m4.xlarge\", \"m4.2xlarge\", \"m4.4xlarge\", \"m4.10xlarge\", \"c1.medium\", \"c1.xlarge\", \r\n                                \"c3.large\", \"c3.xlarge\", \"c3.2xlarge\", \"c3.4xlarge\", \"c3.8xlarge\", \"c4.large\", \"c4.xlarge\", \"c4.2xlarge\", \"c4.4xlarge\",\r\n                                \"c4.8xlarge\", \"g2.2xlarge\", \"g2.8xlarge\", \"r3.large\", \"r3.xlarge\", \"r3.2xlarge\", \"r3.4xlarge\", \"r3.8xlarge\", \"i2.xlarge\",\r\n                                \"i2.2xlarge\", \"i2.4xlarge\", \"i2.8xlarge\", \"d2.xlarge\", \"d2.2xlarge\", \"d2.4xlarge\", \"d2.8xlarge\"]\r\n      ,\r\n            \"ConstraintDescription\" : \"Must be a valid EC2 instance type.\"\r\n          },\r\n      \r\n          \"SSHLocation\" : {\r\n            \"Description\" : \"The IP address range that can be used to SSH to the EC2 instances\",\r\n            \"Type\": \"String\",\r\n            \"MinLength\": \"9\",\r\n            \"MaxLength\": \"18\",\r\n            \"Default\": \"0.0.0.0/0\",\r\n            \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\",\r\n            \"ConstraintDescription\": \"Must be a valid IP CIDR range of the form x.x.x.x/x.\"\r\n         }\r\n        },\r\n      \r\n        \"Mappings\" : {\r\n          \"AWSInstanceType2Arch\" : {\r\n            \"t1.micro\"    : { \"Arch\" : \"PV64\"   }, \"t2.nano\"     : { \"Arch\" : \"HVM64\"  }, \"t2.micro\"    : { \"Arch\" : \"HVM64\"  },\r\n            \"t2.small\"    : { \"Arch\" : \"HVM64\"  }, \"t2.medium\"   : { \"Arch\" : \"HVM64\"  }, \"t2.large\"    : { \"Arch\" : \"HVM64\"  },\r\n            \"m1.small\"    : { \"Arch\" : \"PV64\"   }, \"m1.medium\"   : { \"Arch\" : \"PV64\"   }, \"m1.large\"    : { \"Arch\" : \"PV64\"   },\r\n            \"m1.xlarge\"   : { \"Arch\" : \"PV64\"   }, \"m2.xlarge\"   : { \"Arch\" : \"PV64\"   }, \"m2.2xlarge\"  : { \"Arch\" : \"PV64\"   },\r\n            \"m2.4xlarge\"  : { \"Arch\" : \"PV64\"   }, \"m3.medium\"   : { \"Arch\" : \"HVM64\"  }, \"m3.large\"    : { \"Arch\" : \"HVM64\"  },\r\n            \"m3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"m3.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"m4.large\"    : { \"Arch\" : \"HVM64\"  },\r\n            \"m4.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"m4.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"m4.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"m4.10xlarge\" : { \"Arch\" : \"HVM64\"  }, \"c1.medium\"   : { \"Arch\" : \"PV64\"   }, \"c1.xlarge\"   : { \"Arch\" : \"PV64\"   },\r\n            \"c3.large\"    : { \"Arch\" : \"HVM64\"  }, \"c3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"c3.2xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"c3.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c3.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c4.large\"    : { \"Arch\" : \"HVM64\"  },\r\n            \"c4.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"c4.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c4.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"c4.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"g2.2xlarge\"  : { \"Arch\" : \"HVMG2\"  }, \"g2.8xlarge\"  : { \"Arch\" : \"HVMG2\"  },\r\n            \"r3.large\"    : { \"Arch\" : \"HVM64\"  }, \"r3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"r3.2xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"r3.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"r3.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.xlarge\"   : { \"Arch\" : \"HVM64\"  },\r\n            \"i2.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.8xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"d2.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"d2.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"d2.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"d2.8xlarge\"  : { \"Arch\" : \"HVM64\"  }\r\n          }\r\n      ,\r\n          \"AWSRegionArch2AMI\" : {\r\n            \"us-east-1\"        : {\"PV64\" : \"ami-2a69aa47\", \"HVM64\" : \"ami-97785bed\", \"HVMG2\" : \"ami-0a6e3770\"},\r\n            \"us-west-2\"        : {\"PV64\" : \"ami-7f77b31f\", \"HVM64\" : \"ami-f2d3638a\", \"HVMG2\" : \"ami-ee15a196\"},\r\n            \"us-west-1\"        : {\"PV64\" : \"ami-a2490dc2\", \"HVM64\" : \"ami-824c4ee2\", \"HVMG2\" : \"ami-0da4a46d\"},\r\n            \"eu-west-1\"        : {\"PV64\" : \"ami-4cdd453f\", \"HVM64\" : \"ami-d834aba1\", \"HVMG2\" : \"ami-af8013d6\"},\r\n            \"eu-west-2\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-403e2524\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"eu-west-3\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-8ee056f3\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"eu-central-1\"     : {\"PV64\" : \"ami-6527cf0a\", \"HVM64\" : \"ami-5652ce39\", \"HVMG2\" : \"ami-1d58ca72\"},\r\n            \"ap-northeast-1\"   : {\"PV64\" : \"ami-3e42b65f\", \"HVM64\" : \"ami-ceafcba8\", \"HVMG2\" : \"ami-edfd658b\"},\r\n            \"ap-northeast-2\"   : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-863090e8\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"ap-northeast-3\"   : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-83444afe\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"ap-southeast-1\"   : {\"PV64\" : \"ami-df9e4cbc\", \"HVM64\" : \"ami-68097514\", \"HVMG2\" : \"ami-c06013bc\"},\r\n            \"ap-southeast-2\"   : {\"PV64\" : \"ami-63351d00\", \"HVM64\" : \"ami-942dd1f6\", \"HVMG2\" : \"ami-85ef12e7\"},\r\n            \"ap-south-1\"       : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-531a4c3c\", \"HVMG2\" : \"ami-411e492e\"},\r\n            \"us-east-2\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-f63b1193\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"ca-central-1\"     : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-a954d1cd\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"sa-east-1\"        : {\"PV64\" : \"ami-1ad34676\", \"HVM64\" : \"ami-84175ae8\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"cn-north-1\"       : {\"PV64\" : \"ami-77559f1a\", \"HVM64\" : \"ami-cb19c4a6\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"cn-northwest-1\"   : {\"PV64\" : \"ami-80707be2\", \"HVM64\" : \"ami-3e60745c\", \"HVMG2\" : \"NOT_SUPPORTED\"}\r\n          }\r\n      \r\n        },\r\n      \r\n        \"Resources\" : {\r\n          \"EC2Instance\" : {\r\n            \"Type\" : \"AWS::EC2::Instance\",\r\n            \"Metadata\" : {\r\n              \"AWS::CloudFormation::Init\" : {\r\n                  \"configSets\" : {\r\n                      \"InstallAndRun\" : [ \"config1\", \"config2\" ]\r\n                  },\r\n                  \"config1\" : {\r\n                      \"packages\" : {\r\n                          \"yum\" : {\r\n                              \"httpd\" : []\r\n                          }\r\n                      },\r\n                      \"files\" : {\r\n                          \"/var/www/html/index.html\" : {\r\n                              \"mode\" : \"000644\", \r\n                              \"owner\" : \"apache\", \r\n                              \"group\" : \"apache\",\r\n                              \"source\" : \"https://s3.amazonaws.com/pcr-docs/index.html\"\r\n                          }\r\n                      }\r\n                  },\r\n                  \"config2\" : {\r\n                      \"services\" : {\r\n                          \"sysvinit\" : {\r\n                              \"httpd\" : {\r\n                                  \"enabled\" : \"true\",\r\n                                  \"ensureRunning\" : \"true\",\r\n                                  \"packages\" : { \"yum\" : [\"httpd\"] }\r\n                              }\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n          },\r\n            \"Properties\" : {\r\n              \"InstanceType\" : { \"Ref\" : \"InstanceType\" },\r\n              \"SecurityGroups\" : [ { \"Ref\" : \"InstanceSecurityGroup\" } ],\r\n              \"KeyName\" : { \"Ref\" : \"KeyName\" },\r\n              \"ImageId\" : { \"Fn::FindInMap\" : [ \"AWSRegionArch2AMI\", { \"Ref\" : \"AWS::Region\" },\r\n                                { \"Fn::FindInMap\" : [ \"AWSInstanceType2Arch\", { \"Ref\" : \"InstanceType\" }, \"Arch\" ] } ] },\r\n              \"UserData\" : { \"Fn::Base64\" :\r\n                                  { \"Fn::Join\" : [\"\", [\r\n                                     \"#!/bin/bash -xe\\n\",\r\n                                     \"yum update -y aws-cfn-bootstrap\\n\",\r\n                                     \"# Install the files and packages from the metadata\\n\",\r\n                                     \"/opt/aws/bin/cfn-init -v \",\r\n                                     \"         --stack \", { \"Ref\" : \"AWS::StackName\" },\r\n                                     \"         --resource EC2Instance \",\r\n                                     \"         --configsets InstallAndRun \",\r\n                                     \"         --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\",\r\n                                     \"# Signal the status from cfn-init\\n\",\r\n                                     \"/opt/aws/bin/cfn-signal -e $? \",\r\n                                     \"         --stack \", { \"Ref\" : \"AWS::StackName\" },\r\n                                     \"         --resource EC2Instance \",\r\n                                     \"         --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\"\r\n                                  ]]}\r\n                          }                  \r\n            }\r\n          },\r\n      \r\n          \"InstanceSecurityGroup\" : {\r\n            \"Type\" : \"AWS::EC2::SecurityGroup\",\r\n            \"Properties\" : {\r\n              \"GroupDescription\" : \"Enable SSH access via port 22\",\r\n              \"SecurityGroupIngress\" : [ \r\n                { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"22\", \"ToPort\" : \"22\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} },\r\n                { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"80\", \"ToPort\" : \"80\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} }\r\n               ]\r\n            }\r\n          }\r\n        },\r\n      \r\n        \"Outputs\" : {\r\n          \"InstanceId\" : {\r\n            \"Description\" : \"InstanceId of the newly created EC2 instance\",\r\n            \"Value\" : { \"Ref\" : \"EC2Instance\" }\r\n          },\r\n          \"AZ\" : {\r\n            \"Description\" : \"Availability Zone of the newly created EC2 instance\",\r\n            \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"AvailabilityZone\" ] }\r\n          },\r\n          \"PublicDNS\" : {\r\n            \"Description\" : \"Public DNSName of the newly created EC2 instance\",\r\n            \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicDnsName\" ] }\r\n          },\r\n          \"PublicIP\" : {\r\n            \"Description\" : \"Public IP address of the newly created EC2 instance\",\r\n            \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicIp\" ] }\r\n          }\r\n        }\r\n      }\r\n\r\nIt creates the EC2 Instance and runs the cfn-init defined as Instance Metadata, Installs the httpd and copies the index.html file to /var/www/html/index.html\r\n\r\nAlthough stack created the EC2 Instance and reached to CREATE_COMPLETE state, but when I check the System Logs for the Instance from EC2 console. I see an error on cfn-signal , looks like Cloudformation stack was already reached to CREATE_COMPLETE state hence signaling after CREATE_COMPLETE doesn't make sense\r\n\r\n    Updated:\r\n      aws-cfn-bootstrap.noarch 0:1.4-30.21.amzn1                                    \r\n    \r\n    Complete!\r\n    + /opt/aws/bin/cfn-init -v --stack EC2-cfn-init --resource EC2Instance --configsets InstallAndRun --region us-east-1\r\n    + /opt/aws/bin/cfn-signal -e 0 --stack EC2-cfn-init --resource EC2Instance --region us-east-1\r\n    ValidationError: Stack arn:aws:cloudformation:us-east-1:472821263165:stack/EC2-cfn-init/1f08fc80-a148-11e8-9779-500c28b3e2d2 is in CREATE_COMPLETE state and cannot be signaled\r\n    Aug 16 11:34:04 cloud-init[2680]: util.py[WARNING]: Failed running /var/lib/cloud/instance/scripts/part-001 [1]\r\n\r\n\r\n\r\nAlso If I remove the cfn-signal altogether and just cfn-init to run the Init Metadata script it works the same, stack reaches to CREATE_COMPLETE after creating the Instance. \r\n\r\nAgain from the docs\r\n\r\n> You use the cfn-signal script in conjunction with a CreationPolicy or\r\n> an Auto Scaling group with a WaitOnResourceSignals update policy. When\r\n> AWS CloudFormation creates or updates resources with those policies,\r\n> it suspends work on the stack until the resource receives the\r\n> requisite number of signals or until the timeout period is exceeded.\r\n\r\nBut I'm not clear on when and how we should use cfn-signal?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "If the application fails to install, the > instance will fail to create and the stack will rollback. ", "keywords": ["instance"]}, {"source": "Text", "text": "Below is my stack { \"AWSTemplateFormatVersion\" : \"2010-09-09\", \"Description\" : \"AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create an Amazon EC2 instance running the Amazon Linux AMI. ", "keywords": ["instance"]}, {"source": "Text", "text": "This example creates an EC2 security group for the instance to give you SSH access. ", "keywords": ["instance"]}, {"source": "Text", "text": "This template creates an Amazon EC2 instance. ", "keywords": ["instance"]}, {"source": "Text", "text": "You will be billed for the AWS resources used if you create a stack from this template.\", \"Parameters\" : { \"KeyName\": { \"Description\" : \"Name of an existing EC2 KeyPair to enable SSH access to the instance\", \"Type\": \"AWS::EC2::KeyPair::KeyName\", \"ConstraintDescription\" : \"Must be the name of an existing EC2 KeyPair.\" }, \"InstanceType\" : { \"Description\" : \"WebServer EC2 instance type\", \"Type\" : \"String\", \"Default\" : \"t2.micro\", \"AllowedValues\" : [ \"t1.micro\", \"t2.nano\", \"t2.micro\", \"t2.small\", \"t2.medium\", \"t2.large\", \"m1.small\", \"m1.medium\", \"m1.large\", \"m1.xlarge\", \"m2.xlarge\", \"m2.2xlarge\", \"m2.4xlarge\", \"m3.medium\", \"m3.large\", \"m3.xlarge\", \"m3.2xlarge\", \"m4.large\", \"m4.xlarge\", \"m4.2xlarge\", \"m4.4xlarge\", \"m4.10xlarge\", \"c1.medium\", \"c1.xlarge\", \"c3.large\", \"c3.xlarge\", \"c3.2xlarge\", \"c3.4xlarge\", \"c3.8xlarge\", \"c4.large\", \"c4.xlarge\", \"c4.2xlarge\", \"c4.4xlarge\", \"c4.8xlarge\", \"g2.2xlarge\", \"g2.8xlarge\", \"r3.large\", \"r3.xlarge\", \"r3.2xlarge\", \"r3.4xlarge\", \"r3.8xlarge\", \"i2.xlarge\", \"i2.2xlarge\", \"i2.4xlarge\", \"i2.8xlarge\", \"d2.xlarge\", \"d2.2xlarge\", \"d2.4xlarge\", \"d2.8xlarge\"] , \"ConstraintDescription\" : \"Must be a valid EC2 instance type.\" }, \"SSHLocation\" : { \"Description\" : \"The IP address range that can be used to SSH to the EC2 instances\", \"Type\": \"String\", \"MinLength\": \"9\", \"MaxLength\": \"18\", \"Default\": \"0.0.0.0/0\", \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\", \"ConstraintDescription\": \"Must be a valid IP CIDR range of the form x.x.x.x/x.\" ", "keywords": ["bill", "instance"]}, {"source": "Text", "text": "} } , \"AWSRegionArch2AMI\" : { \"us-east-1\" : {\"PV64\" : \"ami-2a69aa47\", \"HVM64\" : \"ami-97785bed\", \"HVMG2\" : \"ami-0a6e3770\"}, \"us-west-2\" : {\"PV64\" : \"ami-7f77b31f\", \"HVM64\" : \"ami-f2d3638a\", \"HVMG2\" : \"ami-ee15a196\"}, \"us-west-1\" : {\"PV64\" : \"ami-a2490dc2\", \"HVM64\" : \"ami-824c4ee2\", \"HVMG2\" : \"ami-0da4a46d\"}, \"eu-west-1\" : {\"PV64\" : \"ami-4cdd453f\", \"HVM64\" : \"ami-d834aba1\", \"HVMG2\" : \"ami-af8013d6\"}, \"eu-west-2\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-403e2524\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"eu-west-3\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-8ee056f3\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"eu-central-1\" : {\"PV64\" : \"ami-6527cf0a\", \"HVM64\" : \"ami-5652ce39\", \"HVMG2\" : \"ami-1d58ca72\"}, \"ap-northeast-1\" : {\"PV64\" : \"ami-3e42b65f\", \"HVM64\" : \"ami-ceafcba8\", \"HVMG2\" : \"ami-edfd658b\"}, \"ap-northeast-2\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-863090e8\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"ap-northeast-3\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-83444afe\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"ap-southeast-1\" : {\"PV64\" : \"ami-df9e4cbc\", \"HVM64\" : \"ami-68097514\", \"HVMG2\" : \"ami-c06013bc\"}, \"ap-southeast-2\" : {\"PV64\" : \"ami-63351d00\", \"HVM64\" : \"ami-942dd1f6\", \"HVMG2\" : \"ami-85ef12e7\"}, \"ap-south-1\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-531a4c3c\", \"HVMG2\" : \"ami-411e492e\"}, \"us-east-2\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-f63b1193\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"ca-central-1\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-a954d1cd\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"sa-east-1\" : {\"PV64\" : \"ami-1ad34676\", \"HVM64\" : \"ami-84175ae8\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"cn-north-1\" : {\"PV64\" : \"ami-77559f1a\", \"HVM64\" : \"ami-cb19c4a6\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"cn-northwest-1\" : {\"PV64\" : \"ami-80707be2\", \"HVM64\" : \"ami-3e60745c\", \"HVMG2\" : \"NOT_SUPPORTED\"} } }, \"Resources\" : { \"EC2Instance\" : { \"Type\" : \"AWS::EC2::Instance\", \"Metadata\" : { \"AWS::CloudFormation::Init\" : { \"configSets\" : { \"InstallAndRun\" : [ \"config1\", \"config2\" ] }, \"config1\" : { \"packages\" : { \"yum\" : { \"httpd\" : [] } }, \"files\" : { \"/var/www/html/index.html\" : { \"mode\" : \"000644\", \"owner\" : \"apache\", \"group\" : \"apache\", \"source\" : \"https://s3.amazonaws.com/pcr-docs/index.html\" } } }, \"config2\" : { \"services\" : { \"sysvinit\" : { \"httpd\" : { \"enabled\" : \"true\", \"ensureRunning\" : \"true\", \"packages\" : { \"yum\" : [\"httpd\"] } } } } } } }, \"Properties\" : { \"InstanceType\" : { \"Ref\" : \"InstanceType\" ", "keywords": ["instance", "billing mode"]}, {"source": "Text", "text": "}, { \"Fn::FindInMap\" : [ \"AWSInstanceType2Arch\", { \"Ref\" : \"InstanceType\" }, \"Arch\" ] } ] }, \"UserData\" : { \"Fn::Base64\" : { \"Fn::Join\" : [\"\", [ \"#!/bin/bash -xe\\n\", \"yum update -y aws-cfn-bootstrap\\n\", \"# Install the files and packages from the metadata\\n\", \"/opt/aws/bin/cfn-init -v \", \" --stack \", { \"Ref\" : \"AWS::StackName\" }, \" --resource EC2Instance \", \" --configsets InstallAndRun \", \" --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\", \"# Signal the status from cfn-init\\n\", \"/opt/aws/bin/cfn-signal -e $? \", \" --stack \", { \"Ref\" : \"AWS::StackName\" }, \" --resource EC2Instance \", \" --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\" ]]} } } }, \"InstanceSecurityGroup\" : { \"Type\" : \"AWS::EC2::SecurityGroup\", \"Properties\" : { \"GroupDescription\" : \"Enable SSH access via port 22\", \"SecurityGroupIngress\" : [ { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"22\", \"ToPort\" : \"22\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} }, { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"80\", \"ToPort\" : \"80\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} } ] } } }, \"Outputs\" : { \"InstanceId\" : { \"Description\" : \"InstanceId of the newly created EC2 instance\", \"Value\" : { \"Ref\" : \"EC2Instance\" } }, \"AZ\" : { \"Description\" : \"Availability Zone of the newly created EC2 instance\", \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"AvailabilityZone\" ] } }, \"PublicDNS\" : { \"Description\" : \"Public DNSName of the newly created EC2 instance\", \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicDnsName\" ] } }, \"PublicIP\" : { \"Description\" : \"Public IP address of the newly created EC2 instance\", \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicIp\" ] } } } } ", "keywords": ["instance"]}, {"source": "Text", "text": "It creates the EC2 Instance and runs the cfn-init defined as Instance Metadata, Installs the httpd and copies the index.html file to /var/www/html/index.html Although stack created the EC2 Instance and reached to CREATE_COMPLETE state, but when I check the System Logs for the Instance from EC2 console. ", "keywords": ["instance"]}, {"source": "Text", "text": "I see an error on cfn-signal , looks like Cloudformation stack was already reached to CREATE_COMPLETE state hence signaling after CREATE_COMPLETE doesn't make sense Updated: aws-cfn-bootstrap.noarch 0:1.4-30.21.amzn1 Complete! + /opt/aws/bin/cfn-init -v --stack EC2-cfn-init --resource EC2Instance --configsets InstallAndRun --region us-east-1 + /opt/aws/bin/cfn-signal -e 0 --stack EC2-cfn-init --resource EC2Instance --region us-east-1 ValidationError: Stack arn:aws:cloudformation:us-east-1:472821263165:stack/EC2-cfn-init/1f08fc80-a148-11e8-9779-500c28b3e2d2 is in CREATE_COMPLETE state and cannot be signaled Aug 16 11:34:04 cloud-init[2680]: util.py[WARNING]: Failed running /var/lib/cloud/instance/scripts/part-001 [1] Also If I remove the cfn-signal altogether and just cfn-init to run the Init Metadata script it works the same, stack reaches to CREATE_COMPLETE after creating the Instance. ", "keywords": ["instance"]}, {"source": "Text", "text": "Again from the docs > You use the cfn-signal script in conjunction with a CreationPolicy or > an Auto Scaling group with a WaitOnResourceSignals update policy. ", "keywords": ["policy"]}]}, {"Id": "179899610", "PostHistoryTypeId": "1", "PostId": "51883270", "RevisionGUID": "0ec7b1dd-20f3-49e6-9ab0-bb5b146bb9c6", "CreationDate": "2018-08-16T18:27:13.597", "UserId": "2947158", "Text": "Understanding use of CloudFormation cfn-signal", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "179899611", "PostHistoryTypeId": "3", "PostId": "51883270", "RevisionGUID": "0ec7b1dd-20f3-49e6-9ab0-bb5b146bb9c6", "CreationDate": "2018-08-16T18:27:13.597", "UserId": "2947158", "Text": "|amazon-web-services|aws-cloudformation|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "51894535", "PostTypeId": "2", "ParentId": "51883270", "CreationDate": "2018-08-17T11:33:31.713", "Score": "4", "Body": "<p>I was missing the CreationPolicy with my cfn-signal, since I was not using CreationPolicy to wait for Bootstrapping on EC2 Instance to complete and Cloudformation stack was already reached to CREATE_COMPLETE state, signaling success after stack was already reached to CREATE_COMPLETE was giving error. I attached the CreationPolicy on EC2 resource so that Cloudformation waits for 1 signal within 5 minutes before proceeding with stack. This solved the problem.\nBelow is the updated stack with CreationPolicy</p>\n\n<pre><code>{\n    \"AWSTemplateFormatVersion\" : \"2010-09-09\",\n\n    \"Description\" : \"AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create an Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based on the region in which the stack is run. This example creates an EC2 security group for the instance to give you SSH access. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.\",\n\n    \"Parameters\" : {\n      \"KeyName\": {\n        \"Description\" : \"Name of an existing EC2 KeyPair to enable SSH access to the instance\",\n        \"Type\": \"AWS::EC2::KeyPair::KeyName\",\n        \"ConstraintDescription\" : \"Must be the name of an existing EC2 KeyPair.\"\n      },\n\n      \"InstanceType\" : {\n        \"Description\" : \"WebServer EC2 instance type\",\n        \"Type\" : \"String\",\n        \"Default\" : \"t2.micro\",\n        \"AllowedValues\" : [ \"t1.micro\", \"t2.nano\", \"t2.micro\", \"t2.small\", \"t2.medium\", \"t2.large\", \"m1.small\", \"m1.medium\",\n                            \"m1.large\", \"m1.xlarge\", \"m2.xlarge\", \"m2.2xlarge\", \"m2.4xlarge\", \"m3.medium\", \"m3.large\", \"m3.xlarge\", \n                            \"m3.2xlarge\", \"m4.large\", \"m4.xlarge\", \"m4.2xlarge\", \"m4.4xlarge\", \"m4.10xlarge\", \"c1.medium\", \"c1.xlarge\", \n                            \"c3.large\", \"c3.xlarge\", \"c3.2xlarge\", \"c3.4xlarge\", \"c3.8xlarge\", \"c4.large\", \"c4.xlarge\", \"c4.2xlarge\", \"c4.4xlarge\",\n                            \"c4.8xlarge\", \"g2.2xlarge\", \"g2.8xlarge\", \"r3.large\", \"r3.xlarge\", \"r3.2xlarge\", \"r3.4xlarge\", \"r3.8xlarge\", \"i2.xlarge\",\n                            \"i2.2xlarge\", \"i2.4xlarge\", \"i2.8xlarge\", \"d2.xlarge\", \"d2.2xlarge\", \"d2.4xlarge\", \"d2.8xlarge\"]\n  ,\n        \"ConstraintDescription\" : \"Must be a valid EC2 instance type.\"\n      },\n\n      \"SSHLocation\" : {\n        \"Description\" : \"The IP address range that can be used to SSH to the EC2 instances\",\n        \"Type\": \"String\",\n        \"MinLength\": \"9\",\n        \"MaxLength\": \"18\",\n        \"Default\": \"0.0.0.0/0\",\n        \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\",\n        \"ConstraintDescription\": \"Must be a valid IP CIDR range of the form x.x.x.x/x.\"\n     }\n    },\n\n    \"Mappings\" : {\n      \"AWSInstanceType2Arch\" : {\n        \"t1.micro\"    : { \"Arch\" : \"PV64\"   }, \"t2.nano\"     : { \"Arch\" : \"HVM64\"  }, \"t2.micro\"    : { \"Arch\" : \"HVM64\"  },\n        \"t2.small\"    : { \"Arch\" : \"HVM64\"  }, \"t2.medium\"   : { \"Arch\" : \"HVM64\"  }, \"t2.large\"    : { \"Arch\" : \"HVM64\"  },\n        \"m1.small\"    : { \"Arch\" : \"PV64\"   }, \"m1.medium\"   : { \"Arch\" : \"PV64\"   }, \"m1.large\"    : { \"Arch\" : \"PV64\"   },\n        \"m1.xlarge\"   : { \"Arch\" : \"PV64\"   }, \"m2.xlarge\"   : { \"Arch\" : \"PV64\"   }, \"m2.2xlarge\"  : { \"Arch\" : \"PV64\"   },\n        \"m2.4xlarge\"  : { \"Arch\" : \"PV64\"   }, \"m3.medium\"   : { \"Arch\" : \"HVM64\"  }, \"m3.large\"    : { \"Arch\" : \"HVM64\"  },\n        \"m3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"m3.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"m4.large\"    : { \"Arch\" : \"HVM64\"  },\n        \"m4.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"m4.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"m4.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"m4.10xlarge\" : { \"Arch\" : \"HVM64\"  }, \"c1.medium\"   : { \"Arch\" : \"PV64\"   }, \"c1.xlarge\"   : { \"Arch\" : \"PV64\"   },\n        \"c3.large\"    : { \"Arch\" : \"HVM64\"  }, \"c3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"c3.2xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"c3.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c3.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c4.large\"    : { \"Arch\" : \"HVM64\"  },\n        \"c4.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"c4.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c4.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"c4.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"g2.2xlarge\"  : { \"Arch\" : \"HVMG2\"  }, \"g2.8xlarge\"  : { \"Arch\" : \"HVMG2\"  },\n        \"r3.large\"    : { \"Arch\" : \"HVM64\"  }, \"r3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"r3.2xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"r3.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"r3.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.xlarge\"   : { \"Arch\" : \"HVM64\"  },\n        \"i2.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.8xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"d2.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"d2.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"d2.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"d2.8xlarge\"  : { \"Arch\" : \"HVM64\"  }\n      }\n  ,\n      \"AWSRegionArch2AMI\" : {\n        \"us-east-1\"        : {\"PV64\" : \"ami-2a69aa47\", \"HVM64\" : \"ami-97785bed\", \"HVMG2\" : \"ami-0a6e3770\"},\n        \"us-west-2\"        : {\"PV64\" : \"ami-7f77b31f\", \"HVM64\" : \"ami-f2d3638a\", \"HVMG2\" : \"ami-ee15a196\"},\n        \"us-west-1\"        : {\"PV64\" : \"ami-a2490dc2\", \"HVM64\" : \"ami-824c4ee2\", \"HVMG2\" : \"ami-0da4a46d\"},\n        \"eu-west-1\"        : {\"PV64\" : \"ami-4cdd453f\", \"HVM64\" : \"ami-d834aba1\", \"HVMG2\" : \"ami-af8013d6\"},\n        \"eu-west-2\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-403e2524\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"eu-west-3\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-8ee056f3\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"eu-central-1\"     : {\"PV64\" : \"ami-6527cf0a\", \"HVM64\" : \"ami-5652ce39\", \"HVMG2\" : \"ami-1d58ca72\"},\n        \"ap-northeast-1\"   : {\"PV64\" : \"ami-3e42b65f\", \"HVM64\" : \"ami-ceafcba8\", \"HVMG2\" : \"ami-edfd658b\"},\n        \"ap-northeast-2\"   : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-863090e8\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"ap-northeast-3\"   : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-83444afe\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"ap-southeast-1\"   : {\"PV64\" : \"ami-df9e4cbc\", \"HVM64\" : \"ami-68097514\", \"HVMG2\" : \"ami-c06013bc\"},\n        \"ap-southeast-2\"   : {\"PV64\" : \"ami-63351d00\", \"HVM64\" : \"ami-942dd1f6\", \"HVMG2\" : \"ami-85ef12e7\"},\n        \"ap-south-1\"       : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-531a4c3c\", \"HVMG2\" : \"ami-411e492e\"},\n        \"us-east-2\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-f63b1193\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"ca-central-1\"     : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-a954d1cd\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"sa-east-1\"        : {\"PV64\" : \"ami-1ad34676\", \"HVM64\" : \"ami-84175ae8\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"cn-north-1\"       : {\"PV64\" : \"ami-77559f1a\", \"HVM64\" : \"ami-cb19c4a6\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"cn-northwest-1\"   : {\"PV64\" : \"ami-80707be2\", \"HVM64\" : \"ami-3e60745c\", \"HVMG2\" : \"NOT_SUPPORTED\"}\n      }\n\n    },\n\n    \"Resources\" : {\n      \"EC2Instance\" : {\n        \"Type\" : \"AWS::EC2::Instance\",\n        \"Metadata\" : {\n          \"AWS::CloudFormation::Init\" : {\n              \"configSets\" : {\n                  \"InstallAndRun\" : [ \"config1\", \"config2\" ]\n              },\n              \"config1\" : {\n                  \"packages\" : {\n                      \"yum\" : {\n                          \"httpd\" : []\n                      }\n                  },\n                  \"files\" : {\n                      \"/var/www/html/index.html\" : {\n                          \"mode\" : \"000644\", \n                          \"owner\" : \"apache\", \n                          \"group\" : \"apache\",\n                          \"source\" : \"https://s3.amazonaws.com/pcr-docs/index.html\"\n                      }\n                  }\n              },\n              \"config2\" : {\n                  \"services\" : {\n                      \"sysvinit\" : {\n                          \"httpd\" : {\n                              \"enabled\" : \"true\",\n                              \"ensureRunning\" : \"true\",\n                              \"packages\" : { \"yum\" : [\"httpd\"] }\n                          }\n                      }\n                  }\n              }\n          }\n      },\n        \"Properties\" : {\n          \"InstanceType\" : { \"Ref\" : \"InstanceType\" },\n          \"SecurityGroups\" : [ { \"Ref\" : \"InstanceSecurityGroup\" } ],\n          \"KeyName\" : { \"Ref\" : \"KeyName\" },\n          \"ImageId\" : { \"Fn::FindInMap\" : [ \"AWSRegionArch2AMI\", { \"Ref\" : \"AWS::Region\" },\n                            { \"Fn::FindInMap\" : [ \"AWSInstanceType2Arch\", { \"Ref\" : \"InstanceType\" }, \"Arch\" ] } ] },\n          \"UserData\" : { \"Fn::Base64\" :\n                              { \"Fn::Join\" : [\"\", [\n                                 \"#!/bin/bash -xe\\n\",\n                                 \"yum update -y aws-cfn-bootstrap\\n\",\n                                 \"# Install the files and packages from the metadata\\n\",\n                                 \"/opt/aws/bin/cfn-init -v \",\n                                 \"         --stack \", { \"Ref\" : \"AWS::StackName\" },\n                                 \"         --resource EC2Instance \",\n                                 \"         --configsets InstallAndRun \",\n                                 \"         --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\",\n                                 \"# Signal the status from cfn-init\\n\",\n                                 \"/opt/aws/bin/cfn-signal -e $? \",\n                                 \"         --stack \", { \"Ref\" : \"AWS::StackName\" },\n                                 \"         --resource EC2Instance \",\n                                 \"         --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\"\n                              ]]}\n                      }                  \n        },\n        \"CreationPolicy\": {\n          \"ResourceSignal\": {\n            \"Count\": \"1\",\n            \"Timeout\": \"PT5M\"\n          }\n        }\n      },\n\n      \"InstanceSecurityGroup\" : {\n        \"Type\" : \"AWS::EC2::SecurityGroup\",\n        \"Properties\" : {\n          \"GroupDescription\" : \"Enable SSH access via port 22\",\n          \"SecurityGroupIngress\" : [ \n            { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"22\", \"ToPort\" : \"22\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} },\n            { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"80\", \"ToPort\" : \"80\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} }\n           ]\n        }\n      }\n    },\n\n    \"Outputs\" : {\n      \"InstanceId\" : {\n        \"Description\" : \"InstanceId of the newly created EC2 instance\",\n        \"Value\" : { \"Ref\" : \"EC2Instance\" }\n      },\n      \"AZ\" : {\n        \"Description\" : \"Availability Zone of the newly created EC2 instance\",\n        \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"AvailabilityZone\" ] }\n      },\n      \"PublicDNS\" : {\n        \"Description\" : \"Public DNSName of the newly created EC2 instance\",\n        \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicDnsName\" ] }\n      },\n      \"PublicIP\" : {\n        \"Description\" : \"Public IP address of the newly created EC2 instance\",\n        \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicIp\" ] }\n      }\n    }\n  }\n</code></pre>\n", "OwnerUserId": "2947158", "LastActivityDate": "2018-08-17T11:33:31.713", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "121238488", "PostId": "51894535", "Score": "0", "Text": "Thank you, I\u2019m preparing for the AWS devops exam and this looks like a likely exam question. :-)", "CreationDate": "2021-07-31T12:27:22.263", "UserId": "269361", "filtered-sentences": []}], "history": [{"Id": "179944831", "PostHistoryTypeId": "2", "PostId": "51894535", "RevisionGUID": "d228538b-6141-440e-8fc2-7eabf08b5297", "CreationDate": "2018-08-17T11:33:31.713", "UserId": "2947158", "Text": "I was missing the CreationPolicy with my cfn-signal, since I was not using CreationPolicy to wait for Bootstrapping on EC2 Instance to complete and Cloudformation stack was already reached to CREATE_COMPLETE state, signaling success after stack was already reached to CREATE_COMPLETE was giving error. I attached the CreationPolicy on EC2 resource so that Cloudformation waits for 1 signal within 5 minutes before proceeding with stack. This solved the problem.\r\nBelow is the updated stack with CreationPolicy\r\n\r\n    {\r\n        \"AWSTemplateFormatVersion\" : \"2010-09-09\",\r\n      \r\n        \"Description\" : \"AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create an Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based on the region in which the stack is run. This example creates an EC2 security group for the instance to give you SSH access. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.\",\r\n      \r\n        \"Parameters\" : {\r\n          \"KeyName\": {\r\n            \"Description\" : \"Name of an existing EC2 KeyPair to enable SSH access to the instance\",\r\n            \"Type\": \"AWS::EC2::KeyPair::KeyName\",\r\n            \"ConstraintDescription\" : \"Must be the name of an existing EC2 KeyPair.\"\r\n          },\r\n      \r\n          \"InstanceType\" : {\r\n            \"Description\" : \"WebServer EC2 instance type\",\r\n            \"Type\" : \"String\",\r\n            \"Default\" : \"t2.micro\",\r\n            \"AllowedValues\" : [ \"t1.micro\", \"t2.nano\", \"t2.micro\", \"t2.small\", \"t2.medium\", \"t2.large\", \"m1.small\", \"m1.medium\",\r\n                                \"m1.large\", \"m1.xlarge\", \"m2.xlarge\", \"m2.2xlarge\", \"m2.4xlarge\", \"m3.medium\", \"m3.large\", \"m3.xlarge\", \r\n                                \"m3.2xlarge\", \"m4.large\", \"m4.xlarge\", \"m4.2xlarge\", \"m4.4xlarge\", \"m4.10xlarge\", \"c1.medium\", \"c1.xlarge\", \r\n                                \"c3.large\", \"c3.xlarge\", \"c3.2xlarge\", \"c3.4xlarge\", \"c3.8xlarge\", \"c4.large\", \"c4.xlarge\", \"c4.2xlarge\", \"c4.4xlarge\",\r\n                                \"c4.8xlarge\", \"g2.2xlarge\", \"g2.8xlarge\", \"r3.large\", \"r3.xlarge\", \"r3.2xlarge\", \"r3.4xlarge\", \"r3.8xlarge\", \"i2.xlarge\",\r\n                                \"i2.2xlarge\", \"i2.4xlarge\", \"i2.8xlarge\", \"d2.xlarge\", \"d2.2xlarge\", \"d2.4xlarge\", \"d2.8xlarge\"]\r\n      ,\r\n            \"ConstraintDescription\" : \"Must be a valid EC2 instance type.\"\r\n          },\r\n      \r\n          \"SSHLocation\" : {\r\n            \"Description\" : \"The IP address range that can be used to SSH to the EC2 instances\",\r\n            \"Type\": \"String\",\r\n            \"MinLength\": \"9\",\r\n            \"MaxLength\": \"18\",\r\n            \"Default\": \"0.0.0.0/0\",\r\n            \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\",\r\n            \"ConstraintDescription\": \"Must be a valid IP CIDR range of the form x.x.x.x/x.\"\r\n         }\r\n        },\r\n      \r\n        \"Mappings\" : {\r\n          \"AWSInstanceType2Arch\" : {\r\n            \"t1.micro\"    : { \"Arch\" : \"PV64\"   }, \"t2.nano\"     : { \"Arch\" : \"HVM64\"  }, \"t2.micro\"    : { \"Arch\" : \"HVM64\"  },\r\n            \"t2.small\"    : { \"Arch\" : \"HVM64\"  }, \"t2.medium\"   : { \"Arch\" : \"HVM64\"  }, \"t2.large\"    : { \"Arch\" : \"HVM64\"  },\r\n            \"m1.small\"    : { \"Arch\" : \"PV64\"   }, \"m1.medium\"   : { \"Arch\" : \"PV64\"   }, \"m1.large\"    : { \"Arch\" : \"PV64\"   },\r\n            \"m1.xlarge\"   : { \"Arch\" : \"PV64\"   }, \"m2.xlarge\"   : { \"Arch\" : \"PV64\"   }, \"m2.2xlarge\"  : { \"Arch\" : \"PV64\"   },\r\n            \"m2.4xlarge\"  : { \"Arch\" : \"PV64\"   }, \"m3.medium\"   : { \"Arch\" : \"HVM64\"  }, \"m3.large\"    : { \"Arch\" : \"HVM64\"  },\r\n            \"m3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"m3.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"m4.large\"    : { \"Arch\" : \"HVM64\"  },\r\n            \"m4.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"m4.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"m4.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"m4.10xlarge\" : { \"Arch\" : \"HVM64\"  }, \"c1.medium\"   : { \"Arch\" : \"PV64\"   }, \"c1.xlarge\"   : { \"Arch\" : \"PV64\"   },\r\n            \"c3.large\"    : { \"Arch\" : \"HVM64\"  }, \"c3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"c3.2xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"c3.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c3.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c4.large\"    : { \"Arch\" : \"HVM64\"  },\r\n            \"c4.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"c4.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c4.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"c4.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"g2.2xlarge\"  : { \"Arch\" : \"HVMG2\"  }, \"g2.8xlarge\"  : { \"Arch\" : \"HVMG2\"  },\r\n            \"r3.large\"    : { \"Arch\" : \"HVM64\"  }, \"r3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"r3.2xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"r3.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"r3.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.xlarge\"   : { \"Arch\" : \"HVM64\"  },\r\n            \"i2.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.8xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"d2.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"d2.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"d2.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"d2.8xlarge\"  : { \"Arch\" : \"HVM64\"  }\r\n          }\r\n      ,\r\n          \"AWSRegionArch2AMI\" : {\r\n            \"us-east-1\"        : {\"PV64\" : \"ami-2a69aa47\", \"HVM64\" : \"ami-97785bed\", \"HVMG2\" : \"ami-0a6e3770\"},\r\n            \"us-west-2\"        : {\"PV64\" : \"ami-7f77b31f\", \"HVM64\" : \"ami-f2d3638a\", \"HVMG2\" : \"ami-ee15a196\"},\r\n            \"us-west-1\"        : {\"PV64\" : \"ami-a2490dc2\", \"HVM64\" : \"ami-824c4ee2\", \"HVMG2\" : \"ami-0da4a46d\"},\r\n            \"eu-west-1\"        : {\"PV64\" : \"ami-4cdd453f\", \"HVM64\" : \"ami-d834aba1\", \"HVMG2\" : \"ami-af8013d6\"},\r\n            \"eu-west-2\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-403e2524\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"eu-west-3\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-8ee056f3\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"eu-central-1\"     : {\"PV64\" : \"ami-6527cf0a\", \"HVM64\" : \"ami-5652ce39\", \"HVMG2\" : \"ami-1d58ca72\"},\r\n            \"ap-northeast-1\"   : {\"PV64\" : \"ami-3e42b65f\", \"HVM64\" : \"ami-ceafcba8\", \"HVMG2\" : \"ami-edfd658b\"},\r\n            \"ap-northeast-2\"   : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-863090e8\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"ap-northeast-3\"   : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-83444afe\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"ap-southeast-1\"   : {\"PV64\" : \"ami-df9e4cbc\", \"HVM64\" : \"ami-68097514\", \"HVMG2\" : \"ami-c06013bc\"},\r\n            \"ap-southeast-2\"   : {\"PV64\" : \"ami-63351d00\", \"HVM64\" : \"ami-942dd1f6\", \"HVMG2\" : \"ami-85ef12e7\"},\r\n            \"ap-south-1\"       : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-531a4c3c\", \"HVMG2\" : \"ami-411e492e\"},\r\n            \"us-east-2\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-f63b1193\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"ca-central-1\"     : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-a954d1cd\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"sa-east-1\"        : {\"PV64\" : \"ami-1ad34676\", \"HVM64\" : \"ami-84175ae8\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"cn-north-1\"       : {\"PV64\" : \"ami-77559f1a\", \"HVM64\" : \"ami-cb19c4a6\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"cn-northwest-1\"   : {\"PV64\" : \"ami-80707be2\", \"HVM64\" : \"ami-3e60745c\", \"HVMG2\" : \"NOT_SUPPORTED\"}\r\n          }\r\n      \r\n        },\r\n      \r\n        \"Resources\" : {\r\n          \"EC2Instance\" : {\r\n            \"Type\" : \"AWS::EC2::Instance\",\r\n            \"Metadata\" : {\r\n              \"AWS::CloudFormation::Init\" : {\r\n                  \"configSets\" : {\r\n                      \"InstallAndRun\" : [ \"config1\", \"config2\" ]\r\n                  },\r\n                  \"config1\" : {\r\n                      \"packages\" : {\r\n                          \"yum\" : {\r\n                              \"httpd\" : []\r\n                          }\r\n                      },\r\n                      \"files\" : {\r\n                          \"/var/www/html/index.html\" : {\r\n                              \"mode\" : \"000644\", \r\n                              \"owner\" : \"apache\", \r\n                              \"group\" : \"apache\",\r\n                              \"source\" : \"https://s3.amazonaws.com/pcr-docs/index.html\"\r\n                          }\r\n                      }\r\n                  },\r\n                  \"config2\" : {\r\n                      \"services\" : {\r\n                          \"sysvinit\" : {\r\n                              \"httpd\" : {\r\n                                  \"enabled\" : \"true\",\r\n                                  \"ensureRunning\" : \"true\",\r\n                                  \"packages\" : { \"yum\" : [\"httpd\"] }\r\n                              }\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n          },\r\n            \"Properties\" : {\r\n              \"InstanceType\" : { \"Ref\" : \"InstanceType\" },\r\n              \"SecurityGroups\" : [ { \"Ref\" : \"InstanceSecurityGroup\" } ],\r\n              \"KeyName\" : { \"Ref\" : \"KeyName\" },\r\n              \"ImageId\" : { \"Fn::FindInMap\" : [ \"AWSRegionArch2AMI\", { \"Ref\" : \"AWS::Region\" },\r\n                                { \"Fn::FindInMap\" : [ \"AWSInstanceType2Arch\", { \"Ref\" : \"InstanceType\" }, \"Arch\" ] } ] },\r\n              \"UserData\" : { \"Fn::Base64\" :\r\n                                  { \"Fn::Join\" : [\"\", [\r\n                                     \"#!/bin/bash -xe\\n\",\r\n                                     \"yum update -y aws-cfn-bootstrap\\n\",\r\n                                     \"# Install the files and packages from the metadata\\n\",\r\n                                     \"/opt/aws/bin/cfn-init -v \",\r\n                                     \"         --stack \", { \"Ref\" : \"AWS::StackName\" },\r\n                                     \"         --resource EC2Instance \",\r\n                                     \"         --configsets InstallAndRun \",\r\n                                     \"         --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\",\r\n                                     \"# Signal the status from cfn-init\\n\",\r\n                                     \"/opt/aws/bin/cfn-signal -e $? \",\r\n                                     \"         --stack \", { \"Ref\" : \"AWS::StackName\" },\r\n                                     \"         --resource EC2Instance \",\r\n                                     \"         --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\"\r\n                                  ]]}\r\n                          }                  \r\n            },\r\n            \"CreationPolicy\": {\r\n              \"ResourceSignal\": {\r\n                \"Count\": \"1\",\r\n                \"Timeout\": \"PT5M\"\r\n              }\r\n            }\r\n          },\r\n      \r\n          \"InstanceSecurityGroup\" : {\r\n            \"Type\" : \"AWS::EC2::SecurityGroup\",\r\n            \"Properties\" : {\r\n              \"GroupDescription\" : \"Enable SSH access via port 22\",\r\n              \"SecurityGroupIngress\" : [ \r\n                { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"22\", \"ToPort\" : \"22\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} },\r\n                { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"80\", \"ToPort\" : \"80\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} }\r\n               ]\r\n            }\r\n          }\r\n        },\r\n      \r\n        \"Outputs\" : {\r\n          \"InstanceId\" : {\r\n            \"Description\" : \"InstanceId of the newly created EC2 instance\",\r\n            \"Value\" : { \"Ref\" : \"EC2Instance\" }\r\n          },\r\n          \"AZ\" : {\r\n            \"Description\" : \"Availability Zone of the newly created EC2 instance\",\r\n            \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"AvailabilityZone\" ] }\r\n          },\r\n          \"PublicDNS\" : {\r\n            \"Description\" : \"Public DNSName of the newly created EC2 instance\",\r\n            \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicDnsName\" ] }\r\n          },\r\n          \"PublicIP\" : {\r\n            \"Description\" : \"Public IP address of the newly created EC2 instance\",\r\n            \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicIp\" ] }\r\n          }\r\n        }\r\n      }\r\n     ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I was missing the CreationPolicy with my cfn-signal, since I was not using CreationPolicy to wait for Bootstrapping on EC2 Instance to complete and Cloudformation stack was already reached to CREATE_COMPLETE state, signaling success after stack was already reached to CREATE_COMPLETE was giving error. ", "keywords": ["instance"]}, {"source": "Text", "text": "Below is the updated stack with CreationPolicy { \"AWSTemplateFormatVersion\" : \"2010-09-09\", \"Description\" : \"AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create an Amazon EC2 instance running the Amazon Linux AMI. ", "keywords": ["instance"]}, {"source": "Text", "text": "This example creates an EC2 security group for the instance to give you SSH access. ", "keywords": ["instance"]}, {"source": "Text", "text": "This template creates an Amazon EC2 instance. ", "keywords": ["instance"]}, {"source": "Text", "text": "You will be billed for the AWS resources used if you create a stack from this template.\", \"Parameters\" : { \"KeyName\": { \"Description\" : \"Name of an existing EC2 KeyPair to enable SSH access to the instance\", \"Type\": \"AWS::EC2::KeyPair::KeyName\", \"ConstraintDescription\" : \"Must be the name of an existing EC2 KeyPair.\" }, \"InstanceType\" : { \"Description\" : \"WebServer EC2 instance type\", \"Type\" : \"String\", \"Default\" : \"t2.micro\", \"AllowedValues\" : [ \"t1.micro\", \"t2.nano\", \"t2.micro\", \"t2.small\", \"t2.medium\", \"t2.large\", \"m1.small\", \"m1.medium\", \"m1.large\", \"m1.xlarge\", \"m2.xlarge\", \"m2.2xlarge\", \"m2.4xlarge\", \"m3.medium\", \"m3.large\", \"m3.xlarge\", \"m3.2xlarge\", \"m4.large\", \"m4.xlarge\", \"m4.2xlarge\", \"m4.4xlarge\", \"m4.10xlarge\", \"c1.medium\", \"c1.xlarge\", \"c3.large\", \"c3.xlarge\", \"c3.2xlarge\", \"c3.4xlarge\", \"c3.8xlarge\", \"c4.large\", \"c4.xlarge\", \"c4.2xlarge\", \"c4.4xlarge\", \"c4.8xlarge\", \"g2.2xlarge\", \"g2.8xlarge\", \"r3.large\", \"r3.xlarge\", \"r3.2xlarge\", \"r3.4xlarge\", \"r3.8xlarge\", \"i2.xlarge\", \"i2.2xlarge\", \"i2.4xlarge\", \"i2.8xlarge\", \"d2.xlarge\", \"d2.2xlarge\", \"d2.4xlarge\", \"d2.8xlarge\"] , \"ConstraintDescription\" : \"Must be a valid EC2 instance type.\" }, \"SSHLocation\" : { \"Description\" : \"The IP address range that can be used to SSH to the EC2 instances\", \"Type\": \"String\", \"MinLength\": \"9\", \"MaxLength\": \"18\", \"Default\": \"0.0.0.0/0\", \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\", \"ConstraintDescription\": \"Must be a valid IP CIDR range of the form x.x.x.x/x.\" ", "keywords": ["bill", "instance"]}, {"source": "Text", "text": "} } , \"AWSRegionArch2AMI\" : { \"us-east-1\" : {\"PV64\" : \"ami-2a69aa47\", \"HVM64\" : \"ami-97785bed\", \"HVMG2\" : \"ami-0a6e3770\"}, \"us-west-2\" : {\"PV64\" : \"ami-7f77b31f\", \"HVM64\" : \"ami-f2d3638a\", \"HVMG2\" : \"ami-ee15a196\"}, \"us-west-1\" : {\"PV64\" : \"ami-a2490dc2\", \"HVM64\" : \"ami-824c4ee2\", \"HVMG2\" : \"ami-0da4a46d\"}, \"eu-west-1\" : {\"PV64\" : \"ami-4cdd453f\", \"HVM64\" : \"ami-d834aba1\", \"HVMG2\" : \"ami-af8013d6\"}, \"eu-west-2\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-403e2524\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"eu-west-3\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-8ee056f3\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"eu-central-1\" : {\"PV64\" : \"ami-6527cf0a\", \"HVM64\" : \"ami-5652ce39\", \"HVMG2\" : \"ami-1d58ca72\"}, \"ap-northeast-1\" : {\"PV64\" : \"ami-3e42b65f\", \"HVM64\" : \"ami-ceafcba8\", \"HVMG2\" : \"ami-edfd658b\"}, \"ap-northeast-2\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-863090e8\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"ap-northeast-3\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-83444afe\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"ap-southeast-1\" : {\"PV64\" : \"ami-df9e4cbc\", \"HVM64\" : \"ami-68097514\", \"HVMG2\" : \"ami-c06013bc\"}, \"ap-southeast-2\" : {\"PV64\" : \"ami-63351d00\", \"HVM64\" : \"ami-942dd1f6\", \"HVMG2\" : \"ami-85ef12e7\"}, \"ap-south-1\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-531a4c3c\", \"HVMG2\" : \"ami-411e492e\"}, \"us-east-2\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-f63b1193\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"ca-central-1\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-a954d1cd\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"sa-east-1\" : {\"PV64\" : \"ami-1ad34676\", \"HVM64\" : \"ami-84175ae8\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"cn-north-1\" : {\"PV64\" : \"ami-77559f1a\", \"HVM64\" : \"ami-cb19c4a6\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"cn-northwest-1\" : {\"PV64\" : \"ami-80707be2\", \"HVM64\" : \"ami-3e60745c\", \"HVMG2\" : \"NOT_SUPPORTED\"} } }, \"Resources\" : { \"EC2Instance\" : { \"Type\" : \"AWS::EC2::Instance\", \"Metadata\" : { \"AWS::CloudFormation::Init\" : { \"configSets\" : { \"InstallAndRun\" : [ \"config1\", \"config2\" ] }, \"config1\" : { \"packages\" : { \"yum\" : { \"httpd\" : [] } }, \"files\" : { \"/var/www/html/index.html\" : { \"mode\" : \"000644\", \"owner\" : \"apache\", \"group\" : \"apache\", \"source\" : \"https://s3.amazonaws.com/pcr-docs/index.html\" } } }, \"config2\" : { \"services\" : { \"sysvinit\" : { \"httpd\" : { \"enabled\" : \"true\", \"ensureRunning\" : \"true\", \"packages\" : { \"yum\" : [\"httpd\"] } } } } } } }, \"Properties\" : { \"InstanceType\" : { \"Ref\" : \"InstanceType\" ", "keywords": ["instance", "billing mode"]}, {"source": "Text", "text": "} } }, \"InstanceSecurityGroup\" : { \"Type\" : \"AWS::EC2::SecurityGroup\", \"Properties\" : { \"GroupDescription\" : \"Enable SSH access via port 22\", \"SecurityGroupIngress\" : [ { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"22\", \"ToPort\" : \"22\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} }, { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"80\", \"ToPort\" : \"80\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} } ] } } }, \"Outputs\" : { \"InstanceId\" : { \"Description\" : \"InstanceId of the newly created EC2 instance\", \"Value\" : { \"Ref\" : \"EC2Instance\" } }, \"AZ\" : { \"Description\" : \"Availability Zone of the newly created EC2 instance\", \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"AvailabilityZone\" ] } ", "keywords": ["instance"]}, {"source": "Text", "text": "}, \"PublicDNS\" : { \"Description\" : \"Public DNSName of the newly created EC2 instance\", \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicDnsName\" ] } ", "keywords": ["instance"]}, {"source": "Text", "text": "}, \"PublicIP\" : { \"Description\" : \"Public IP address of the newly created EC2 instance\", \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicIp\" ] } ", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "I was missing the CreationPolicy with my cfn-signal, since I was not using CreationPolicy to wait for Bootstrapping on EC2 Instance to complete and Cloudformation stack was already reached to CREATE_COMPLETE state, signaling success after stack was already reached to CREATE_COMPLETE was giving error. ", "keywords": ["instance"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "If the application fails to install, the instance will fail to create and the stack will rollback. ", "keywords": ["instance"]}, {"source": "Body", "text": "Below is my stack It creates the EC2 Instance and runs the cfn-init defined as Instance Metadata, Installs the httpd and copies the index.html file to /var/www/html/index.html Although stack created the EC2 Instance and reached to CREATE_COMPLETE state, but when I check the System Logs for the Instance from EC2 console. ", "keywords": ["instance"]}, {"source": "Body", "text": "If I remove the cfn-signal altogether and just cfn-init to run the Init Metadata script it works the same, stack reaches to CREATE_COMPLETE after creating the Instance. ", "keywords": ["instance"]}, {"source": "Body", "text": "You use the cfn-signal script in conjunction with a CreationPolicy or an Auto Scaling group with a WaitOnResourceSignals update policy. ", "keywords": ["policy"]}]}
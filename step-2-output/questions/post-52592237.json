{"Id": "52592237", "PostTypeId": "1", "CreationDate": "2018-10-01T13:27:28.913", "Score": "1", "ViewCount": "2339", "Body": "<p>I am trying to create a nested topology from 4 existing templates. These templates do the following:</p>\n\n<p>1: deploys a policy and a role.\n2: deploys an EC2 instance.\n3: deploys an ELB.\n4: deploys an RDS instance.</p>\n\n<p>All of them are \"linked\" by using outputs. All of the parameters are also contained within these.\nNow I want to create a fifth template (master) and treat the other 4 templates as child.</p>\n\n<p>However I am not too sure about the minimum code that I need in the master template:</p>\n\n<p><strong>Parameters</strong>: these are defined within the child so I don't need them here, do I?\n<strong>Resources</strong>: point to the 4 child templates by providing the S3 URL where they're stored.\n<strong>DependsOn</strong> clause: I need this as the child templates need to be deployed in sequential order.\nOutputs: not too sure what to include here, shall I leave the outputs on the child and define here only the master's?</p>\n\n<p>The master I think it should be small but not too sure if I am missing something. Another question, do I need to change anything on the child templates?</p>\n\n<p>Any help would be much appreciated.</p>\n", "OwnerUserId": "10440910", "LastActivityDate": "2018-10-02T01:18:30.210", "Title": "AWS Cloudformation Nested Templates", "Tags": "|amazon-web-services|templates|nested|aws-cloudformation|", "AnswerCount": "2", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "182861794", "PostHistoryTypeId": "2", "PostId": "52592237", "RevisionGUID": "3cf02a1d-cc28-40aa-8afd-72c3aef91bbc", "CreationDate": "2018-10-01T13:27:28.913", "UserId": "10440910", "Text": "I am trying to create a nested topology from 4 existing templates. These templates do the following:\r\n\r\n1: deploys a policy and a role.\r\n2: deploys an EC2 instance.\r\n3: deploys an ELB.\r\n4: deploys an RDS instance.\r\n\r\nAll of them are \"linked\" by using outputs. All of the parameters are also contained within these.\r\nNow I want to create a fifth template (master) and treat the other 4 templates as child.\r\n\r\nHowever I am not too sure about the minimum code that I need in the master template:\r\n\r\n**Parameters**: these are defined within the child so I don't need them here, do I?\r\n**Resources**: point to the 4 child templates by providing the S3 URL where they're stored.\r\n**DependsOn** clause: I need this as the child templates need to be deployed in sequential order.\r\nOutputs: not too sure what to include here, shall I leave the outputs on the child and define here only the master's?\r\n\r\nThe master I think it should be small but not too sure if I am missing something. Another question, do I need to change anything on the child templates?\r\n\r\nAny help would be much appreciated.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "These templates do the following: 1: deploys a policy and a role. 2: deploys an EC2 instance. ", "keywords": ["instance", "policy"]}, {"source": "Text", "text": "4: deploys an RDS instance. ", "keywords": ["instance"]}, {"source": "Text", "text": "Another question, do I need to change anything on the child templates? ", "keywords": ["change"]}]}, {"Id": "182861795", "PostHistoryTypeId": "1", "PostId": "52592237", "RevisionGUID": "3cf02a1d-cc28-40aa-8afd-72c3aef91bbc", "CreationDate": "2018-10-01T13:27:28.913", "UserId": "10440910", "Text": "AWS Cloudformation Nested Templates", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "182861796", "PostHistoryTypeId": "3", "PostId": "52592237", "RevisionGUID": "3cf02a1d-cc28-40aa-8afd-72c3aef91bbc", "CreationDate": "2018-10-01T13:27:28.913", "UserId": "10440910", "Text": "|amazon-web-services|templates|nested|aws-cloudformation|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "52600847", "PostTypeId": "2", "ParentId": "52592237", "CreationDate": "2018-10-02T01:18:30.210", "Score": "1", "Body": "<p>A handful of questions here, so I'll address what I can :)</p>\n\n<p>For the master, or parent template, I'd recommend including <em>all</em> Parameters that the child stacks will need.</p>\n\n<p>When you want to make any updates in the future to <em>any</em> of the child stacks, you'll want to initiate that from the parent stack.</p>\n\n<p>According to the <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html\" rel=\"nofollow noreferrer\">docs</a>:</p>\n\n<blockquote>\n  <p>Certain stack operations, such as stack updates, should be initiated\n  from the root stack rather than performed directly on nested stacks\n  themselves.</p>\n</blockquote>\n\n<p>So your parent template could have a lot of parameters depending on how many parameters need to be passed directly to the child templates.</p>\n\n<p>Depending on how the child stacks use the <code>Output</code>s from the other child stacks, you <em>may</em> not need to use the <code>DependsOn</code> to enforce ordering, since Cloudformation is smart enough to figure out Implicit Dependencies (see <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html\" rel=\"nofollow noreferrer\">docs</a> discussing <code>DependsOn</code>). It certainly won't hurt to include these, but the <code>DependsOn</code> attribute isn't needed for most situations.</p>\n\n<p>You'll want to make sure the child stacks have an <code>Output</code>s section so that other child stacks can use them.  Pay close attention to the Return values for <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html\" rel=\"nofollow noreferrer\">AWS::CloudFormation::Stack</a></p>\n", "OwnerUserId": "1706504", "LastActivityDate": "2018-10-02T01:18:30.210", "CommentCount": "5", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "92144585", "PostId": "52600847", "Score": "0", "Text": "Thanks for your help! The parameters are already defined in the child templates, do I still need them on the parent too for updates like you mentioned? In terms of outputs, the child are already \"linked\" passing them between each other. Do I need to use the !Get Att in the parent? Not sure what this command is for...In terms of resources, I only need to point to the child through the S3 URL right?", "CreationDate": "2018-10-02T09:06:48.977", "UserId": "10440910", "filtered-sentences": []}, {"Id": "92145099", "PostId": "52600847", "Score": "0", "Text": "When updating the parent stack, you'll only be able to update the Parameters set in the parent stack. You'll need to pass the parameters to the [AWS::CloudFormation::Stack](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html) resource. I'm not sure what you mean by the child stacks are 'linked'. For nested stacks, you'd need to have the child stacks return (via `Output`) values, and the other child stacks would need them in their Parameter section using the `!GetAtt` intrinsic function", "CreationDate": "2018-10-02T09:21:47.710", "UserId": "1706504", "filtered-sentences": []}, {"Id": "92146760", "PostId": "52600847", "Score": "0", "Text": "Thanks for this!Would you mind if I give you my skype and I can show you over quickly? I need this for tomorrow....", "CreationDate": "2018-10-02T10:20:49.580", "UserId": "10440910", "filtered-sentences": []}, {"Id": "92147065", "PostId": "52600847", "Score": "0", "Text": "By \"linked\" I meant that I use outputs as inputs in other child templates in order to pass values between them, that's how they currently work without being nested, hope it makes sense.", "CreationDate": "2018-10-02T10:29:38.327", "UserId": "10440910", "filtered-sentences": []}, {"Id": "92169835", "PostId": "52600847", "Score": "0", "Text": "It makes sense. Check out [this question](https://stackoverflow.com/q/52225797/1706504) which has an answer detailing how you can pass Outputs between nested stacks", "CreationDate": "2018-10-02T23:46:22.780", "UserId": "1706504", "filtered-sentences": []}], "history": [{"Id": "182895989", "PostHistoryTypeId": "2", "PostId": "52600847", "RevisionGUID": "4f2ba186-8c1e-43fc-a29b-44e49e004ecf", "CreationDate": "2018-10-02T01:18:30.210", "UserId": "1706504", "Text": "A handful of questions here, so I'll address what I can :)\r\n\r\nFor the master, or parent template, I'd recommend including _all_ Parameters that the child stacks will need.\r\n\r\nWhen you want to make any updates in the future to _any_ of the child stacks, you'll want to initiate that from the parent stack.\r\n\r\nAccording to the [docs](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html):\r\n\r\n> Certain stack operations, such as stack updates, should be initiated\r\n> from the root stack rather than performed directly on nested stacks\r\n> themselves.\r\n\r\nSo your parent template could have a lot of parameters depending on how many parameters need to be passed directly to the child templates.\r\n\r\nDepending on how the child stacks use the `Output`s from the other child stacks, you _may_ not need to use the `DependsOn` to enforce ordering, since Cloudformation is smart enough to figure out Implicit Dependencies (see [docs](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) discussing `DependsOn`). It certainly won't hurt to include these, but the `DependsOn` attribute isn't needed for most situations.\r\n\r\nYou'll want to make sure the child stacks have an `Output`s section so that other child stacks can use them.  Pay close attention to the Return values for [AWS::CloudFormation::Stack](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html)\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Pay close attention to the Return values for [AWS::CloudFormation::Stack](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html)", "keywords": ["pay"]}]}], "filtered-sentences": [{"source": "Body", "text": "Pay close attention to the Return values for AWS::CloudFormation::Stack", "keywords": ["pay"]}]}, {"Id": "52593154", "PostTypeId": "2", "ParentId": "52592237", "CreationDate": "2018-10-01T14:18:34.967", "Score": "-1", "Body": "<p>If you have many dependent stacks, it is much easier to run everything for example from Ansible. Add outputs in each CF template, then just write simple playbook that will run your templates in desired order. Please take a look at <a href=\"https://docs.ansible.com/ansible/devel/modules/cloudformation_module.html\" rel=\"nofollow noreferrer\">https://docs.ansible.com/ansible/devel/modules/cloudformation_module.html</a></p>\n", "OwnerUserId": "946876", "LastActivityDate": "2018-10-01T14:18:34.967", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "182865524", "PostHistoryTypeId": "2", "PostId": "52593154", "RevisionGUID": "b09b230a-f3dc-456b-bd5d-2b186653c0dd", "CreationDate": "2018-10-01T14:18:34.967", "UserId": "946876", "Text": "If you have many dependent stacks, it is much easier to run everything for example from Ansible. Add outputs in each CF template, then just write simple playbook that will run your templates in desired order. Please take a look at https://docs.ansible.com/ansible/devel/modules/cloudformation_module.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "These templates do the following: 1: deploys a policy and a role. 2: deploys an EC2 instance. ", "keywords": ["instance", "policy"]}, {"source": "Body", "text": "4: deploys an RDS instance. ", "keywords": ["instance"]}, {"source": "Body", "text": "Another question, do I need to change anything on the child templates? ", "keywords": ["change"]}]}
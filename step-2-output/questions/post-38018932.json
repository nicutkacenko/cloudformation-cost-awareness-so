{"Id": "38018932", "PostTypeId": "1", "CreationDate": "2016-06-24T17:20:59.157", "Score": "2", "ViewCount": "1120", "Body": "<p>It is possible to auto scale dynamodb tables provisioned read and write capacity using AWS Console.</p>\n\n<p>Is there anyway to auto scale using CFTs.</p>\n", "OwnerUserId": "6510051", "LastEditorUserId": "6510051", "LastEditDate": "2016-06-24T18:18:08.020", "LastActivityDate": "2022-02-21T13:49:13.910", "Title": "How to auto scale dynamoDB provisioned throughput using cloud formation templates (CFTS)?", "Tags": "|amazon-dynamodb|aws-cloudformation|autoscaling|", "AnswerCount": "3", "CommentCount": "1", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "112157082", "PostId": "38018932", "Score": "0", "Text": "Too old to answer, but if anyone lands up here, this is how you can do it: https://aws.amazon.com/blogs/database/how-to-use-aws-cloudformation-to-configure-auto-scaling-for-amazon-dynamodb-tables-and-indexes/", "CreationDate": "2020-08-15T15:03:52.020", "UserId": "44257", "filtered-sentences": []}], "history": [{"Id": "121213635", "PostHistoryTypeId": "2", "PostId": "38018932", "RevisionGUID": "94da6777-ca55-4c19-8028-6a14f2f3a000", "CreationDate": "2016-06-24T17:20:59.157", "UserId": "6510051", "Text": "It is possible to auto scale dynamodb tables provisioned read and write capacity using AWS CLI and AWS Sdk.\r\n\r\nIs there anyway to auto scale using CFTs.", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "121213636", "PostHistoryTypeId": "1", "PostId": "38018932", "RevisionGUID": "94da6777-ca55-4c19-8028-6a14f2f3a000", "CreationDate": "2016-06-24T17:20:59.157", "UserId": "6510051", "Text": "How can we auto scale dynamoDB tables provisioned read and write throughput using cloud formation templates (CFTS)?", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "121213637", "PostHistoryTypeId": "3", "PostId": "38018932", "RevisionGUID": "94da6777-ca55-4c19-8028-6a14f2f3a000", "CreationDate": "2016-06-24T17:20:59.157", "UserId": "6510051", "Text": "|amazon-dynamodb|aws-cloudformation|autoscaling|", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "121216589", "PostHistoryTypeId": "5", "PostId": "38018932", "RevisionGUID": "efba730f-69ce-4ea2-a1c5-9197f96de474", "CreationDate": "2016-06-24T18:12:32.843", "UserId": "6510051", "Comment": "deleted 8 characters in body", "Text": "It is possible to auto scale dynamodb tables provisioned read and write capacity using AWS Console.\r\n\r\nIs there anyway to auto scale using CFTs.", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "121216900", "PostHistoryTypeId": "4", "PostId": "38018932", "RevisionGUID": "8012e174-448a-44f6-b480-bc38296d8878", "CreationDate": "2016-06-24T18:18:08.020", "UserId": "6510051", "Comment": "deleted 8 characters in body", "Text": "How to auto scale dynamoDB provisioned throughput using cloud formation templates (CFTS)?", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "answers": [{"Id": "39481873", "PostTypeId": "2", "ParentId": "38018932", "CreationDate": "2016-09-14T03:03:01.717", "Score": "-1", "Body": "<p>The provisioned read and write capacity units describe the minimum number of consistent read and write throughput. This is the minimum performance guarantee from AWS. If you wish to increase this limit, one way to do it is to use the \"Update Stack\" functionality provided in the AWS CloudFormation. The pre-requisite for this is the original DynamoDB tables should have been created through a CF template.</p>\n\n<p>Also, DynamoDB unlike the RDS service does not support auto-scaling.</p>\n\n<p>Attaching some useful links.\n- <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html\" rel=\"nofollow\">http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html</a>\n- <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-provisionedthroughput\" rel=\"nofollow\">http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-provisionedthroughput</a></p>\n\n<p>Hope this helps.</p>\n", "OwnerUserId": "2242667", "LastActivityDate": "2016-09-14T03:03:01.717", "CommentCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "127039993", "PostHistoryTypeId": "2", "PostId": "39481873", "RevisionGUID": "fc2d63f8-a1e5-4151-abfa-8d2e5ea750fb", "CreationDate": "2016-09-14T03:03:01.717", "UserId": "2242667", "Text": "The provisioned read and write capacity units describe the minimum number of consistent read and write throughput. This is the minimum performance guarantee from AWS. If you wish to increase this limit, one way to do it is to use the \"Update Stack\" functionality provided in the AWS CloudFormation. The pre-requisite for this is the original DynamoDB tables should have been created through a CF template.\r\n\r\nAlso, DynamoDB unlike the RDS service does not support auto-scaling.\r\n\r\nAttaching some useful links.\r\n- http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html\r\n- http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-provisionedthroughput\r\n\r\nHope this helps.\r\n", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "45314574", "PostTypeId": "2", "ParentId": "38018932", "CreationDate": "2017-07-25T22:34:15.243", "Score": "-1", "Body": "<p>As of Jun 2017 AWS provides their own Dynamodb Auto Scaling solution. <a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/AutoScaling.html\" rel=\"nofollow noreferrer\">http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/AutoScaling.html</a></p>\n\n<p>Cloud Formation Example: <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-examples-application-autoscaling\" rel=\"nofollow noreferrer\">http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-examples-application-autoscaling</a></p>\n", "OwnerUserId": "2092247", "LastActivityDate": "2017-07-25T22:34:15.243", "CommentCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "152451264", "PostHistoryTypeId": "2", "PostId": "45314574", "RevisionGUID": "43310e39-568c-46ba-b3a8-a5cf91de769c", "CreationDate": "2017-07-25T22:34:15.243", "UserId": "2092247", "Text": "As of Jun 2017 AWS provides their own Dynamodb Auto Scaling solution. http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/AutoScaling.html\r\n\r\nCloud Formation Example: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-examples-application-autoscaling", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "71207442", "PostTypeId": "2", "ParentId": "38018932", "CreationDate": "2022-02-21T13:49:13.910", "Score": "0", "Body": "<p>Old question, but DynamoDB now supports 'On demand' throughput rather than provisioned. <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-billingmode\" rel=\"nofollow noreferrer\">docs</a>. This is an alternative to auto-scaling, but pricing may be higher.</p>\n<p>Set the property <code>BillingMode</code> to <code>PAY_PER_REQUEST</code></p>\n<p>There is no need to then set the <code>ProvisionedThroughput</code></p>\n<p>Example YAML:</p>\n<pre><code>  TableName:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      TableName: TableName\n      BillingMode: PAY_PER_REQUEST\n</code></pre>\n", "OwnerUserId": "14121843", "LastActivityDate": "2022-02-21T13:49:13.910", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "264594301", "PostHistoryTypeId": "2", "PostId": "71207442", "RevisionGUID": "59dbbea5-936c-4dbf-979d-7b5236606e19", "CreationDate": "2022-02-21T13:49:13.910", "UserId": "14121843", "Text": "Old question, but DynamoDB now supports 'On demand' throughput rather than provisioned. [docs][1]. This is an alternative to auto-scaling, but pricing may be higher.\r\n\r\nSet the property `BillingMode` to `PAY_PER_REQUEST`\r\n\r\nThere is no need to then set the `ProvisionedThroughput`\r\n\r\nExample YAML:\r\n```\r\n  TableName:\r\n    Type: AWS::DynamoDB::Table\r\n    Properties:\r\n      TableName: TableName\r\n      BillingMode: PAY_PER_REQUEST\r\n```\r\n\r\n  [1]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-billingmode", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "There is no need to then set the `ProvisionedThroughput` Example YAML: ``` TableName: Type: AWS::DynamoDB::Table Properties: TableName: TableName BillingMode: PAY_PER_REQUEST ``` [1]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-billingmode", "keywords": ["bill"]}]}], "filtered-sentences": []}], "contains-topic": false, "filtered-sentences": []}
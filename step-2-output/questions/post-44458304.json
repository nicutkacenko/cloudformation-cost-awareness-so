{"Id": "44458304", "PostTypeId": "1", "AcceptedAnswerId": "44460789", "CreationDate": "2017-06-09T12:49:37.150", "Score": "51", "ViewCount": "20520", "Body": "<p>I want this resource to work with the <code>!Sub</code> (or <code>Fn::Sub</code>) intrinsic function</p>\n<pre><code>Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:user/${aws:username}'\n</code></pre>\n<p>The <code>aws:username</code> is a <a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_variables.html\" rel=\"nofollow noreferrer\">policy variable</a> that mustn't be replaced.</p>\n<p>One solution would be to use <code>Fn::Join</code> instead and write a bit more boilerplate code.</p>\n<p>Better: Can you escape the <code>${aws:username}</code> so that <code>!Sub</code> will work here? <strike>Unfortunately, the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-sub.html\" rel=\"nofollow noreferrer\">documentation</a> does not mention anything about escaping.</strike></p>\n", "OwnerUserId": "12016", "LastEditorUserId": "385273", "LastEditDate": "2023-05-14T23:53:34.320", "LastActivityDate": "2023-05-14T23:53:34.320", "Title": "How to escape \"${}\" in cloudformations \"Fn::Sub\"", "Tags": "|aws-cloudformation|", "AnswerCount": "1", "CommentCount": "0", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "148996346", "PostHistoryTypeId": "2", "PostId": "44458304", "RevisionGUID": "ac4fab06-362d-4742-bebc-587369244c7e", "CreationDate": "2017-06-09T12:49:37.150", "UserId": "12016", "Text": "I want this resource to work with the `!Sub` (or `Fn::Sub`) intrinsic function\r\n\r\n    Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:user/${aws:username}'\r\n\r\nThe `aws:username` is a [pollicy variable][1] that mustn't be replaced.\r\n\r\nOne solution would be to use `Fn::Join` instead and write a bit more boilerplate code. \r\n\r\nBetter: Can you escape the `${aws:username}` so that `!Sub` will work here? Unfortunately, the [documentation][2] does not mention anything about escaping.\r\n\r\n\r\n  [1]: http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_variables.html\r\n  [2]: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-sub.html", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "148996347", "PostHistoryTypeId": "1", "PostId": "44458304", "RevisionGUID": "ac4fab06-362d-4742-bebc-587369244c7e", "CreationDate": "2017-06-09T12:49:37.150", "UserId": "12016", "Text": "How to escape $ in cloudformations \"Fn::Sub\"", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "148996348", "PostHistoryTypeId": "3", "PostId": "44458304", "RevisionGUID": "ac4fab06-362d-4742-bebc-587369244c7e", "CreationDate": "2017-06-09T12:49:37.150", "UserId": "12016", "Text": "|aws-cloudformation|", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "149150050", "PostHistoryTypeId": "5", "PostId": "44458304", "RevisionGUID": "e26e3083-7424-4dd7-8413-eba16fda5d7b", "CreationDate": "2017-06-12T07:43:53.977", "UserId": "12016", "Comment": "added 17 characters in body", "Text": "I want this resource to work with the `!Sub` (or `Fn::Sub`) intrinsic function\r\n\r\n    Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:user/${aws:username}'\r\n\r\nThe `aws:username` is a [pollicy variable][1] that mustn't be replaced.\r\n\r\nOne solution would be to use `Fn::Join` instead and write a bit more boilerplate code. \r\n\r\nBetter: Can you escape the `${aws:username}` so that `!Sub` will work here? <strike>Unfortunately, the [documentation][2] does not mention anything about escaping.</strike>\r\n\r\n\r\n  [1]: http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_variables.html\r\n  [2]: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-sub.html", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "149150108", "PostHistoryTypeId": "4", "PostId": "44458304", "RevisionGUID": "e26e3083-7424-4dd7-8413-eba16fda5d7b", "CreationDate": "2017-06-12T07:43:53.977", "UserId": "12016", "Comment": "added 17 characters in body", "Text": "How to escape \"${}\" in cloudformations \"Fn::Sub\"", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "292795740", "PostHistoryTypeId": "5", "PostId": "44458304", "RevisionGUID": "8c2aceeb-af75-4786-903c-5e1d641d9258", "CreationDate": "2023-05-14T23:53:34.320", "UserId": "385273", "Comment": "deleted 1 character in body", "Text": "I want this resource to work with the `!Sub` (or `Fn::Sub`) intrinsic function\r\n\r\n    Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:user/${aws:username}'\r\n\r\nThe `aws:username` is a [policy variable][1] that mustn't be replaced.\r\n\r\nOne solution would be to use `Fn::Join` instead and write a bit more boilerplate code. \r\n\r\nBetter: Can you escape the `${aws:username}` so that `!Sub` will work here? <strike>Unfortunately, the [documentation][2] does not mention anything about escaping.</strike>\r\n\r\n\r\n  [1]: http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_variables.html\r\n  [2]: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-sub.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I want this resource to work with the `!Sub` (or `Fn::Sub`) intrinsic function Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:user/${aws:username}' The `aws:username` is a [policy variable][1] that mustn't be replaced. ", "keywords": ["policy"]}]}], "answers": [{"Id": "44460789", "PostTypeId": "2", "ParentId": "44458304", "CreationDate": "2017-06-09T14:49:24.930", "Score": "96", "Body": "<p>You actually can escape <code>$</code> characters with <code>${!}</code>.</p>\n<p>So your resource would look like this:</p>\n<pre><code>Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:user/${!aws:username}'\n</code></pre>\n<p>It is mentioned in the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-sub.html\" rel=\"noreferrer\">docs</a> under the string parameter section.</p>\n<blockquote>\n<p>To write a dollar sign and curly braces (${}) literally, add an\nexclamation point (!) after the open curly brace, such as ${!Literal}.\nAWS CloudFormation resolves this text as ${Literal}.</p>\n</blockquote>\n", "OwnerUserId": "220219", "LastEditorUserId": "1480391", "LastEditDate": "2021-01-06T16:06:49.050", "LastActivityDate": "2021-01-06T16:06:49.050", "CommentCount": "4", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "75981215", "PostId": "44460789", "Score": "0", "Text": "Yep, it was in the documentation. I'm feeling so silly right now.", "CreationDate": "2017-06-12T07:44:31.883", "UserId": "12016", "filtered-sentences": []}, {"Id": "113639483", "PostId": "44460789", "Score": "6", "Text": "That's a weird way to escape tho", "CreationDate": "2020-10-08T14:13:59.233", "UserId": "3532506", "filtered-sentences": []}, {"Id": "121168889", "PostId": "44460789", "Score": "0", "Text": "@mana Don't feel silly. There are a billion AWS doc pages - easy to miss things.", "CreationDate": "2021-07-28T14:24:06.950", "UserId": "536485", "filtered-sentences": [{"source": "Text", "text": "There are a billion AWS doc pages - easy to miss things.", "keywords": ["bill"]}]}], "history": [{"Id": "149006194", "PostHistoryTypeId": "2", "PostId": "44460789", "RevisionGUID": "5d8bc14d-0efb-4bbf-8aa8-1df0cda22d3d", "CreationDate": "2017-06-09T14:49:24.930", "UserId": "220219", "Text": "You actually can escape \"$\" characters with \"${!}\".\r\n\r\nSo your resource would look like this:\r\n\r\n    Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:user/${!aws:username}'\r\n\r\nIt is mentioned in the [docs][1] under the string parameter section.\r\n\r\n> To write a dollar sign and curly braces (${}) literally, add an\r\n> exclamation point (!) after the open curly brace, such as ${!Literal}.\r\n> AWS CloudFormation resolves this text as ${Literal}.\r\n\r\n\r\n\r\n  [1]: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-sub.html", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "238225939", "PostHistoryTypeId": "5", "PostId": "44460789", "RevisionGUID": "cc225df7-f7ce-4a89-813d-e63aeb8119b8", "CreationDate": "2021-01-06T16:06:49.050", "UserId": "1480391", "Comment": "edited body", "Text": "You actually can escape `$` characters with `${!}`.\r\n\r\nSo your resource would look like this:\r\n\r\n    Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:user/${!aws:username}'\r\n\r\nIt is mentioned in the [docs][1] under the string parameter section.\r\n\r\n> To write a dollar sign and curly braces (${}) literally, add an\r\n> exclamation point (!) after the open curly brace, such as ${!Literal}.\r\n> AWS CloudFormation resolves this text as ${Literal}.\r\n\r\n\r\n\r\n  [1]: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-sub.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "The aws:username is a policy variable that mustn't be replaced. ", "keywords": ["policy"]}]}
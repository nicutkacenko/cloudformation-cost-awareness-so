{"Id": "60679995", "PostTypeId": "1", "CreationDate": "2020-03-14T05:26:19.270", "Score": "0", "ViewCount": "809", "Body": "<p>I am trying to create an AWS Custom resource in Cloudformation template to retrieve the MSK Broker DNS details.</p>\n\n<p>Below is my sample lambda code:</p>\n\n<pre><code>import json\nimport logging\nimport boto3\nimport subprocess\nimport shlex\nimport os\nimport time\nfrom hashlib import md5\nfrom crhelper import CfnResource\nfrom time import sleep\n\nlogger = logging.getLogger(__name__)\nhelper = CfnResource(json_logging=True, log_level='DEBUG')\n\n\n\n\n@helper.create\n@helper.update\ndef create_handler(event, _):\n    print('Received event: %s' % json.dumps(event))\n    retry_timeout = 0\n    if \"Timeout\" in event['ResourceProperties']:\n        retry_timeout = int(event['ResourceProperties'][\"Timeout\"])\n    if retry_timeout &gt; 600:\n        retry_timeout = 600\n    MskArn = event['ResourceProperties']['MskArn']\n    kafkaClient = boto3.client('kafka', region_name=event['ResourceProperties']['aws-region'])\n    while True:\n        try:\n            response = kafkaClient.list_nodes(\n                ClusterArn=event['ResourceProperties']['MskArn']\n            )\n            r1=response['NodeInfoList']\n            BrokerCount=len(r1)\n            i = 0\n            DNS=[]\n            name = event['ResourceProperties']['Name']\n            while i &lt; BrokerCount:\n                broker=response['NodeInfoList'][i]\n                brokerDNS=broker['BrokerNodeInfo']['Endpoints'][0]\n                DNS.append(brokerDNS)\n                print(brokerDNS)\n                i = i + 1\n            return DNS\n            outp = DNS\n            break\n        except Exception as e:\n            if retry_timeout &lt; 1:\n                raise\n            else:\n                logging.error('Exception: %s' % e, exc_info=True)\n                print(\"retrying until timeout...\")\n                time.sleep(5)\n                retry_timeout = retry_timeout - 5\n    response_data = {}\n    if \"ResponseKey\" in event['ResourceProperties']:\n        response_data[event['ResourceProperties'][\"ResponseKey\"]] = outp\n    if len(outp.encode('utf-8')) &gt; 1000:\n        outp = 'MD5-' + str(md5(outp.encode('utf-8')).hexdigest())\n    helper.Data.update(response_data)\n    return outp\n\n\ndef lambda_handler(event, context):\n    helper(event, context)\n    print(response_data)\n</code></pre>\n\n<p>below is my sample AWS Cloudformation template:</p>\n\n<pre><code>---\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: 'To Get MSK Broker DNS CloudFormation Template'\nResources:\n  GetMskBrokersDetails:\n    Type: \"Custom::GetMskDetails\"\n    Version: '1.0'\n    Properties:\n      Name: GetMskBrokerDNS\n      ServiceToken: LAMBDA_ARN\n      aws-region: !Sub \"${AWS::Region}\"\n      MskArn: MSK_CLUSTER_ARN\n\nOutputs:\n  MskBrokerDns1:\n    Description: Msk Broker DNS Records\n    Value: !Ref GetMskBrokersDetails\n</code></pre>\n\n<p>Above is working fine. When I execute the above templates it gives me below outputs.</p>\n\n<pre><code>MskBrokerDns1   ['b-1.kafka.ap-south-1.amazonaws.com', 'b-2.kafka.ap-south-1.amazonaws.com']\n</code></pre>\n\n<p>As above output is list, we want to get above DNS details in two separate Output variables. like below:</p>\n\n<pre><code>Outputs:\n  MskBrokerDns1:\n    Description: Msk Broker DNS Records\n    Value: !Select [ 0, !Ref GetMskBrokersDetails ]\n  MskBrokerDns2:\n    Description: Msk Broker DNS Records\n    Value: !Select [ 1, !Ref GetMskBrokersDetails ]\n</code></pre>\n\n<p>When we try to execute template with above changes we get below error:</p>\n\n<blockquote>\n  <p>Template error: Fn::Select requires a list argument with two elements: an integer index and a list</p>\n</blockquote>\n\n<p>So we are requesting for community support, how we can fix the above issue.</p>\n", "OwnerUserId": "8593254", "LastEditorDisplayName": "user9270170", "LastEditDate": "2020-03-14T09:46:48.860", "LastActivityDate": "2020-03-14T18:59:28.493", "Title": "How to get selective item when AWS::CustomResource has list type output", "Tags": "|python|amazon-web-services|aws-cloudformation|aws-cloudformation-custom-resource|", "AnswerCount": "1", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "107360261", "PostId": "60679995", "Score": "0", "Text": "Don't understand how your code works. What is `ResponseKey`? Why are you returning `outp` by both a `return` statement and `helper.Data`? The `return` should be used to return physical resource id, not some python list?", "CreationDate": "2020-03-14T08:36:36.263", "UserId": "248823", "filtered-sentences": []}, {"Id": "107369594", "PostId": "60679995", "Score": "0", "Text": "my issue. i am not that much into python. with help from Google i was able to update the python code and now it is working.", "CreationDate": "2020-03-14T18:55:49.897", "UserId": "8593254", "filtered-sentences": []}], "history": [{"Id": "216913893", "PostHistoryTypeId": "2", "PostId": "60679995", "RevisionGUID": "d818cf3f-0785-48f0-907f-7f47c4ec8769", "CreationDate": "2020-03-14T05:26:19.270", "UserId": "8593254", "Text": "i am trying to create an AWS Custom resource in Cloudformation template to retrieve the MSK Broker DNS details.\r\n\r\nbelow is my sample lambda code:\r\n```\r\nimport json\r\nimport logging\r\nimport boto3\r\nimport subprocess\r\nimport shlex\r\nimport os\r\nimport time\r\nfrom hashlib import md5\r\nfrom crhelper import CfnResource\r\nfrom time import sleep\r\n\r\nlogger = logging.getLogger(__name__)\r\nhelper = CfnResource(json_logging=True, log_level='DEBUG')\r\n\r\n\r\n\r\n\r\n@helper.create\r\n@helper.update\r\ndef create_handler(event, _):\r\n    print('Received event: %s' % json.dumps(event))\r\n    retry_timeout = 0\r\n    if \"Timeout\" in event['ResourceProperties']:\r\n        retry_timeout = int(event['ResourceProperties'][\"Timeout\"])\r\n    if retry_timeout > 600:\r\n        retry_timeout = 600\r\n    MskArn = event['ResourceProperties']['MskArn']\r\n    kafkaClient = boto3.client('kafka', region_name=event['ResourceProperties']['aws-region'])\r\n    while True:\r\n        try:\r\n            response = kafkaClient.list_nodes(\r\n                ClusterArn=event['ResourceProperties']['MskArn']\r\n            )\r\n            r1=response['NodeInfoList']\r\n            BrokerCount=len(r1)\r\n            i = 0\r\n            DNS=[]\r\n            name = event['ResourceProperties']['Name']\r\n            while i < BrokerCount:\r\n                broker=response['NodeInfoList'][i]\r\n                brokerDNS=broker['BrokerNodeInfo']['Endpoints'][0]\r\n                DNS.append(brokerDNS)\r\n                print(brokerDNS)\r\n                i = i + 1\r\n            return DNS\r\n            outp = DNS\r\n            break\r\n        except Exception as e:\r\n            if retry_timeout < 1:\r\n                raise\r\n            else:\r\n                logging.error('Exception: %s' % e, exc_info=True)\r\n                print(\"retrying until timeout...\")\r\n                time.sleep(5)\r\n                retry_timeout = retry_timeout - 5\r\n    response_data = {}\r\n    if \"ResponseKey\" in event['ResourceProperties']:\r\n        response_data[event['ResourceProperties'][\"ResponseKey\"]] = outp\r\n    if len(outp.encode('utf-8')) > 1000:\r\n        outp = 'MD5-' + str(md5(outp.encode('utf-8')).hexdigest())\r\n    helper.Data.update(response_data)\r\n    return outp\r\n\r\n\r\ndef lambda_handler(event, context):\r\n    helper(event, context)\r\n    print(response_data)\r\n```\r\n\r\nbelow is my sample AWS Cloudformation template:\r\n```\r\n---\r\nAWSTemplateFormatVersion: '2010-09-09'\r\nDescription: 'To Get MSK Broker DNS CloudFormation Template'\r\nResources:\r\n  GetMskBrokersDetails:\r\n    Type: \"Custom::GetMskDetails\"\r\n    Version: '1.0'\r\n    Properties:\r\n      Name: GetMskBrokerDNS\r\n      ServiceToken: arn:aws:lambda:ap-south-1:361996608881:function:GetMskBrokerDns\r\n      aws-region: !Sub \"${AWS::Region}\"\r\n      MskArn: MSK_CLUSTER_ARN\r\n\r\nOutputs:\r\n  MskBrokerDns1:\r\n    Description: Msk Broker DNS Records\r\n    Value: !Ref GetMskBrokersDetails\r\n```\r\n\r\nabove is working fine. when i execute the above templates it gives me below outputs.\r\n```\r\nMskBrokerDns1 ['b-1.appsecurity-msk-clust.83e3ku.c4.kafka.ap-south-1.amazonaws.com', 'b-2.appsecurity-msk-clust.83e3ku.c4.kafka.ap-south-1.amazonaws.com']\r\n```\r\n\r\nas above output is list, we want to get above DNS details in two separate Output variables. like below:\r\n```\r\nOutputs:\r\n  MskBrokerDns1:\r\n    Description: Msk Broker DNS Records\r\n    Value: !Select [ 0, !Ref GetMskBrokersDetails ]\r\n  MskBrokerDns2:\r\n    Description: Msk Broker DNS Records\r\n    Value: !Select [ 1, !Ref GetMskBrokersDetails ]\r\n```\r\n\r\nwhen we try to execute template with above changes we get below error:\r\n>Template error: Fn::Select requires a list argument with two elements: an integer index and a list\r\n\r\nso we are requesting for community support, how we can fix the above issue.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "``` MskBrokerDns1 ['b-1.appsecurity-msk-clust.83e3ku.c4.kafka.ap-south-1.amazonaws.com', 'b-2.appsecurity-msk-clust.83e3ku.c4.kafka.ap-south-1.amazonaws.com'] ``` as above output is list, we want to get above DNS details in two separate Output variables. like below: ``` Outputs: MskBrokerDns1: Description: Msk Broker DNS Records Value: !Select [ 0, !Ref GetMskBrokersDetails ] MskBrokerDns2: Description: Msk Broker DNS Records Value: !Select [ 1, !Ref GetMskBrokersDetails ] ``` when we try to execute template with above changes we get below error: >Template error: Fn::Select requires a list argument with two elements: an integer index and a list so we are requesting for community support, how we can fix the above issue.", "keywords": ["change"]}]}, {"Id": "216922659", "PostHistoryTypeId": "5", "PostId": "60679995", "RevisionGUID": "f915b31e-fcdd-4bd6-8ba0-7ce6a52c5a4c", "CreationDate": "2020-03-14T09:46:48.860", "UserDisplayName": "user9270170", "Comment": "content format", "Text": "I am trying to create an AWS Custom resource in Cloudformation template to retrieve the MSK Broker DNS details.\r\n\r\nBelow is my sample lambda code:\r\n```\r\nimport json\r\nimport logging\r\nimport boto3\r\nimport subprocess\r\nimport shlex\r\nimport os\r\nimport time\r\nfrom hashlib import md5\r\nfrom crhelper import CfnResource\r\nfrom time import sleep\r\n\r\nlogger = logging.getLogger(__name__)\r\nhelper = CfnResource(json_logging=True, log_level='DEBUG')\r\n\r\n\r\n\r\n\r\n@helper.create\r\n@helper.update\r\ndef create_handler(event, _):\r\n    print('Received event: %s' % json.dumps(event))\r\n    retry_timeout = 0\r\n    if \"Timeout\" in event['ResourceProperties']:\r\n        retry_timeout = int(event['ResourceProperties'][\"Timeout\"])\r\n    if retry_timeout > 600:\r\n        retry_timeout = 600\r\n    MskArn = event['ResourceProperties']['MskArn']\r\n    kafkaClient = boto3.client('kafka', region_name=event['ResourceProperties']['aws-region'])\r\n    while True:\r\n        try:\r\n            response = kafkaClient.list_nodes(\r\n                ClusterArn=event['ResourceProperties']['MskArn']\r\n            )\r\n            r1=response['NodeInfoList']\r\n            BrokerCount=len(r1)\r\n            i = 0\r\n            DNS=[]\r\n            name = event['ResourceProperties']['Name']\r\n            while i < BrokerCount:\r\n                broker=response['NodeInfoList'][i]\r\n                brokerDNS=broker['BrokerNodeInfo']['Endpoints'][0]\r\n                DNS.append(brokerDNS)\r\n                print(brokerDNS)\r\n                i = i + 1\r\n            return DNS\r\n            outp = DNS\r\n            break\r\n        except Exception as e:\r\n            if retry_timeout < 1:\r\n                raise\r\n            else:\r\n                logging.error('Exception: %s' % e, exc_info=True)\r\n                print(\"retrying until timeout...\")\r\n                time.sleep(5)\r\n                retry_timeout = retry_timeout - 5\r\n    response_data = {}\r\n    if \"ResponseKey\" in event['ResourceProperties']:\r\n        response_data[event['ResourceProperties'][\"ResponseKey\"]] = outp\r\n    if len(outp.encode('utf-8')) > 1000:\r\n        outp = 'MD5-' + str(md5(outp.encode('utf-8')).hexdigest())\r\n    helper.Data.update(response_data)\r\n    return outp\r\n\r\n\r\ndef lambda_handler(event, context):\r\n    helper(event, context)\r\n    print(response_data)\r\n```\r\n\r\nbelow is my sample AWS Cloudformation template:\r\n```\r\n---\r\nAWSTemplateFormatVersion: '2010-09-09'\r\nDescription: 'To Get MSK Broker DNS CloudFormation Template'\r\nResources:\r\n  GetMskBrokersDetails:\r\n    Type: \"Custom::GetMskDetails\"\r\n    Version: '1.0'\r\n    Properties:\r\n      Name: GetMskBrokerDNS\r\n      ServiceToken: LAMBDA_ARN\r\n      aws-region: !Sub \"${AWS::Region}\"\r\n      MskArn: MSK_CLUSTER_ARN\r\n\r\nOutputs:\r\n  MskBrokerDns1:\r\n    Description: Msk Broker DNS Records\r\n    Value: !Ref GetMskBrokersDetails\r\n```\r\n\r\nAbove is working fine. When I execute the above templates it gives me below outputs.\r\n```\r\nMskBrokerDns1 ['b-1.kafka.ap-south-1.amazonaws.com', 'b-2.kafka.ap-south-1.amazonaws.com']\r\n```\r\n\r\nAs above output is list, we want to get above DNS details in two separate Output variables. like below:\r\n```\r\nOutputs:\r\n  MskBrokerDns1:\r\n    Description: Msk Broker DNS Records\r\n    Value: !Select [ 0, !Ref GetMskBrokersDetails ]\r\n  MskBrokerDns2:\r\n    Description: Msk Broker DNS Records\r\n    Value: !Select [ 1, !Ref GetMskBrokersDetails ]\r\n```\r\n\r\nWhen we try to execute template with above changes we get below error:\r\n>Template error: Fn::Select requires a list argument with two elements: an integer index and a list\r\n\r\nSo we are requesting for community support, how we can fix the above issue.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "When we try to execute template with above changes we get below error: >Template error: Fn::Select requires a list argument with two elements: an integer index and a list So we are requesting for community support, how we can fix the above issue.", "keywords": ["change"]}]}, {"Id": "216922660", "PostHistoryTypeId": "4", "PostId": "60679995", "RevisionGUID": "f915b31e-fcdd-4bd6-8ba0-7ce6a52c5a4c", "CreationDate": "2020-03-14T09:46:48.860", "UserDisplayName": "user9270170", "Comment": "content format", "Text": "How to get selective item when AWS::CustomResource has list type output", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "216922661", "PostHistoryTypeId": "24", "PostId": "60679995", "RevisionGUID": "f915b31e-fcdd-4bd6-8ba0-7ce6a52c5a4c", "CreationDate": "2020-03-14T09:46:48.860", "Comment": "Proposed by 9270170 approved by 248823, 12411536 edit id of 4743314", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "216913894", "PostHistoryTypeId": "1", "PostId": "60679995", "RevisionGUID": "d818cf3f-0785-48f0-907f-7f47c4ec8769", "CreationDate": "2020-03-14T05:26:19.270", "UserId": "8593254", "Text": "how to get selective item when AWS::CustomResource has list type output", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "216913895", "PostHistoryTypeId": "3", "PostId": "60679995", "RevisionGUID": "d818cf3f-0785-48f0-907f-7f47c4ec8769", "CreationDate": "2020-03-14T05:26:19.270", "UserId": "8593254", "Text": "|python|amazon-web-services|aws-cloudformation|aws-cloudformation-custom-resource|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "216914141", "PostHistoryTypeId": "5", "PostId": "60679995", "RevisionGUID": "00b37cb7-8180-4561-b866-dff7abca80db", "CreationDate": "2020-03-14T05:33:10.597", "UserId": "8593254", "Comment": "deleted 117 characters in body", "Text": "i am trying to create an AWS Custom resource in Cloudformation template to retrieve the MSK Broker DNS details.\r\n\r\nbelow is my sample lambda code:\r\n```\r\nimport json\r\nimport logging\r\nimport boto3\r\nimport subprocess\r\nimport shlex\r\nimport os\r\nimport time\r\nfrom hashlib import md5\r\nfrom crhelper import CfnResource\r\nfrom time import sleep\r\n\r\nlogger = logging.getLogger(__name__)\r\nhelper = CfnResource(json_logging=True, log_level='DEBUG')\r\n\r\n\r\n\r\n\r\n@helper.create\r\n@helper.update\r\ndef create_handler(event, _):\r\n    print('Received event: %s' % json.dumps(event))\r\n    retry_timeout = 0\r\n    if \"Timeout\" in event['ResourceProperties']:\r\n        retry_timeout = int(event['ResourceProperties'][\"Timeout\"])\r\n    if retry_timeout > 600:\r\n        retry_timeout = 600\r\n    MskArn = event['ResourceProperties']['MskArn']\r\n    kafkaClient = boto3.client('kafka', region_name=event['ResourceProperties']['aws-region'])\r\n    while True:\r\n        try:\r\n            response = kafkaClient.list_nodes(\r\n                ClusterArn=event['ResourceProperties']['MskArn']\r\n            )\r\n            r1=response['NodeInfoList']\r\n            BrokerCount=len(r1)\r\n            i = 0\r\n            DNS=[]\r\n            name = event['ResourceProperties']['Name']\r\n            while i < BrokerCount:\r\n                broker=response['NodeInfoList'][i]\r\n                brokerDNS=broker['BrokerNodeInfo']['Endpoints'][0]\r\n                DNS.append(brokerDNS)\r\n                print(brokerDNS)\r\n                i = i + 1\r\n            return DNS\r\n            outp = DNS\r\n            break\r\n        except Exception as e:\r\n            if retry_timeout < 1:\r\n                raise\r\n            else:\r\n                logging.error('Exception: %s' % e, exc_info=True)\r\n                print(\"retrying until timeout...\")\r\n                time.sleep(5)\r\n                retry_timeout = retry_timeout - 5\r\n    response_data = {}\r\n    if \"ResponseKey\" in event['ResourceProperties']:\r\n        response_data[event['ResourceProperties'][\"ResponseKey\"]] = outp\r\n    if len(outp.encode('utf-8')) > 1000:\r\n        outp = 'MD5-' + str(md5(outp.encode('utf-8')).hexdigest())\r\n    helper.Data.update(response_data)\r\n    return outp\r\n\r\n\r\ndef lambda_handler(event, context):\r\n    helper(event, context)\r\n    print(response_data)\r\n```\r\n\r\nbelow is my sample AWS Cloudformation template:\r\n```\r\n---\r\nAWSTemplateFormatVersion: '2010-09-09'\r\nDescription: 'To Get MSK Broker DNS CloudFormation Template'\r\nResources:\r\n  GetMskBrokersDetails:\r\n    Type: \"Custom::GetMskDetails\"\r\n    Version: '1.0'\r\n    Properties:\r\n      Name: GetMskBrokerDNS\r\n      ServiceToken: LAMBDA_ARN\r\n      aws-region: !Sub \"${AWS::Region}\"\r\n      MskArn: MSK_CLUSTER_ARN\r\n\r\nOutputs:\r\n  MskBrokerDns1:\r\n    Description: Msk Broker DNS Records\r\n    Value: !Ref GetMskBrokersDetails\r\n```\r\n\r\nabove is working fine. when i execute the above templates it gives me below outputs.\r\n```\r\nMskBrokerDns1 ['b-1.kafka.ap-south-1.amazonaws.com', 'b-2.kafka.ap-south-1.amazonaws.com']\r\n```\r\n\r\nas above output is list, we want to get above DNS details in two separate Output variables. like below:\r\n```\r\nOutputs:\r\n  MskBrokerDns1:\r\n    Description: Msk Broker DNS Records\r\n    Value: !Select [ 0, !Ref GetMskBrokersDetails ]\r\n  MskBrokerDns2:\r\n    Description: Msk Broker DNS Records\r\n    Value: !Select [ 1, !Ref GetMskBrokersDetails ]\r\n```\r\n\r\nwhen we try to execute template with above changes we get below error:\r\n>Template error: Fn::Select requires a list argument with two elements: an integer index and a list\r\n\r\nso we are requesting for community support, how we can fix the above issue.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "like below: ``` Outputs: MskBrokerDns1: Description: Msk Broker DNS Records Value: !Select [ 0, !Ref GetMskBrokersDetails ] MskBrokerDns2: Description: Msk Broker DNS Records Value: !Select [ 1, !Ref GetMskBrokersDetails ] ``` when we try to execute template with above changes we get below error: >Template error: Fn::Select requires a list argument with two elements: an integer index and a list so we are requesting for community support, how we can fix the above issue.", "keywords": ["change"]}]}], "answers": [{"Id": "60686310", "PostTypeId": "2", "ParentId": "60679995", "CreationDate": "2020-03-14T18:59:28.493", "Score": "0", "Body": "<p>after some hit and trial we are able to get the response which we wanted. it might not be efficient way to do it.\nLambda Code:</p>\n\n<pre><code>import json\nimport logging\nimport boto3\nimport subprocess\nimport shlex\nimport os\nimport time\nfrom hashlib import md5\nfrom crhelper import CfnResource\nfrom time import sleep\n\nlogger = logging.getLogger(__name__)\nhelper = CfnResource(json_logging=True, log_level='DEBUG')\n\n\n\n\n@helper.create\n@helper.update\ndef create_handler(event, _):\n    print('Received event: %s' % json.dumps(event))\n    retry_timeout = 0\n    if \"Timeout\" in event['ResourceProperties']:\n        retry_timeout = int(event['ResourceProperties'][\"Timeout\"])\n    if retry_timeout &gt; 600:\n        retry_timeout = 600\n    MskArn = event['ResourceProperties']['MskArn']\n    kafkaClient = boto3.client('kafka', region_name=event['ResourceProperties']['aws-region'])\n    while True:\n        try:\n            response = kafkaClient.list_nodes(\n                ClusterArn=event['ResourceProperties']['MskArn']\n            )\n            r1=response['NodeInfoList']\n            BrokerCount=len(r1)\n            i = 0\n            DNS=[]\n            name = event['ResourceProperties']['Name']\n            while i &lt; BrokerCount:\n                broker=response['NodeInfoList'][i]\n                brokerDNS=broker['BrokerNodeInfo']['Endpoints'][0]\n                DNS.append(brokerDNS)\n                i = i + 1\n            outp = DNS\n            break\n        except Exception as e:\n            if retry_timeout &lt; 1:\n                raise\n            else:\n                logging.error('Exception: %s' % e, exc_info=True)\n                print(\"retrying until timeout...\")\n                time.sleep(5)\n                retry_timeout = retry_timeout - 5\n    response_data = {}\n    response_data['BrokerDNS1'] = DNS[0]\n    response_data['BrokerDNS2'] = DNS[1]\n    print(response_data)\n    helper.Data.update(response_data)\n\ndef lambda_handler(event, context):\n    helper(event, context)\n</code></pre>\n\n<p>below is the AWS Cloudformation Resource definition:</p>\n\n<pre><code>  GetMskBrokersDetails:\n    Type: \"Custom::GetMskDetails\"\n    Version: '1.0'\n    Properties:\n      Name: GetMskBrokerDNS\n      ServiceToken: !Ref MskGetBrokerDnsLambdaArn\n      aws-region: !Sub \"${AWS::Region}\"\n      MskArn: !Ref MskCluster\nOutputs:\n  MskBrokerDns1:\n    Description: Msk Broker DNS Records\n    Value: !GetAtt GetMskBrokersDetails.BrokerDNS1\n  MskBrokerDns2:\n    Description: Msk Broker DNS Records\n    Value: !GetAtt GetMskBrokersDetails.BrokerDNS2\n</code></pre>\n", "OwnerUserId": "8593254", "LastActivityDate": "2020-03-14T18:59:28.493", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "107372893", "PostId": "60686310", "Score": "0", "Text": "Yes, now it makes more sense. That's how `response_data` should be used.", "CreationDate": "2020-03-14T22:47:59.803", "UserId": "248823", "filtered-sentences": []}], "history": [{"Id": "216943220", "PostHistoryTypeId": "2", "PostId": "60686310", "RevisionGUID": "fef5245e-5408-4dd9-88e3-18b23269fa0e", "CreationDate": "2020-03-14T18:59:28.493", "UserId": "8593254", "Text": "after some hit and trial we are able to get the response which we wanted. it might not be efficient way to do it.\r\nLambda Code:\r\n```\r\nimport json\r\nimport logging\r\nimport boto3\r\nimport subprocess\r\nimport shlex\r\nimport os\r\nimport time\r\nfrom hashlib import md5\r\nfrom crhelper import CfnResource\r\nfrom time import sleep\r\n\r\nlogger = logging.getLogger(__name__)\r\nhelper = CfnResource(json_logging=True, log_level='DEBUG')\r\n\r\n\r\n\r\n\r\n@helper.create\r\n@helper.update\r\ndef create_handler(event, _):\r\n    print('Received event: %s' % json.dumps(event))\r\n    retry_timeout = 0\r\n    if \"Timeout\" in event['ResourceProperties']:\r\n        retry_timeout = int(event['ResourceProperties'][\"Timeout\"])\r\n    if retry_timeout > 600:\r\n        retry_timeout = 600\r\n    MskArn = event['ResourceProperties']['MskArn']\r\n    kafkaClient = boto3.client('kafka', region_name=event['ResourceProperties']['aws-region'])\r\n    while True:\r\n        try:\r\n            response = kafkaClient.list_nodes(\r\n                ClusterArn=event['ResourceProperties']['MskArn']\r\n            )\r\n            r1=response['NodeInfoList']\r\n            BrokerCount=len(r1)\r\n            i = 0\r\n            DNS=[]\r\n            name = event['ResourceProperties']['Name']\r\n            while i < BrokerCount:\r\n                broker=response['NodeInfoList'][i]\r\n                brokerDNS=broker['BrokerNodeInfo']['Endpoints'][0]\r\n                DNS.append(brokerDNS)\r\n                i = i + 1\r\n            outp = DNS\r\n            break\r\n        except Exception as e:\r\n            if retry_timeout < 1:\r\n                raise\r\n            else:\r\n                logging.error('Exception: %s' % e, exc_info=True)\r\n                print(\"retrying until timeout...\")\r\n                time.sleep(5)\r\n                retry_timeout = retry_timeout - 5\r\n    response_data = {}\r\n    response_data['BrokerDNS1'] = DNS[0]\r\n    response_data['BrokerDNS2'] = DNS[1]\r\n    print(response_data)\r\n    helper.Data.update(response_data)\r\n\r\ndef lambda_handler(event, context):\r\n    helper(event, context)\r\n```\r\n\r\nbelow is the AWS Cloudformation Resource definition:\r\n```\r\n  GetMskBrokersDetails:\r\n    Type: \"Custom::GetMskDetails\"\r\n    Version: '1.0'\r\n    Properties:\r\n      Name: GetMskBrokerDNS\r\n      ServiceToken: !Ref MskGetBrokerDnsLambdaArn\r\n      aws-region: !Sub \"${AWS::Region}\"\r\n      MskArn: !Ref MskCluster\r\nOutputs:\r\n  MskBrokerDns1:\r\n    Description: Msk Broker DNS Records\r\n    Value: !GetAtt GetMskBrokersDetails.BrokerDNS1\r\n  MskBrokerDns2:\r\n    Description: Msk Broker DNS Records\r\n    Value: !GetAtt GetMskBrokersDetails.BrokerDNS2\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "it might not be efficient way to do it. ", "keywords": ["efficient"]}]}], "filtered-sentences": [{"source": "Body", "text": "it might not be efficient way to do it. ", "keywords": ["efficient"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "As above output is list, we want to get above DNS details in two separate Output variables. like below: When we try to execute template with above changes we get below error: Template error: Fn::Select requires a list argument with two elements: an integer index and a list So we are requesting for community support, how we can fix the above issue.", "keywords": ["change"]}]}
{"Id": "22653307", "PostTypeId": "1", "AcceptedAnswerId": "22665386", "CreationDate": "2014-03-26T06:38:05.590", "Score": "12", "ViewCount": "15803", "Body": "<p>So I've been using AWS AMI in my cloud formation template.</p>\n\n<p>It seems they create new images every month and deprecate the old ones 2 weeks or so after the new one's released. This creates many problems:</p>\n\n<ol>\n<li>Old template stacks becomes broken.</li>\n<li>Templates need to be updated.</li>\n</ol>\n\n<p>Am I missing something?</p>\n\n<p>E.G.\nI'm staring at </p>\n\n<blockquote>\n  <p>API: ec2:RunInstances Not authorized for images: [ami-1523bd2f]</p>\n</blockquote>\n\n<p>error in my \ncloud formation events.</p>\n\n<p>Looking it up that's the 02.12 image id:\n<a href=\"http://thecloudmarket.com/image/ami-1523bd2f--windows-server-2012-rtm-english-64bit-sql-2012-sp1-web-2014-02-12\" rel=\"nofollow noreferrer\">http://thecloudmarket.com/image/ami-1523bd2f--windows-server-2012-rtm-english-64bit-sql-2012-sp1-web-2014-02-12</a></p>\n\n<p>Where as now there's a new image id:\n<a href=\"http://thecloudmarket.com/image/ami-e976efd3--windows-server-2012-rtm-english-64bit-sql-2012-sp1-web-2014-03-12\" rel=\"nofollow noreferrer\">http://thecloudmarket.com/image/ami-e976efd3--windows-server-2012-rtm-english-64bit-sql-2012-sp1-web-2014-03-12</a></p>\n", "OwnerUserId": "404888", "LastEditorUserId": "3390419", "LastEditDate": "2019-12-12T11:28:54.977", "LastActivityDate": "2020-07-04T20:14:09.980", "Title": "AWS AMI deprecation (API: ec2:RunInstances Not authorized for images)", "Tags": "|amazon-web-services|amazon-ami|aws-cloudformation|", "AnswerCount": "4", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "79461309", "PostId": "22653307", "Score": "0", "Text": "This is also a huge problem if you use autoscaling. After the AMI is deprecated autoscaling starts failing because it can't add new instances and your production system becomes broken. This seems like a significant design flaw in the way AWS works.", "CreationDate": "2017-09-15T23:11:29.520", "UserId": "2843151", "filtered-sentences": []}], "history": [{"Id": "61312266", "PostHistoryTypeId": "2", "PostId": "22653307", "RevisionGUID": "4d39a521-4826-458e-a486-95f95f99de98", "CreationDate": "2014-03-26T06:38:05.590", "UserId": "404888", "Text": "So I've been using AWS AMI in my cloud formation template.\r\n\r\nIt seems they create new images every month and deprecate the old ones 2 weeks or so after the new one's released. This creates many problems:\r\n\r\n 1. Old template stacks becomes broken.\r\n 2. Templates need to be updated.\r\n\r\nAm I missing something?\r\n\r\nE.G.\r\nI'm staring at \"API: ec2:RunInstances Not authorized for images: [ami-1523bd2f]\" error in my cloud formation events.\r\n\r\nLooking it up that's the 02.12 image id:\r\nhttp://thecloudmarket.com/image/ami-1523bd2f--windows-server-2012-rtm-english-64bit-sql-2012-sp1-web-2014-02-12\r\n\r\nWhere as now there's a new image id:\r\nhttp://thecloudmarket.com/image/ami-e976efd3--windows-server-2012-rtm-english-64bit-sql-2012-sp1-web-2014-03-12", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "61312267", "PostHistoryTypeId": "1", "PostId": "22653307", "RevisionGUID": "4d39a521-4826-458e-a486-95f95f99de98", "CreationDate": "2014-03-26T06:38:05.590", "UserId": "404888", "Text": "AWS AMI deprecation", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "61312268", "PostHistoryTypeId": "3", "PostId": "22653307", "RevisionGUID": "4d39a521-4826-458e-a486-95f95f99de98", "CreationDate": "2014-03-26T06:38:05.590", "UserId": "404888", "Text": "|amazon-web-services|amazon-ami|aws-cloudformation|", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "155711280", "PostHistoryTypeId": "5", "PostId": "22653307", "RevisionGUID": "21af0db0-d1f7-4d23-b94f-21cd15568933", "CreationDate": "2017-09-08T08:35:14.537", "UserId": "492336", "Comment": "Put error message in title for Google searching", "Text": "So I've been using AWS AMI in my cloud formation template.\r\n\r\nIt seems they create new images every month and deprecate the old ones 2 weeks or so after the new one's released. This creates many problems:\r\n\r\n 1. Old template stacks becomes broken.\r\n 2. Templates need to be updated.\r\n\r\nAm I missing something?\r\n\r\nE.G.\r\nI'm staring at \r\n\r\n    API: ec2:RunInstances Not authorized for images: [ami-1523bd2f]\r\n\r\nerror in my \r\ncloud formation events.\r\n\r\nLooking it up that's the 02.12 image id:\r\nhttp://thecloudmarket.com/image/ami-1523bd2f--windows-server-2012-rtm-english-64bit-sql-2012-sp1-web-2014-02-12\r\n\r\nWhere as now there's a new image id:\r\nhttp://thecloudmarket.com/image/ami-e976efd3--windows-server-2012-rtm-english-64bit-sql-2012-sp1-web-2014-03-12\r\n", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "155711281", "PostHistoryTypeId": "4", "PostId": "22653307", "RevisionGUID": "21af0db0-d1f7-4d23-b94f-21cd15568933", "CreationDate": "2017-09-08T08:35:14.537", "UserId": "492336", "Comment": "Put error message in title for Google searching", "Text": "AWS AMI deprecation (API: ec2:RunInstances Not authorized for images)", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "211071190", "PostHistoryTypeId": "5", "PostId": "22653307", "RevisionGUID": "44ae9c42-1564-4a16-bd6d-397b6398d955", "CreationDate": "2019-12-12T11:28:54.977", "UserId": "3390419", "Comment": "deleted 2 characters in body", "Text": "So I've been using AWS AMI in my cloud formation template.\r\n\r\nIt seems they create new images every month and deprecate the old ones 2 weeks or so after the new one's released. This creates many problems:\r\n\r\n 1. Old template stacks becomes broken.\r\n 2. Templates need to be updated.\r\n\r\nAm I missing something?\r\n\r\nE.G.\r\nI'm staring at \r\n\r\n> API: ec2:RunInstances Not authorized for images: [ami-1523bd2f]\r\n\r\nerror in my \r\ncloud formation events.\r\n\r\nLooking it up that's the 02.12 image id:\r\nhttp://thecloudmarket.com/image/ami-1523bd2f--windows-server-2012-rtm-english-64bit-sql-2012-sp1-web-2014-02-12\r\n\r\nWhere as now there's a new image id:\r\nhttp://thecloudmarket.com/image/ami-e976efd3--windows-server-2012-rtm-english-64bit-sql-2012-sp1-web-2014-03-12\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "62733992", "PostTypeId": "2", "ParentId": "22653307", "CreationDate": "2020-07-04T20:14:09.980", "Score": "0", "Body": "<p>If you are using a training material and copied the code, make sure to replace the AMI name with the correct AMI Image values available under list of AMI's visible under your account. Similar with other values. If you are just cut and paste the values from training code may not be available now.</p>\n", "OwnerUserId": "3154031", "LastActivityDate": "2020-07-04T20:14:09.980", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "225892046", "PostHistoryTypeId": "2", "PostId": "62733992", "RevisionGUID": "a055e84d-e77e-4439-8180-d4365a9c8042", "CreationDate": "2020-07-04T20:14:09.980", "UserId": "3154031", "Text": "If you are using a training material and copied the code, make sure to replace the AMI name with the correct AMI Image values available under list of AMI's visible under your account. Similar with other values. If you are just cut and paste the values from training code may not be available now.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "22665386", "PostTypeId": "2", "ParentId": "22653307", "CreationDate": "2014-03-26T15:16:19.973", "Score": "15", "Body": "<p>You are correct indeed.  Windows AMI are deprecated when a new version is released (see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/Basics_WinAMI.html\" rel=\"noreferrer\">http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/Basics_WinAMI.html</a>) </p>\n\n<p>There is no \"point and click\" solution as of today, documentation says : \"AWS updates the AWS Windows AMIs several times a year. Updating involves deprecating the previous AMI and replacing it with a new AMI and AMI ID. To find an AMI after it's been updated, use the name instead of the ID. The basic structure of the AMI name is usually the same, with a new date added to the end. You can use a query or script to search for an AMI by name, confirm that you've found the correct AMI, and then launch your instance.\"</p>\n\n<p>One possible solution might be to develop a CloudFormation Custom Resource that would check for AMI availability before launching an EC2 instance.</p>\n\n<p>See this documentation about CFN Custom Resources : <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/crpg-walkthrough.html\" rel=\"noreferrer\">http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/crpg-walkthrough.html</a></p>\n\n<p>And this talk from re:Invent : <a href=\"https://www.youtube.com/watch?v=ZhGMaw67Yu0#t=945\" rel=\"noreferrer\">https://www.youtube.com/watch?v=ZhGMaw67Yu0#t=945</a> (and <a href=\"https://github.com/awslabs/aws-cfn-custom-resource-examples/tree/master/examples/ami-lookup\" rel=\"noreferrer\">this sample code</a> for AMI lookup)</p>\n\n<p>You also have the option to create your own custom AMI based on an Amazon provided one.Even if you do not modify anything.  Your custom AMI will be an exact copy of the one provided by Amazon but will stay available after Amazon AMI's deprecation.</p>\n\n<p>Netflix has open sourced tools to help to manage AMIs, have a look at <a href=\"https://github.com/Netflix/aminator\" rel=\"noreferrer\">Aminator</a></p>\n\n<p>Linux AMI are deprecated years after release (2003.11 is still available today !) but Windows AMI are deprecated as soon as a patched version is available.  This is for security reason.</p>\n", "OwnerUserId": "663360", "LastEditorUserId": "663360", "LastEditDate": "2014-03-30T18:04:03.843", "LastActivityDate": "2014-03-30T18:04:03.843", "CommentCount": "5", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "34541783", "PostId": "22665386", "Score": "0", "Text": "I guess my other alternative is to launch the instance and create my private image from it..... zzz. While your answer is probably standard, it gives rise to the problem of inconsistencies in that what I have created before was tested with a \"specific\" image and may not work with future images.", "CreationDate": "2014-03-26T22:31:36.053", "UserId": "404888", "filtered-sentences": [{"source": "Text", "text": "I guess my other alternative is to launch the instance and create my private image from it..... zzz. ", "keywords": ["instance"]}, {"source": "Text", "text": "While your answer is probably standard, it gives rise to the problem of inconsistencies in that what I have created before was tested with a \"specific\" image and may not work with future images.", "keywords": ["test"]}]}, {"Id": "34552243", "PostId": "22665386", "Score": "1", "Text": "You're correct, I forgot to mention the option of creating your own custom AMI, based on the Amazon provided one.  Even without modification.  This also would add an administrative overhead to manage these.  In particular if you deploy to multiple regions.  Netflix has open sourced tools to help to manage AMIs, have a look at Aminator and Asgard", "CreationDate": "2014-03-27T07:10:55.540", "UserId": "663360", "filtered-sentences": []}, {"Id": "34662826", "PostId": "22665386", "Score": "0", "Text": "I knew about Asgard for application deployment and resource management but didn't know about Aminator. Thanks for the suggestion.", "CreationDate": "2014-03-30T08:45:04.147", "UserId": "404888", "filtered-sentences": []}, {"Id": "34662830", "PostId": "22665386", "Score": "0", "Text": "Can you add those to the question and I'll mark this as an answer. Thanks.", "CreationDate": "2014-03-30T08:45:20.943", "UserId": "404888", "filtered-sentences": []}, {"Id": "34662875", "PostId": "22665386", "Score": "0", "Text": "Hmmm, Aminator only works for CentOS and RHL. Some of my stuff needs windows. That and windows need to use bundling rather than snapshot on AWS. Urghhh.... Having a library of historic AMIs really doesn't cost that much, dunno why they have to deprecate them. zzz.", "CreationDate": "2014-03-30T08:47:52.407", "UserId": "404888", "filtered-sentences": [{"source": "Text", "text": "Having a library of historic AMIs really doesn't cost that much, dunno why they have to deprecate them. ", "keywords": ["cost"]}]}], "history": [{"Id": "61356394", "PostHistoryTypeId": "2", "PostId": "22665386", "RevisionGUID": "f1e8e651-44b9-4d88-87ce-8d8ec6de719c", "CreationDate": "2014-03-26T15:16:19.973", "UserId": "663360", "Text": "You are correct indeed.  Windows AMI are deprecated when a new version is released (see http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/Basics_WinAMI.html) \r\n\r\nThere is no \"point and click\" solution as of today, documentation says : \"AWS updates the AWS Windows AMIs several times a year. Updating involves deprecating the previous AMI and replacing it with a new AMI and AMI ID. To find an AMI after it's been updated, use the name instead of the ID. The basic structure of the AMI name is usually the same, with a new date added to the end. You can use a query or script to search for an AMI by name, confirm that you've found the correct AMI, and then launch your instance.\"\r\n\r\nOne possible solution might be to develop a CloudFormation Custom Resource that would check for AMI availability before launching an EC2 instance.\r\n\r\nSee this documentation about CFN Custom Resources : http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/crpg-walkthrough.html\r\n\r\nAnd this talk from re:Invent : https://www.youtube.com/watch?v=ZhGMaw67Yu0#t=945 (and [this sample code][1] for AMI lookup)\r\n\r\n\r\n  [1]: https://github.com/awslabs/aws-cfn-custom-resource-examples/tree/master/examples/ami-lookup", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "You can use a query or script to search for an AMI by name, confirm that you've found the correct AMI, and then launch your instance.\" ", "keywords": ["instance"]}, {"source": "Text", "text": "One possible solution might be to develop a CloudFormation Custom Resource that would check for AMI availability before launching an EC2 instance. ", "keywords": ["instance"]}]}, {"Id": "61671347", "PostHistoryTypeId": "5", "PostId": "22665386", "RevisionGUID": "14bee344-e553-4aad-a30e-05f79c0da243", "CreationDate": "2014-03-30T18:04:03.843", "UserId": "663360", "Comment": "added 571 characters in body", "Text": "You are correct indeed.  Windows AMI are deprecated when a new version is released (see http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/Basics_WinAMI.html) \r\n\r\nThere is no \"point and click\" solution as of today, documentation says : \"AWS updates the AWS Windows AMIs several times a year. Updating involves deprecating the previous AMI and replacing it with a new AMI and AMI ID. To find an AMI after it's been updated, use the name instead of the ID. The basic structure of the AMI name is usually the same, with a new date added to the end. You can use a query or script to search for an AMI by name, confirm that you've found the correct AMI, and then launch your instance.\"\r\n\r\nOne possible solution might be to develop a CloudFormation Custom Resource that would check for AMI availability before launching an EC2 instance.\r\n\r\nSee this documentation about CFN Custom Resources : http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/crpg-walkthrough.html\r\n\r\nAnd this talk from re:Invent : https://www.youtube.com/watch?v=ZhGMaw67Yu0#t=945 (and [this sample code][1] for AMI lookup)\r\n\r\nYou also have the option to create your own custom AMI based on an Amazon provided one.Even if you do not modify anything.  Your custom AMI will be an exact copy of the one provided by Amazon but will stay available after Amazon AMI's deprecation.\r\n\r\nNetflix has open sourced tools to help to manage AMIs, have a look at [Aminator][2]\r\n\r\nLinux AMI are deprecated years after release (2003.11 is still available today !) but Windows AMI are deprecated as soon as a patched version is available.  This is for security reason.\r\n\r\n\r\n  [1]: https://github.com/awslabs/aws-cfn-custom-resource-examples/tree/master/examples/ami-lookup\r\n  [2]: https://github.com/Netflix/aminator", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "You can use a query or script to search for an AMI by name, confirm that you've found the correct AMI, and then launch your instance.\" ", "keywords": ["instance"]}, {"source": "Text", "text": "One possible solution might be to develop a CloudFormation Custom Resource that would check for AMI availability before launching an EC2 instance. ", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "You can use a query or script to search for an AMI by name, confirm that you've found the correct AMI, and then launch your instance.\" ", "keywords": ["instance"]}, {"source": "Body", "text": "One possible solution might be to develop a CloudFormation Custom Resource that would check for AMI availability before launching an EC2 instance. ", "keywords": ["instance"]}]}, {"Id": "25271410", "PostTypeId": "2", "ParentId": "22653307", "CreationDate": "2014-08-12T18:21:07.137", "Score": "2", "Body": "<p>This ps script works for my purposes, we use windows 2012 base image:</p>\n\n<pre><code>$imageId = \"xxxxxxx\"\n\nif ( (Get-EC2Image -ImageIds $imageId) -eq $null ) {\n\n    $f1 = New-Object  Amazon.EC2.Model.Filter ; $f1.Name=\"owner-alias\";$f1.Value=\"amazon\"\n    $f2 = New-Object  Amazon.EC2.Model.Filter ; $f2.Name=\"platform\";$f2.Value=\"windows\"\n\n    $img = Get-EC2Image -Filters $f1,$f2 | ? {$_.Name.StartsWith(\"Windows_Server-2012-RTM-English-64Bit-Base\")} | Select-Object -First 1\n\n    $imageId =$img.ImageId\n\n}\n</code></pre>\n", "OwnerUserId": "1165140", "LastActivityDate": "2014-08-12T18:21:07.137", "CommentCount": "4", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "39397645", "PostId": "25271410", "Score": "0", "Text": "Sorry no. See my comment on the previous answer. Whatever image I used in Dev, UAT, Staging, w/e is exactly what I'm going to use in Prod. No if, no but, no however.", "CreationDate": "2014-08-13T08:56:45.350", "UserId": "404888", "filtered-sentences": []}, {"Id": "39428941", "PostId": "25271410", "Score": "0", "Text": "Ah my bad skimming the comments. Looks like you have to cut an ami. How have you ended up dealing with it?", "CreationDate": "2014-08-14T00:56:02.223", "UserId": "1165140", "filtered-sentences": []}, {"Id": "39429237", "PostId": "25271410", "Score": "0", "Text": "We run some script with userdata to prep the machine. No we don't have a comprehensive solution at the moment. It's on our to-do list but very far down the line. :/", "CreationDate": "2014-08-14T01:19:39.940", "UserId": "404888", "filtered-sentences": []}, {"Id": "39429259", "PostId": "25271410", "Score": "0", "Text": "I mean prep the machine and take an Ami of it.", "CreationDate": "2014-08-14T01:21:08.797", "UserId": "404888", "filtered-sentences": []}], "history": [{"Id": "71327932", "PostHistoryTypeId": "2", "PostId": "25271410", "RevisionGUID": "20f8d2af-47d4-4005-94c3-073fc6bb03d3", "CreationDate": "2014-08-12T18:21:07.137", "UserId": "1165140", "Text": "This ps script works for my purposes, we use windows 2012 base image:\r\n\r\n\r\n    $imageId = \"xxxxxxx\"\r\n    \r\n    if ( (Get-EC2Image -ImageIds $imageId) -eq $null ) {\r\n    \r\n        $f1 = New-Object  Amazon.EC2.Model.Filter ; $f1.Name=\"owner-alias\";$f1.Value=\"amazon\"\r\n        $f2 = New-Object  Amazon.EC2.Model.Filter ; $f2.Name=\"platform\";$f2.Value=\"windows\"\r\n        \r\n        $img = Get-EC2Image -Filters $f1,$f2 | ? {$_.Name.StartsWith(\"Windows_Server-2012-RTM-English-64Bit-Base\")} | Select-Object -First 1\r\n    \r\n        $imageId =$img.ImageId\r\n    \r\n    }", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "59303510", "PostTypeId": "2", "ParentId": "22653307", "CreationDate": "2019-12-12T11:24:57.247", "Score": "0", "Body": "<p>I recently ran into the same error. I had built a custom ami in one account, and was trying to run an EC2 instance from <strong>another account</strong>.</p>\n\n<p>The issue for me was that the AMI did not have the correct permissions to enable my user from the other account to run it.</p>\n\n<p>To fix it, I logged in the other account and added the required permissions to the ami:</p>\n\n<pre><code>aws ec2 modify-image-attribute --image-id youramiid --launch-permission \"Add=[{UserId=youruserid}]\"\n</code></pre>\n\n<hr>\n\n<p>More information at <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sharingamis-explicit.html\" rel=\"nofollow noreferrer\">this documentation page</a>.</p>\n", "OwnerUserId": "3390419", "LastActivityDate": "2019-12-12T11:24:57.247", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "111096421", "PostId": "59303510", "Score": "0", "Text": "Additionally, one can update the permission in the source account:  From the AMI AWS Console management page, select the desired AMI and then choose the Actions menu item \"Modify Image Permissions\" to add the desired account.  Note: The CLI command expects an account number where it mentions UserId.", "CreationDate": "2020-07-09T21:04:16.190", "UserId": "11972755", "filtered-sentences": []}], "history": [{"Id": "211070889", "PostHistoryTypeId": "2", "PostId": "59303510", "RevisionGUID": "6418d46b-9675-4b0a-a55b-a98c44489f60", "CreationDate": "2019-12-12T11:24:57.247", "UserId": "3390419", "Text": "I recently ran into the same error. I had built a custom ami in one account, and was trying to run an EC2 instance from **another account**.\r\n\r\nThe issue for me was that the AMI did not have the correct permissions to enable my user from the other account to run it.\r\n\r\nTo fix it, I logged in the other account and added the required permissions to the ami:\r\n\r\n    aws ec2 modify-image-attribute --image-id youramiid --launch-permission \"Add=[{UserId=youruserid}]\"\r\n\r\n\r\n----------\r\n\r\n\r\nMore information at [this documentation page](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sharingamis-explicit.html).\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I had built a custom ami in one account, and was trying to run an EC2 instance from **another account**. ", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "I had built a custom ami in one account, and was trying to run an EC2 instance from another account. ", "keywords": ["instance"]}]}], "contains-topic": true, "filtered-sentences": []}
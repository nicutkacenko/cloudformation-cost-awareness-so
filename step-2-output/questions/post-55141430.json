{"Id": "55141430", "PostTypeId": "1", "AcceptedAnswerId": "55143588", "CreationDate": "2019-03-13T12:00:51.297", "Score": "4", "ViewCount": "992", "Body": "<p>I've got a CloudFormation Lambda Backed Custom Resource ,\nLambda function in public subnets but when I check the cloudWatch logs shown it below </p>\n\n<p>Log-Message#1 </p>\n\n<pre><code>Starting new HTTPS connection (1): cloudformation-custom-resource-response-eucentral1.s3.eu-central-1.amazonaws.com\n</code></pre>\n\n<p>Log-Message#2</p>\n\n<pre><code>Task timed out after 30.03 seconds\n</code></pre>\n\n<p>How I can handle this problem , my cloudformation is shown as below .</p>\n\n<pre><code> Resources:\n HelloWorld: #Custom Resource\nType: Custom::HelloWorld\nProperties:\n  ServiceToken:\n    Fn::GetAtt:\n    - TestFunction #Reference to Function to be run\n    - Arn #ARN of the function to be run\n  Input1:\n    Ref: Message\n TestFunction: #Lambda Function\n Type: AWS::Lambda::Function\n Properties:\n  Code:\n    S3Bucket:\n      Ref: S3Bucket\n    S3Key:\n      Ref: S3Key\n  Handler:\n    Fn::Join:\n    - ''\n    - - Ref: ModuleName\n      - \".lambda_handler\"\n  Role:\n    Fn::GetAtt:\n    - LambdaExecutionRole\n    - Arn\n  VpcConfig:\n    SecurityGroupIds:\n      - !Ref SecurityGroup\n    SubnetIds:\n      - Fn::Select: [ 0, !Ref PublicSubnet1 ]\n      - Fn::Select: [ 0, !Ref PublicSubnet2 ]\n  Runtime: python2.7\n  Timeout: '30'\n   LambdaExecutionRole: #IAM Role for Custom Resource\nType: AWS::IAM::Role\nProperties:\n  AssumeRolePolicyDocument:\n    Version: '2012-10-17'\n    Statement:\n    - Effect: Allow\n      Principal:\n        Service:\n        - lambda.amazonaws.com\n      Action:\n      - sts:AssumeRole\n  Path: \"/\"\n  Policies:\n  - PolicyName: root\n    PolicyDocument:\n      Version: '2012-10-17'\n      Statement:\n      - Effect: Allow\n        Action:\n        - logs:CreateLogGroup\n        - logs:CreateLogStream\n        - logs:PutLogEvents\n        Resource: arn:aws:logs:*:*:*\n      - Effect: Allow\n        Action:\n        - ec2:CreateNetworkInterface\n        - ec2:DescribeNetworkInterfaces\n        - ec2:DeleteNetworkInterface\n\n        Resource: \"*\"\n\n   SecurityGroup:\n   Type: AWS::EC2::SecurityGroup\n   Properties:\n    GroupName: \"sec_group_name\"\n    GroupDescription: \"SSH traffic in, all traffic out.\"\n    VpcId: !Ref VPC\n    SecurityGroupIngress:\n      - IpProtocol: -1\n        CidrIp: 0.0.0.0/0\n    SecurityGroupEgress:\n      - IpProtocol: -1\n        CidrIp: 0.0.0.0/0\n</code></pre>\n\n<p>My subnets routing table associated with InternetGateway, but it giving CloudFormationResponse object error , How I can solve this connection problem .</p>\n\n<p>Help ! Thanks :)) </p>\n", "OwnerUserId": "9242571", "LastActivityDate": "2020-03-03T16:37:10.353", "Title": "CloudFormation Response Object Timeout", "Tags": "|amazon-web-services|lambda|aws-cloudformation|devops|infrastructure-as-code|", "AnswerCount": "1", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "97024779", "PostId": "55141430", "Score": "0", "Text": "I don't have the exact solution, but this might be helpful https://github.com/aws-cloudformation/custom-resource-helper/", "CreationDate": "2019-03-13T12:49:36.643", "UserId": "1370986", "filtered-sentences": []}], "history": [{"Id": "193524477", "PostHistoryTypeId": "2", "PostId": "55141430", "RevisionGUID": "e9e13761-7ce4-4f84-a34f-a9367e677cda", "CreationDate": "2019-03-13T12:00:51.297", "UserId": "9242571", "Text": "I've got a CloudFormation Lambda Backed Custom Resource ,\r\nLambda function in public subnets but when I check the cloudWatch logs shown it below \r\n\r\nLog-Message#1 \r\n\r\n    Starting new HTTPS connection (1): cloudformation-custom-resource-response-eucentral1.s3.eu-central-1.amazonaws.com\r\n\r\nLog-Message#2\r\n\r\n    Task timed out after 30.03 seconds\r\n\r\nHow I can handle this problem , my cloudformation is shown as below .\r\n\r\n     Resources:\r\n     HelloWorld: #Custom Resource\r\n    Type: Custom::HelloWorld\r\n    Properties:\r\n      ServiceToken:\r\n        Fn::GetAtt:\r\n        - TestFunction #Reference to Function to be run\r\n        - Arn #ARN of the function to be run\r\n      Input1:\r\n        Ref: Message\r\n     TestFunction: #Lambda Function\r\n     Type: AWS::Lambda::Function\r\n     Properties:\r\n      Code:\r\n        S3Bucket:\r\n          Ref: S3Bucket\r\n        S3Key:\r\n          Ref: S3Key\r\n      Handler:\r\n        Fn::Join:\r\n        - ''\r\n        - - Ref: ModuleName\r\n          - \".lambda_handler\"\r\n      Role:\r\n        Fn::GetAtt:\r\n        - LambdaExecutionRole\r\n        - Arn\r\n      VpcConfig:\r\n        SecurityGroupIds:\r\n          - !Ref SecurityGroup\r\n        SubnetIds:\r\n          - Fn::Select: [ 0, !Ref PublicSubnet1 ]\r\n          - Fn::Select: [ 0, !Ref PublicSubnet2 ]\r\n      Runtime: python2.7\r\n      Timeout: '30'\r\n       LambdaExecutionRole: #IAM Role for Custom Resource\r\n    Type: AWS::IAM::Role\r\n    Properties:\r\n      AssumeRolePolicyDocument:\r\n        Version: '2012-10-17'\r\n        Statement:\r\n        - Effect: Allow\r\n          Principal:\r\n            Service:\r\n            - lambda.amazonaws.com\r\n          Action:\r\n          - sts:AssumeRole\r\n      Path: \"/\"\r\n      Policies:\r\n      - PolicyName: root\r\n        PolicyDocument:\r\n          Version: '2012-10-17'\r\n          Statement:\r\n          - Effect: Allow\r\n            Action:\r\n            - logs:CreateLogGroup\r\n            - logs:CreateLogStream\r\n            - logs:PutLogEvents\r\n            Resource: arn:aws:logs:*:*:*\r\n          - Effect: Allow\r\n            Action:\r\n            - ec2:CreateNetworkInterface\r\n            - ec2:DescribeNetworkInterfaces\r\n            - ec2:DeleteNetworkInterface\r\n\r\n            Resource: \"*\"\r\n\r\n       SecurityGroup:\r\n       Type: AWS::EC2::SecurityGroup\r\n       Properties:\r\n        GroupName: \"sec_group_name\"\r\n        GroupDescription: \"SSH traffic in, all traffic out.\"\r\n        VpcId: !Ref VPC\r\n        SecurityGroupIngress:\r\n          - IpProtocol: -1\r\n            CidrIp: 0.0.0.0/0\r\n        SecurityGroupEgress:\r\n          - IpProtocol: -1\r\n            CidrIp: 0.0.0.0/0\r\n\r\nMy subnets routing table associated with InternetGateway, but it giving CloudFormationResponse object error , How I can solve this connection problem .\r\n\r\nHelp ! Thanks :)) \r\n ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "How I can handle this problem , my cloudformation is shown as below . Resources: HelloWorld: #Custom Resource Type: Custom::HelloWorld Properties: ServiceToken: Fn::GetAtt: - TestFunction #Reference to Function to be run - Arn #ARN of the function to be run Input1: Ref: Message TestFunction: #Lambda Function Type: AWS::Lambda::Function Properties: Code: S3Bucket: Ref: S3Bucket S3Key: Ref: S3Key Handler: Fn::Join: - '' - - Ref: ModuleName - \".lambda_handler\" Role: Fn::GetAtt: - LambdaExecutionRole - Arn VpcConfig: SecurityGroupIds: - !Ref SecurityGroup SubnetIds: - Fn::Select: [ 0, !Ref PublicSubnet1 ] - Fn::Select: [ 0, !Ref PublicSubnet2 ] Runtime: python2.7 Timeout: '30' LambdaExecutionRole: #IAM Role for Custom Resource Type: AWS::IAM::Role Properties: AssumeRolePolicyDocument: Version: '2012-10-17' Statement: - Effect: Allow Principal: Service: - lambda.amazonaws.com Action: - sts:AssumeRole Path: \"/\" Policies: - PolicyName: root PolicyDocument: Version: '2012-10-17' Statement: - Effect: Allow Action: - logs:CreateLogGroup - logs:CreateLogStream - logs:PutLogEvents Resource: arn:aws:logs:*:*:* - Effect: Allow Action: - ec2:CreateNetworkInterface - ec2:DescribeNetworkInterfaces - ec2:DeleteNetworkInterface Resource: \"*\" SecurityGroup: Type: AWS::EC2::SecurityGroup Properties: GroupName: \"sec_group_name\" GroupDescription: \"SSH traffic in, all traffic out.\" VpcId: !Ref VPC SecurityGroupIngress: - IpProtocol: -1 CidrIp: 0.0.0.0/0 SecurityGroupEgress: - IpProtocol: -1 CidrIp: 0.0.0.0/0 My subnets routing table associated with InternetGateway, but it giving CloudFormationResponse object error , How I can solve this connection problem . Help ! Thanks :))", "keywords": ["test"]}]}, {"Id": "193524478", "PostHistoryTypeId": "1", "PostId": "55141430", "RevisionGUID": "e9e13761-7ce4-4f84-a34f-a9367e677cda", "CreationDate": "2019-03-13T12:00:51.297", "UserId": "9242571", "Text": "CloudFormation Response Object Timeout", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "193524479", "PostHistoryTypeId": "3", "PostId": "55141430", "RevisionGUID": "e9e13761-7ce4-4f84-a34f-a9367e677cda", "CreationDate": "2019-03-13T12:00:51.297", "UserId": "9242571", "Text": "|amazon-web-services|lambda|aws-cloudformation|devops|infrastructure-as-code|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "55143588", "PostTypeId": "2", "ParentId": "55141430", "CreationDate": "2019-03-13T13:54:31.500", "Score": "1", "Body": "<p>I am guessing your public subnet does not have a <code>NAT gateway</code> or <code>NAT instance</code> attached to it (<code>InternetGateway</code> alone is not enogh). As per <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/vpc.html#vpc-internet\" rel=\"nofollow noreferrer\">AWS</a>, this is required. If your functions does not need general internet access but access to AWS resources, you should consider <code>VPC Endpoints</code>. They are cheaper, but not sure if available for all resources.</p>\n", "OwnerUserId": "8502552", "LastActivityDate": "2019-03-13T13:54:31.500", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "97027975", "PostId": "55143588", "Score": "1", "Text": "I've created VPC Endpoint and attached it to the LambdaVPC , now I'm getting Forbidden error probably I will attach new role to lambda to access S3 bucket . this will fix this . Thanks :)", "CreationDate": "2019-03-13T14:05:57.563", "UserId": "9242571", "filtered-sentences": []}], "history": [{"Id": "193533449", "PostHistoryTypeId": "2", "PostId": "55143588", "RevisionGUID": "65dcdee7-7526-434d-9747-8088842c3682", "CreationDate": "2019-03-13T13:54:31.500", "UserId": "8502552", "Text": "I am guessing your public subnet does not have a `NAT gateway` or `NAT instance` attached to it (`InternetGateway` alone is not enogh). As per [AWS][1], this is required. If your functions does not need general internet access but access to AWS resources, you should consider `VPC Endpoints`. They are cheaper, but not sure if available for all resources.\r\n\r\n\r\n  [1]: https://docs.aws.amazon.com/lambda/latest/dg/vpc.html#vpc-internet", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I am guessing your public subnet does not have a `NAT gateway` or `NAT instance` attached to it (`InternetGateway` alone is not enogh). ", "keywords": ["nat", "instance"]}, {"source": "Text", "text": "They are cheaper, but not sure if available for all resources. ", "keywords": ["cheap"]}]}], "filtered-sentences": [{"source": "Body", "text": "I am guessing your public subnet does not have a NAT gateway or NAT instance attached to it (InternetGateway alone is not enogh). ", "keywords": ["nat", "instance"]}, {"source": "Body", "text": "They are cheaper, but not sure if available for all resources.", "keywords": ["cheap"]}]}], "contains-topic": true, "filtered-sentences": []}
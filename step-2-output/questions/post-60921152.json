{"Id": "60921152", "PostTypeId": "1", "CreationDate": "2020-03-29T21:46:26.843", "Score": "2", "ViewCount": "682", "Body": "<p><strong>I ran into the notorious pain in the A$$ error:</strong>  The CloudFormation template is invalid: Template format error: Number of resources, 202, is greater than maximum allowed, 200.</p>\n\n<p>how do I split this into two, and cross reference the resources?</p>\n\n<p>Could someone possibly share an example with me or show me how to split mine? I've been looking at aws docs and a tons of forums over the past few days to figure this out but I cant quite grasp what I need to do. I just need to be able to add more functions/api calls. </p>\n\n<p><strong>Serverless.yml</strong></p>\n\n<pre><code>service: p-app-api\n\n# Create an optimized package for our functions\npackage:\n  individually: true\n\nplugins:\n  - serverless-bundle # Package our functions with Webpack\n  - serverless-offline\n  - serverless-dotenv-plugin\n\nprovider:\n  name: aws\n  runtime: nodejs10.x\n  stage: dev\n  region: us-east-2\n  environment:\n    stripeSecretKey: ${env:STRIPE_SECRET_KEY}\n  # 'iamRoleStatements' defines the permission policy for the Lambda function.\n  # In this case Lambda functions are granted with permissions to access DynamoDB.\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - dynamodb:DescribeTable\n        - dynamodb:Query\n        - dynamodb:Scan\n        - dynamodb:GetItem\n        - dynamodb:PutItem\n        - dynamodb:UpdateItem\n        - dynamodb:DeleteItem\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data\"\n    - Effect: Allow\n      Action:\n        - dynamodb:Query\n        - dynamodb:Scan\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data/index/zipCode-packageSelected-index\"\n    - Effect: Allow\n      Action:\n        - dynamodb:Query\n        - dynamodb:Scan\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data/index/jobId-index\"\n    - Effect: Allow\n      Action:\n        - dynamodb:DescribeTable\n        - dynamodb:Query\n        - dynamodb:Scan\n        - dynamodb:GetItem\n        - dynamodb:PutItem\n        - dynamodb:UpdateItem\n        - dynamodb:DeleteItem\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/Service\"\n    - Effect: Allow\n      Action:\n        - dynamodb:Query\n        - dynamodb:Scan\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/Service/index/index\"\n    - Effect: Allow\n      Action:\n        - s3:*\n      Resource: \"arn:aws:s3:::service/public/*\"\n    - Effect: Allow\n      Action:\n        - dynamodb:DescribeTable\n        - dynamodb:Query\n        - dynamodb:Scan\n        - dynamodb:GetItem\n        - dynamodb:PutItem\n        - dynamodb:UpdateItem\n        - dynamodb:DeleteItem\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/Service\"\n    - Effect: Allow\n      Action:\n        - dynamodb:Query\n        - dynamodb:Scan\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data/index/packageSelected\"\n\nfunctions:\n  # Defines an HTTP API endpoint that calls the main function in create.js\n  # - path: url path is /notes\n  # - method: POST request\n  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross\n  #     domain api call\n  # - authorizer: authenticate using the AWS IAM role\n  create:\n    handler: create.main\n    events:\n      - http:\n          path: data\n          method: post\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  get:\n    # Defines an HTTP API endpoint that calls the main function in get.js\n    # - path: url path is /notes/{id}\n    # - method: GET request\n    handler: get.main\n    events:\n      - http:\n          path: data/{id}\n          method: get\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  list:\n    # Defines an HTTP API endpoint that calls the main function in list.js\n    # - path: url path is /notes\n    # - method: GET request\n    handler: list.main\n    events:\n      - http:\n          path: data\n          method: get\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  update:\n    # Defines an HTTP API endpoint that calls the main function in update.js\n    # - path: url path is /notes/{id}\n    # - method: PUT request\n    handler: update.main\n    events:\n      - http:\n          path: data/{id}\n          method: put\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  delete:\n    # Defines an HTTP API endpoint that calls the main function in delete.js\n    # - path: url path is /notes/{id}\n    # - method: DELETE request\n    handler: delete.main\n    events:\n      - http:\n          path: data/{id}\n          method: delete\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  createCustomer:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: createCustomer.main\n    events:\n      - http:\n          path: createCustomer\n          method: post\n          cors: true\n          authorizer:\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  updateCustomer:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: updateCustomer.main\n    events:\n      - http:\n          path: updateCustomer\n          method: post\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  listCustomerCard:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: listCustomerCard.main\n    events:\n      - http:\n          path: listCustomerCard/{id}\n          method: get\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  deleteCard:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: DeleteCard.main\n    events:\n      - http:\n          path: deleteCard/{id}/{card}\n          method: delete\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  getCustomerInfo:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: getCustomerInfo.main\n    events:\n      - http:\n          path: getCustomerInfo/{id}\n          method: get\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  updateCustomerCard:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: updateCustomerCard.main\n    events:\n      - http:\n          path: updateCustomerCard/{id}\n          method: post\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  createInvoice:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: createInvoice.main\n    events:\n      - http:\n          path: createInvoice\n          method: post\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  deleteInvoice:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: deleteInvoice.main\n    events:\n      - http:\n          path: deleteInvoice/{id}\n          method: delete\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  listInvoices:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: listInvoices.main\n    events:\n      - http:\n          path: listInvoices/{id}\n          method: get\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  ListNewJobs:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: ListNewJobs.main\n    events:\n      - http:\n          path: data/ListNewJobs\n          method: get\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  jobIndex:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: jobIndex.main\n    events:\n      - http:\n          path: data/jobIndex\n          method: get\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  updateJobStatus:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: updateJobStatus.main\n    events:\n      - http:\n          path: data/jobStatus\n          method: put\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  createNewJob:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: createNewJob.main\n    events:\n      - http:\n          path: ServiceJobs/createNewJob\n          method: post\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  listMyNewJobs:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: listMyNewJobs.main\n    events:\n      - http:\n          path: ServiceJobs/listMyNewJobs\n          method: get\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  DeleteMyNewJob:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: DeleteMyNewJob.main\n    events:\n      - http:\n          path: ServiceJobs/DeleteMyNewJob/{id}\n          method: delete\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  UpdateServiceJobList:\n    # Defines an HTTP API endpoint that calls the main function in update.js\n    # - path: url path is /notes/{id}\n    # - method: PUT request\n    handler: UpdateServiceJobList.main\n    events:\n      - http:\n          path: ServicesJobs/Update\n          method: put\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  ServiceIndex:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: ServiceIndex.main\n    events:\n      - http:\n          path: ServiceJobs/ServiceIndex\n          method: get\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  UpdateMyJob:\n    # Defines an HTTP API endpoint that calls the main function in update.js\n    # - path: url path is /notes/{id}\n    # - method: PUT request\n    handler: UpdateMyJob.main\n    events:\n      - http:\n          path: ServiceJobs/UpdateMyJob\n          method: put\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  PayInvoiceStripe:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: PayInvoiceStripe.main\n    events:\n      - http:\n          path: stripe/PayInvoice\n          method: post\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  StripeNewContractorAccount:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: StripeNewContractorAccount.main\n    events:\n      - http:\n          path: stripe/NewContractorAccount\n          method: post\n          cors: true\n          authorizer:\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  serviceInfoPut:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: serviceInfoPut.main\n    events:\n      - http:\n          path: serviceInfo/post\n          method: post\n          cors: true\n          authorizer:\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n  ListJobsForEdit:\n    # Defines an HTTP API endpoint that calls the main function in billing.js\n    # - path: url path is /billing\n    # - method: POST request\n    handler: ListJobsForEdit.main\n    events:\n      - http:\n          path: data/index/packageSelected\n          method: get\n          cors: true\n          authorizer: aws_iam\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\n# Create our resources with separate CloudFormation templates\nresources:\n  # API Gateway Errors\n  - ${file(resources/api-gateway-errors.yml)}\n</code></pre>\n", "OwnerUserId": "12258937", "LastEditorUserId": "12258937", "LastEditDate": "2020-03-29T22:06:22.330", "LastActivityDate": "2020-04-04T13:34:49.447", "Title": "cloudFormation Template Validation Error: how to split serverless.yml file", "Tags": "|amazon-web-services|yaml|aws-cloudformation|serverless-framework|cross-reference|", "AnswerCount": "2", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "107809558", "PostId": "60921152", "Score": "0", "Text": "Still cant quite figure out how to properly split this.", "CreationDate": "2020-03-30T18:25:20.283", "UserId": "12258937", "filtered-sentences": []}], "history": [{"Id": "217963228", "PostHistoryTypeId": "2", "PostId": "60921152", "RevisionGUID": "e87c8fa8-ca81-4299-b5bf-58c8b8e467a5", "CreationDate": "2020-03-29T21:46:26.843", "UserId": "12258937", "Text": "**I ran into the notorious pain in the A$$ error:**  The CloudFormation template is invalid: Template format error: Number of resources, 202, is greater than maximum allowed, 200.\r\n\r\nhow do I split this into two, and cross reference the resources?\r\n\r\nCould someone possibly share an example with me or show me how to split mine? I've been looking at aws docs and a tons of forums over the past few days to figure this out but I cant quite grasp what I need to do. I just need to be able to add more functions/api calls. \r\n\r\n\r\n**Serverless.yml**\r\n\r\n```\r\nservice: p-app-api\r\n\r\n# Create an optimized package for our functions\r\npackage:\r\n  individually: true\r\n\r\nplugins:\r\n  - serverless-bundle # Package our functions with Webpack\r\n  - serverless-offline\r\n  - serverless-dotenv-plugin\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs10.x\r\n  stage: prod\r\n  region: us-east-2\r\n  environment:\r\n    stripeSecretKey: ${env:STRIPE_SECRET_KEY}\r\n  # 'iamRoleStatements' defines the permission policy for the Lambda function.\r\n  # In this case Lambda functions are granted with permissions to access DynamoDB.\r\n  iamRoleStatements:\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:DescribeTable\r\n        - dynamodb:Query\r\n        - dynamodb:Scan\r\n        - dynamodb:GetItem\r\n        - dynamodb:PutItem\r\n        - dynamodb:UpdateItem\r\n        - dynamodb:DeleteItem\r\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data\"\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:Query\r\n        - dynamodb:Scan\r\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data/index/zipCode-packageSelected-index\"\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:Query\r\n        - dynamodb:Scan\r\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data/index/jobId-index\"\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:DescribeTable\r\n        - dynamodb:Query\r\n        - dynamodb:Scan\r\n        - dynamodb:GetItem\r\n        - dynamodb:PutItem\r\n        - dynamodb:UpdateItem\r\n        - dynamodb:DeleteItem\r\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/Service\"\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:Query\r\n        - dynamodb:Scan\r\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/Service/index/index\"\r\n    - Effect: Allow\r\n      Action:\r\n        - s3:*\r\n      Resource: \"arn:aws:s3:::service/public/*\"\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:DescribeTable\r\n        - dynamodb:Query\r\n        - dynamodb:Scan\r\n        - dynamodb:GetItem\r\n        - dynamodb:PutItem\r\n        - dynamodb:UpdateItem\r\n        - dynamodb:DeleteItem\r\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/Service\"\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:Query\r\n        - dynamodb:Scan\r\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data/index/packageSelected\"\r\n\r\nfunctions:\r\n  # Defines an HTTP API endpoint that calls the main function in create.js\r\n  # - path: url path is /notes\r\n  # - method: POST request\r\n  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross\r\n  #     domain api call\r\n  # - authorizer: authenticate using the AWS IAM role\r\n  create:\r\n    handler: create.main\r\n    events:\r\n      - http:\r\n          path: data\r\n          method: post\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  get:\r\n    # Defines an HTTP API endpoint that calls the main function in get.js\r\n    # - path: url path is /notes/{id}\r\n    # - method: GET request\r\n    handler: get.main\r\n    events:\r\n      - http:\r\n          path: data/{id}\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  list:\r\n    # Defines an HTTP API endpoint that calls the main function in list.js\r\n    # - path: url path is /notes\r\n    # - method: GET request\r\n    handler: list.main\r\n    events:\r\n      - http:\r\n          path: data\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  update:\r\n    # Defines an HTTP API endpoint that calls the main function in update.js\r\n    # - path: url path is /notes/{id}\r\n    # - method: PUT request\r\n    handler: update.main\r\n    events:\r\n      - http:\r\n          path: data/{id}\r\n          method: put\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  delete:\r\n    # Defines an HTTP API endpoint that calls the main function in delete.js\r\n    # - path: url path is /notes/{id}\r\n    # - method: DELETE request\r\n    handler: delete.main\r\n    events:\r\n      - http:\r\n          path: data/{id}\r\n          method: delete\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  createCustomer:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: createCustomer.main\r\n    events:\r\n      - http:\r\n          path: createCustomer\r\n          method: post\r\n          cors: true\r\n          authorizer:\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  updateCustomer:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: updateCustomer.main\r\n    events:\r\n      - http:\r\n          path: updateCustomer\r\n          method: post\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  listCustomerCard:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: listCustomerCard.main\r\n    events:\r\n      - http:\r\n          path: listCustomerCard/{id}\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  deleteCard:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: DeleteCard.main\r\n    events:\r\n      - http:\r\n          path: deleteCard/{id}/{card}\r\n          method: delete\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  getCustomerInfo:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: getCustomerInfo.main\r\n    events:\r\n      - http:\r\n          path: getCustomerInfo/{id}\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  updateCustomerCard:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: updateCustomerCard.main\r\n    events:\r\n      - http:\r\n          path: updateCustomerCard/{id}\r\n          method: post\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  createInvoice:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: createInvoice.main\r\n    events:\r\n      - http:\r\n          path: createInvoice\r\n          method: post\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  deleteInvoice:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: deleteInvoice.main\r\n    events:\r\n      - http:\r\n          path: deleteInvoice/{id}\r\n          method: delete\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  listInvoices:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: listInvoices.main\r\n    events:\r\n      - http:\r\n          path: listInvoices/{id}\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  ListNewJobs:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: ListNewJobs.main\r\n    events:\r\n      - http:\r\n          path: data/ListNewJobs\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  jobIndex:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: jobIndex.main\r\n    events:\r\n      - http:\r\n          path: data/jobIndex\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  updateJobStatus:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: updateJobStatus.main\r\n    events:\r\n      - http:\r\n          path: data/jobStatus\r\n          method: put\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  createNewJob:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: createNewJob.main\r\n    events:\r\n      - http:\r\n          path: ServiceJobs/createNewJob\r\n          method: post\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  listMyNewJobs:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: listMyNewJobs.main\r\n    events:\r\n      - http:\r\n          path: ServiceJobs/listMyNewJobs\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  DeleteMyNewJob:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: DeleteMyNewJob.main\r\n    events:\r\n      - http:\r\n          path: ServiceJobs/DeleteMyNewJob/{id}\r\n          method: delete\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  UpdateServiceJobList:\r\n    # Defines an HTTP API endpoint that calls the main function in update.js\r\n    # - path: url path is /notes/{id}\r\n    # - method: PUT request\r\n    handler: UpdateServiceJobList.main\r\n    events:\r\n      - http:\r\n          path: ServicesJobs/Update\r\n          method: put\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  ServiceIndex:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: ServiceIndex.main\r\n    events:\r\n      - http:\r\n          path: ServiceJobs/ServiceIndex\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  UpdateMyJob:\r\n    # Defines an HTTP API endpoint that calls the main function in update.js\r\n    # - path: url path is /notes/{id}\r\n    # - method: PUT request\r\n    handler: UpdateMyJob.main\r\n    events:\r\n      - http:\r\n          path: ServiceJobs/UpdateMyJob\r\n          method: put\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  PayInvoiceStripe:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: PayInvoiceStripe.main\r\n    events:\r\n      - http:\r\n          path: stripe/PayInvoice\r\n          method: post\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  StripeNewContractorAccount:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: StripeNewContractorAccount.main\r\n    events:\r\n      - http:\r\n          path: stripe/NewContractorAccount\r\n          method: post\r\n          cors: true\r\n          authorizer:\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  serviceInfoPut:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: serviceInfoPut.main\r\n    events:\r\n      - http:\r\n          path: serviceInfo/post\r\n          method: post\r\n          cors: true\r\n          authorizer:\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  ListJobsForEdit:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: ListJobsForEdit.main\r\n    events:\r\n      - http:\r\n          path: data/index/packageSelected\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n# Create our resources with separate CloudFormation templates\r\nresources:\r\n  # API Gateway Errors\r\n  - ${file(resources/api-gateway-errors.yml)}", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "**Serverless.yml** ``` service: p-app-api # Create an optimized package for our functions package: individually: true plugins: - serverless-bundle # Package our functions with Webpack - serverless-offline - serverless-dotenv-plugin provider: name: aws runtime: nodejs10.x stage: prod region: us-east-2 environment: stripeSecretKey: ${env:STRIPE_SECRET_KEY} # 'iamRoleStatements' defines the permission policy for the Lambda function. ", "keywords": ["provider", "policy"]}, {"source": "Text", "text": "In this case Lambda functions are granted with permissions to access DynamoDB. iamRoleStatements: - Effect: Allow Action: - dynamodb:DescribeTable - dynamodb:Query - dynamodb:Scan - dynamodb:GetItem - dynamodb:PutItem - dynamodb:UpdateItem - dynamodb:DeleteItem Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data\" - Effect: Allow Action: - dynamodb:Query - dynamodb:Scan Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data/index/zipCode-packageSelected-index\" - Effect: Allow Action: - dynamodb:Query - dynamodb:Scan Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data/index/jobId-index\" - Effect: Allow Action: - dynamodb:DescribeTable - dynamodb:Query - dynamodb:Scan - dynamodb:GetItem - dynamodb:PutItem - dynamodb:UpdateItem - dynamodb:DeleteItem Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/Service\" - Effect: Allow Action: - dynamodb:Query - dynamodb:Scan Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/Service/index/index\" - Effect: Allow Action: - s3:* Resource: \"arn:aws:s3:::service/public/*\" - Effect: Allow Action: - dynamodb:DescribeTable - dynamodb:Query - dynamodb:Scan - dynamodb:GetItem - dynamodb:PutItem - dynamodb:UpdateItem - dynamodb:DeleteItem Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/Service\" - Effect: Allow Action: - dynamodb:Query - dynamodb:Scan Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data/index/packageSelected\" functions: # Defines an HTTP API endpoint that calls the main function in create.js # - path: url path is /notes # - method: POST request # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross # domain api call # - authorizer: authenticate using the AWS IAM role create: handler: create.main events: - http: path: data method: post cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy get: # Defines an HTTP API endpoint that calls the main function in get.js # - path: url path is /notes/{id} # - method: GET request handler: get.main events: - http: path: data/{id} method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy list: # Defines an HTTP API endpoint that calls the main function in list.js # - path: url path is /notes # - method: GET request handler: list.main events: - http: path: data method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy update: # Defines an HTTP API endpoint that calls the main function in update.js # - path: url path is /notes/{id} # - method: PUT request handler: update.main events: - http: path: data/{id} method: put cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy delete: # Defines an HTTP API endpoint that calls the main function in delete.js # - path: url path is /notes/{id} # - method: DELETE request handler: delete.main events: - http: path: data/{id} method: delete cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy createCustomer: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: createCustomer.main events: - http: path: createCustomer method: post cors: true authorizer: arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy updateCustomer: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: updateCustomer.main events: - http: path: updateCustomer method: post cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy listCustomerCard: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: listCustomerCard.main events: - http: path: listCustomerCard/{id} method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy deleteCard: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: DeleteCard.main events: - http: path: deleteCard/{id}/{card} method: delete cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy getCustomerInfo: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: getCustomerInfo.main events: - http: path: getCustomerInfo/{id} method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy updateCustomerCard: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: updateCustomerCard.main events: - http: path: updateCustomerCard/{id} method: post cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy createInvoice: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: createInvoice.main events: - http: path: createInvoice method: post cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy deleteInvoice: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: deleteInvoice.main events: - http: path: deleteInvoice/{id} method: delete cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy listInvoices: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: listInvoices.main events: - http: path: listInvoices/{id} method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy ListNewJobs: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: ListNewJobs.main events: - http: path: data/ListNewJobs method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy jobIndex: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: jobIndex.main events: - http: path: data/jobIndex method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy updateJobStatus: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: updateJobStatus.main events: - http: path: data/jobStatus method: put cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy createNewJob: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: createNewJob.main events: - http: path: ServiceJobs/createNewJob method: post cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy listMyNewJobs: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: listMyNewJobs.main events: - http: path: ServiceJobs/listMyNewJobs method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy DeleteMyNewJob: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: DeleteMyNewJob.main events: - http: path: ServiceJobs/DeleteMyNewJob/{id} method: delete cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy UpdateServiceJobList: # Defines an HTTP API endpoint that calls the main function in update.js # - path: url path is /notes/{id} # - method: PUT request handler: UpdateServiceJobList.main events: - http: path: ServicesJobs/Update method: put cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy ServiceIndex: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: ServiceIndex.main events: - http: path: ServiceJobs/ServiceIndex method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy UpdateMyJob: # Defines an HTTP API endpoint that calls the main function in update.js # - path: url path is /notes/{id} # - method: PUT request handler: UpdateMyJob.main events: - http: path: ServiceJobs/UpdateMyJob method: put cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy PayInvoiceStripe: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: PayInvoiceStripe.main events: - http: path: stripe/PayInvoice method: post cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy StripeNewContractorAccount: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: StripeNewContractorAccount.main events: - http: path: stripe/NewContractorAccount method: post cors: true authorizer: arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy serviceInfoPut: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: serviceInfoPut.main events: - http: path: serviceInfo/post method: post cors: true authorizer: arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy ListJobsForEdit: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: ListJobsForEdit.main events: - http: path: data/index/packageSelected method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy # Create our resources with separate CloudFormation templates resources: # API Gateway Errors - ${file(resources/api-gateway-errors.yml)}", "keywords": ["bill", "domain"]}]}, {"Id": "217963229", "PostHistoryTypeId": "1", "PostId": "60921152", "RevisionGUID": "e87c8fa8-ca81-4299-b5bf-58c8b8e467a5", "CreationDate": "2020-03-29T21:46:26.843", "UserId": "12258937", "Text": "cloudFormation Template Validation Error: how to split serverless.yml file", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "217963230", "PostHistoryTypeId": "3", "PostId": "60921152", "RevisionGUID": "e87c8fa8-ca81-4299-b5bf-58c8b8e467a5", "CreationDate": "2020-03-29T21:46:26.843", "UserId": "12258937", "Text": "|amazon-web-services|yaml|aws-cloudformation|serverless-framework|cross-reference|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "217964093", "PostHistoryTypeId": "5", "PostId": "60921152", "RevisionGUID": "bade4e71-e896-4d73-853f-4ddffb02b329", "CreationDate": "2020-03-29T22:06:22.330", "UserId": "12258937", "Comment": "deleted 1 character in body", "Text": "**I ran into the notorious pain in the A$$ error:**  The CloudFormation template is invalid: Template format error: Number of resources, 202, is greater than maximum allowed, 200.\r\n\r\nhow do I split this into two, and cross reference the resources?\r\n\r\nCould someone possibly share an example with me or show me how to split mine? I've been looking at aws docs and a tons of forums over the past few days to figure this out but I cant quite grasp what I need to do. I just need to be able to add more functions/api calls. \r\n\r\n\r\n**Serverless.yml**\r\n\r\n```\r\nservice: p-app-api\r\n\r\n# Create an optimized package for our functions\r\npackage:\r\n  individually: true\r\n\r\nplugins:\r\n  - serverless-bundle # Package our functions with Webpack\r\n  - serverless-offline\r\n  - serverless-dotenv-plugin\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs10.x\r\n  stage: dev\r\n  region: us-east-2\r\n  environment:\r\n    stripeSecretKey: ${env:STRIPE_SECRET_KEY}\r\n  # 'iamRoleStatements' defines the permission policy for the Lambda function.\r\n  # In this case Lambda functions are granted with permissions to access DynamoDB.\r\n  iamRoleStatements:\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:DescribeTable\r\n        - dynamodb:Query\r\n        - dynamodb:Scan\r\n        - dynamodb:GetItem\r\n        - dynamodb:PutItem\r\n        - dynamodb:UpdateItem\r\n        - dynamodb:DeleteItem\r\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data\"\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:Query\r\n        - dynamodb:Scan\r\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data/index/zipCode-packageSelected-index\"\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:Query\r\n        - dynamodb:Scan\r\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data/index/jobId-index\"\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:DescribeTable\r\n        - dynamodb:Query\r\n        - dynamodb:Scan\r\n        - dynamodb:GetItem\r\n        - dynamodb:PutItem\r\n        - dynamodb:UpdateItem\r\n        - dynamodb:DeleteItem\r\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/Service\"\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:Query\r\n        - dynamodb:Scan\r\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/Service/index/index\"\r\n    - Effect: Allow\r\n      Action:\r\n        - s3:*\r\n      Resource: \"arn:aws:s3:::service/public/*\"\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:DescribeTable\r\n        - dynamodb:Query\r\n        - dynamodb:Scan\r\n        - dynamodb:GetItem\r\n        - dynamodb:PutItem\r\n        - dynamodb:UpdateItem\r\n        - dynamodb:DeleteItem\r\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/Service\"\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:Query\r\n        - dynamodb:Scan\r\n      Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data/index/packageSelected\"\r\n\r\nfunctions:\r\n  # Defines an HTTP API endpoint that calls the main function in create.js\r\n  # - path: url path is /notes\r\n  # - method: POST request\r\n  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross\r\n  #     domain api call\r\n  # - authorizer: authenticate using the AWS IAM role\r\n  create:\r\n    handler: create.main\r\n    events:\r\n      - http:\r\n          path: data\r\n          method: post\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  get:\r\n    # Defines an HTTP API endpoint that calls the main function in get.js\r\n    # - path: url path is /notes/{id}\r\n    # - method: GET request\r\n    handler: get.main\r\n    events:\r\n      - http:\r\n          path: data/{id}\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  list:\r\n    # Defines an HTTP API endpoint that calls the main function in list.js\r\n    # - path: url path is /notes\r\n    # - method: GET request\r\n    handler: list.main\r\n    events:\r\n      - http:\r\n          path: data\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  update:\r\n    # Defines an HTTP API endpoint that calls the main function in update.js\r\n    # - path: url path is /notes/{id}\r\n    # - method: PUT request\r\n    handler: update.main\r\n    events:\r\n      - http:\r\n          path: data/{id}\r\n          method: put\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  delete:\r\n    # Defines an HTTP API endpoint that calls the main function in delete.js\r\n    # - path: url path is /notes/{id}\r\n    # - method: DELETE request\r\n    handler: delete.main\r\n    events:\r\n      - http:\r\n          path: data/{id}\r\n          method: delete\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  createCustomer:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: createCustomer.main\r\n    events:\r\n      - http:\r\n          path: createCustomer\r\n          method: post\r\n          cors: true\r\n          authorizer:\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  updateCustomer:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: updateCustomer.main\r\n    events:\r\n      - http:\r\n          path: updateCustomer\r\n          method: post\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  listCustomerCard:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: listCustomerCard.main\r\n    events:\r\n      - http:\r\n          path: listCustomerCard/{id}\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  deleteCard:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: DeleteCard.main\r\n    events:\r\n      - http:\r\n          path: deleteCard/{id}/{card}\r\n          method: delete\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  getCustomerInfo:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: getCustomerInfo.main\r\n    events:\r\n      - http:\r\n          path: getCustomerInfo/{id}\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  updateCustomerCard:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: updateCustomerCard.main\r\n    events:\r\n      - http:\r\n          path: updateCustomerCard/{id}\r\n          method: post\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  createInvoice:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: createInvoice.main\r\n    events:\r\n      - http:\r\n          path: createInvoice\r\n          method: post\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  deleteInvoice:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: deleteInvoice.main\r\n    events:\r\n      - http:\r\n          path: deleteInvoice/{id}\r\n          method: delete\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  listInvoices:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: listInvoices.main\r\n    events:\r\n      - http:\r\n          path: listInvoices/{id}\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  ListNewJobs:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: ListNewJobs.main\r\n    events:\r\n      - http:\r\n          path: data/ListNewJobs\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  jobIndex:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: jobIndex.main\r\n    events:\r\n      - http:\r\n          path: data/jobIndex\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  updateJobStatus:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: updateJobStatus.main\r\n    events:\r\n      - http:\r\n          path: data/jobStatus\r\n          method: put\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  createNewJob:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: createNewJob.main\r\n    events:\r\n      - http:\r\n          path: ServiceJobs/createNewJob\r\n          method: post\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  listMyNewJobs:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: listMyNewJobs.main\r\n    events:\r\n      - http:\r\n          path: ServiceJobs/listMyNewJobs\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  DeleteMyNewJob:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: DeleteMyNewJob.main\r\n    events:\r\n      - http:\r\n          path: ServiceJobs/DeleteMyNewJob/{id}\r\n          method: delete\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  UpdateServiceJobList:\r\n    # Defines an HTTP API endpoint that calls the main function in update.js\r\n    # - path: url path is /notes/{id}\r\n    # - method: PUT request\r\n    handler: UpdateServiceJobList.main\r\n    events:\r\n      - http:\r\n          path: ServicesJobs/Update\r\n          method: put\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  ServiceIndex:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: ServiceIndex.main\r\n    events:\r\n      - http:\r\n          path: ServiceJobs/ServiceIndex\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  UpdateMyJob:\r\n    # Defines an HTTP API endpoint that calls the main function in update.js\r\n    # - path: url path is /notes/{id}\r\n    # - method: PUT request\r\n    handler: UpdateMyJob.main\r\n    events:\r\n      - http:\r\n          path: ServiceJobs/UpdateMyJob\r\n          method: put\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  PayInvoiceStripe:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: PayInvoiceStripe.main\r\n    events:\r\n      - http:\r\n          path: stripe/PayInvoice\r\n          method: post\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  StripeNewContractorAccount:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: StripeNewContractorAccount.main\r\n    events:\r\n      - http:\r\n          path: stripe/NewContractorAccount\r\n          method: post\r\n          cors: true\r\n          authorizer:\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  serviceInfoPut:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: serviceInfoPut.main\r\n    events:\r\n      - http:\r\n          path: serviceInfo/post\r\n          method: post\r\n          cors: true\r\n          authorizer:\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n  ListJobsForEdit:\r\n    # Defines an HTTP API endpoint that calls the main function in billing.js\r\n    # - path: url path is /billing\r\n    # - method: POST request\r\n    handler: ListJobsForEdit.main\r\n    events:\r\n      - http:\r\n          path: data/index/packageSelected\r\n          method: get\r\n          cors: true\r\n          authorizer: aws_iam\r\n          arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy\r\n# Create our resources with separate CloudFormation templates\r\nresources:\r\n  # API Gateway Errors\r\n  - ${file(resources/api-gateway-errors.yml)}", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "**Serverless.yml** ``` service: p-app-api # Create an optimized package for our functions package: individually: true plugins: - serverless-bundle # Package our functions with Webpack - serverless-offline - serverless-dotenv-plugin provider: name: aws runtime: nodejs10.x stage: dev region: us-east-2 environment: stripeSecretKey: ${env:STRIPE_SECRET_KEY} # 'iamRoleStatements' defines the permission policy for the Lambda function. ", "keywords": ["provider", "policy"]}, {"source": "Text", "text": "In this case Lambda functions are granted with permissions to access DynamoDB. iamRoleStatements: - Effect: Allow Action: - dynamodb:DescribeTable - dynamodb:Query - dynamodb:Scan - dynamodb:GetItem - dynamodb:PutItem - dynamodb:UpdateItem - dynamodb:DeleteItem Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data\" - Effect: Allow Action: - dynamodb:Query - dynamodb:Scan Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data/index/zipCode-packageSelected-index\" - Effect: Allow Action: - dynamodb:Query - dynamodb:Scan Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data/index/jobId-index\" - Effect: Allow Action: - dynamodb:DescribeTable - dynamodb:Query - dynamodb:Scan - dynamodb:GetItem - dynamodb:PutItem - dynamodb:UpdateItem - dynamodb:DeleteItem Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/Service\" - Effect: Allow Action: - dynamodb:Query - dynamodb:Scan Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/Service/index/index\" - Effect: Allow Action: - s3:* Resource: \"arn:aws:s3:::service/public/*\" - Effect: Allow Action: - dynamodb:DescribeTable - dynamodb:Query - dynamodb:Scan - dynamodb:GetItem - dynamodb:PutItem - dynamodb:UpdateItem - dynamodb:DeleteItem Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/Service\" - Effect: Allow Action: - dynamodb:Query - dynamodb:Scan Resource: \"arn:aws:dynamodb:us-east-2:433684495079:table/data/index/packageSelected\" functions: # Defines an HTTP API endpoint that calls the main function in create.js # - path: url path is /notes # - method: POST request # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross # domain api call # - authorizer: authenticate using the AWS IAM role create: handler: create.main events: - http: path: data method: post cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy get: # Defines an HTTP API endpoint that calls the main function in get.js # - path: url path is /notes/{id} # - method: GET request handler: get.main events: - http: path: data/{id} method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy list: # Defines an HTTP API endpoint that calls the main function in list.js # - path: url path is /notes # - method: GET request handler: list.main events: - http: path: data method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy update: # Defines an HTTP API endpoint that calls the main function in update.js # - path: url path is /notes/{id} # - method: PUT request handler: update.main events: - http: path: data/{id} method: put cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy delete: # Defines an HTTP API endpoint that calls the main function in delete.js # - path: url path is /notes/{id} # - method: DELETE request handler: delete.main events: - http: path: data/{id} method: delete cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy createCustomer: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: createCustomer.main events: - http: path: createCustomer method: post cors: true authorizer: arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy updateCustomer: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: updateCustomer.main events: - http: path: updateCustomer method: post cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy listCustomerCard: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: listCustomerCard.main events: - http: path: listCustomerCard/{id} method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy deleteCard: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: DeleteCard.main events: - http: path: deleteCard/{id}/{card} method: delete cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy getCustomerInfo: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: getCustomerInfo.main events: - http: path: getCustomerInfo/{id} method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy updateCustomerCard: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: updateCustomerCard.main events: - http: path: updateCustomerCard/{id} method: post cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy createInvoice: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: createInvoice.main events: - http: path: createInvoice method: post cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy deleteInvoice: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: deleteInvoice.main events: - http: path: deleteInvoice/{id} method: delete cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy listInvoices: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: listInvoices.main events: - http: path: listInvoices/{id} method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy ListNewJobs: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: ListNewJobs.main events: - http: path: data/ListNewJobs method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy jobIndex: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: jobIndex.main events: - http: path: data/jobIndex method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy updateJobStatus: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: updateJobStatus.main events: - http: path: data/jobStatus method: put cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy createNewJob: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: createNewJob.main events: - http: path: ServiceJobs/createNewJob method: post cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy listMyNewJobs: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: listMyNewJobs.main events: - http: path: ServiceJobs/listMyNewJobs method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy DeleteMyNewJob: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: DeleteMyNewJob.main events: - http: path: ServiceJobs/DeleteMyNewJob/{id} method: delete cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy UpdateServiceJobList: # Defines an HTTP API endpoint that calls the main function in update.js # - path: url path is /notes/{id} # - method: PUT request handler: UpdateServiceJobList.main events: - http: path: ServicesJobs/Update method: put cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy ServiceIndex: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: ServiceIndex.main events: - http: path: ServiceJobs/ServiceIndex method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy UpdateMyJob: # Defines an HTTP API endpoint that calls the main function in update.js # - path: url path is /notes/{id} # - method: PUT request handler: UpdateMyJob.main events: - http: path: ServiceJobs/UpdateMyJob method: put cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy PayInvoiceStripe: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: PayInvoiceStripe.main events: - http: path: stripe/PayInvoice method: post cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy StripeNewContractorAccount: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: StripeNewContractorAccount.main events: - http: path: stripe/NewContractorAccount method: post cors: true authorizer: arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy serviceInfoPut: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: serviceInfoPut.main events: - http: path: serviceInfo/post method: post cors: true authorizer: arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy ListJobsForEdit: # Defines an HTTP API endpoint that calls the main function in billing.js # - path: url path is /billing # - method: POST request handler: ListJobsForEdit.main events: - http: path: data/index/packageSelected method: get cors: true authorizer: aws_iam arn: aws:cognito-idp:us-east-2:433684495079:userpool/us-east-2_Q0sUvw4Qy # Create our resources with separate CloudFormation templates resources: # API Gateway Errors - ${file(resources/api-gateway-errors.yml)}", "keywords": ["bill", "domain"]}]}], "answers": [{"Id": "61028903", "PostTypeId": "2", "ParentId": "60921152", "CreationDate": "2020-04-04T13:34:49.447", "Score": "0", "Body": "<p><code>serverless-plugin-split-stacks</code> is the plugin to be use.</p>\n\n<p>Docs is here : <a href=\"https://github.com/dougmoscrop/serverless-plugin-split-stacks#migration-strategies\" rel=\"nofollow noreferrer\">serverless split stack</a></p>\n\n<p>it will help you to split the stack into nested stacks, max limit is 20.</p>\n", "OwnerUserId": "9763002", "LastActivityDate": "2020-04-04T13:34:49.447", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "218423585", "PostHistoryTypeId": "2", "PostId": "61028903", "RevisionGUID": "47f0582e-e578-4b2d-a21e-d9d2aeb0589f", "CreationDate": "2020-04-04T13:34:49.447", "UserId": "9763002", "Text": "`serverless-plugin-split-stacks` is the plugin to be use.\r\n\r\nDocs is here : [serverless split stack][1]\r\n\r\nit will help you to split the stack into nested stacks, max limit is 20.\r\n\r\n\r\n  [1]: https://github.com/dougmoscrop/serverless-plugin-split-stacks#migration-strategies", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "60921460", "PostTypeId": "2", "ParentId": "60921152", "CreationDate": "2020-03-29T22:19:38.677", "Score": "0", "Body": "<p>What you want is using <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html\" rel=\"nofollow noreferrer\">CloudFormation Nested Stacks</a>, they allow you to reference another CloudFormation stack using the <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html\" rel=\"nofollow noreferrer\"><code>AWS::CloudFormation::Stack</code></a> resource type.</p>\n\n<p>You can then provide parameters as an input to your nested stacks and retrieve their outputs once they are deployed, this is how you communicate between main and sub stacks.</p>\n\n<p>Below is an example of a nested stack reference.</p>\n\n<pre><code>AWSTemplateFormatVersion: \"2010-09-09\"\nResources: \n  MyNestedStack: \n    Type: AWS::CloudFormation::Stack\n    Properties: \n      TemplateURL: \"https://s3.amazonaws.com/cloudformation-templates-us-east-2/EC2ChooseAMI.template\"\n      Parameters:\n        Param1: \"a-value\"\n        Param2: \"another-value\"\n</code></pre>\n\n<p>Note that <code>TemplateURL</code> can point to S3 Bucket links or to a file on your filesystem. Once you want to deploy your stacks, they need to be <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-cli-package.html\" rel=\"nofollow noreferrer\">packaged</a> using the AWS CLI.</p>\n", "OwnerUserId": "1175633", "LastActivityDate": "2020-03-29T22:19:38.677", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "107807804", "PostId": "60921460", "Score": "0", "Text": "thanks for the explanation and resources. I looked into nested stacks but i still cant figure out how to properly split up my serverless.yml file....", "CreationDate": "2020-03-30T17:21:39.447", "UserId": "12258937", "filtered-sentences": []}, {"Id": "107855483", "PostId": "60921460", "Score": "0", "Text": "In the example I provided I illustrate how to add a new nested stack resource into your main stack, simply reference your nested stack location. See another example here https://gist.github.com/idanlupinsky/1658650528b2c36d79a47b290caeff0e", "CreationDate": "2020-04-01T03:07:10.373", "UserId": "1175633", "filtered-sentences": []}], "history": [{"Id": "217964599", "PostHistoryTypeId": "2", "PostId": "60921460", "RevisionGUID": "46820122-ad22-4ed4-871f-90524d4bca6f", "CreationDate": "2020-03-29T22:19:38.677", "UserId": "1175633", "Text": "What you want is using [CloudFormation Nested Stacks](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html), they allow you to reference another CloudFormation stack using the [`AWS::CloudFormation::Stack`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-stack.html) resource type.\r\n\r\nYou can then provide parameters as an input to your nested stacks and retrieve their outputs once they are deployed, this is how you communicate between main and sub stacks.\r\n\r\nBelow is an example of a nested stack reference.\r\n\r\n    AWSTemplateFormatVersion: \"2010-09-09\"\r\n    Resources: \r\n      MyNestedStack: \r\n        Type: AWS::CloudFormation::Stack\r\n        Properties: \r\n          TemplateURL: \"https://s3.amazonaws.com/cloudformation-templates-us-east-2/EC2ChooseAMI.template\"\r\n          Parameters:\r\n            Param1: \"a-value\"\r\n            Param2: \"another-value\"\r\n\r\nNote that `TemplateURL` can point to S3 Bucket links or to a file on your filesystem. Once you want to deploy your stacks, they need to be [packaged][1] using the AWS CLI.\r\n\r\n\r\n  [1]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-cli-package.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}
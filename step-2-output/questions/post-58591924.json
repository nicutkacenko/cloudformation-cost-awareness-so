{"Id": "58591924", "PostTypeId": "1", "CreationDate": "2019-10-28T13:35:54.923", "Score": "1", "ViewCount": "287", "Body": "<p>This direct CloudFormation code snippet is part from example ElasticBeanstalk application provided in <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/sample-templates-services-ap-south-1.html\" rel=\"nofollow noreferrer\">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/sample-templates-services-ap-south-1.html</a>  </p>\n\n<pre><code>    \"Mappings\" : {\n    \"Region2Principal\" : {\n      \"us-east-1\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\n      \"us-west-2\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\n      \"us-west-1\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\n      \"eu-west-1\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\n      \"eu-west-2\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\n      \"eu-west-3\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\n      \"ap-southeast-1\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\n      \"ap-northeast-1\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\n      \"ap-northeast-2\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\n      \"ap-northeast-3\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\n      \"ap-southeast-2\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\n      \"ap-south-1\"     : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\n      \"us-east-2\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\n      \"ca-central-1\"   : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\n      \"sa-east-1\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\n      \"cn-north-1\"     : { \"EC2Principal\" : \"ec2.amazonaws.com.cn\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com.cn\" },\n      \"cn-northwest-1\" : { \"EC2Principal\" : \"ec2.amazonaws.com.cn\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com.cn\" },\n      \"eu-central-1\"   : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\n      \"eu-north-1\"     : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" }\n    }\n\n  },\n\n  \"Conditions\" : {\n    \"Is-EC2-VPC\"     : { \"Fn::Or\" : [ {\"Fn::Equals\" : [{\"Ref\" : \"AWS::Region\"}, \"eu-central-1\" ]},\n                                      {\"Fn::Equals\" : [{\"Ref\" : \"AWS::Region\"}, \"cn-north-1\" ]}]},\n    \"Is-EC2-Classic\" : { \"Fn::Not\" : [{ \"Condition\" : \"Is-EC2-VPC\"}]}\n  },\n\n  \"Resources\": {\n    \"WebServerRole\": {\n      \"Type\": \"AWS::IAM::Role\",\n      \"Properties\" : {\n        \"AssumeRolePolicyDocument\" : {\n          \"Statement\"  : [{\n            \"Effect\"   : \"Allow\",\n            \"Principal\": { \"Service\": [{ \"Fn::FindInMap\" : [\"Region2Principal\", {\"Ref\" : \"AWS::Region\"}, \"EC2Principal\"]}] },\n            \"Action\"   : [ \"sts:AssumeRole\" ]\n          } ]\n        },\n        \"Path\": \"/\"\n      }\n    },\n\n    \"WebServerRolePolicy\": {\n      \"Type\": \"AWS::IAM::Policy\",\n      \"Properties\": {\n        \"PolicyName\" : \"WebServerRole\",\n        \"PolicyDocument\" : {\n          \"Statement\"  : [ {\n            \"Effect\"    : \"Allow\",\n            \"NotAction\" : \"iam:*\",\n            \"Resource\"  : \"*\"\n          } ]\n        },\n        \"Roles\": [ { \"Ref\": \"WebServerRole\" } ]\n      }\n    },\n\n    \"WebServerInstanceProfile\": {\n      \"Type\": \"AWS::IAM::InstanceProfile\",\n      \"Properties\": {\n        \"Path\": \"/\",\n        \"Roles\": [ { \"Ref\": \"WebServerRole\" } ]\n      }\n    },\n\n    \"SampleApplication\": {\n      \"Type\": \"AWS::ElasticBeanstalk::Application\",\n      \"Properties\": {\n        \"Description\": \"AWS Elastic Beanstalk Sample Application\"\n      }\n    },\n\n    \"SampleApplicationVersion\" : {\n      \"Type\" : \"AWS::ElasticBeanstalk::ApplicationVersion\",\n      \"Properties\" : {\n        \"Description\" : \"Version 1.0\",\n        \"ApplicationName\" : { \"Ref\" : \"SampleApplication\" },\n        \"SourceBundle\" : {\n          \"S3Bucket\": { \"Fn::Join\" : [\"-\", [\"cloudformation-examples\", {\"Ref\" : \"AWS::Region\" }]]},\n          \"S3Key\": \"CloudFormationBeanstalkRDSExample.war\"\n        }\n      }\n    },\n</code></pre>\n\n<p>I have only the Free Tier account on AWS, so I do not want to cast money to test how this behaves. Description says:</p>\n\n<blockquote>\n  <p><strong>WARNING</strong> This template creates one or more Amazon EC2 instances and an Amazon Relational Database Service database instance. You will be billed for the AWS resources used if you create a stack from this template.</p>\n</blockquote>\n\n<p>My issue is to know, <strong>how many instances this would create if launched</strong>? I do not see any constraints, but the <code>Mappings</code> part seems so long, that I suppose more than one is at least there. <code>Conditions</code> has two entries, does that mean two instances also? I would like to find a solution with only one instance running, would it be enough to just limit the regions or <strong>how to limit amount of EC2 created to only one?</strong></p>\n", "OwnerUserId": "549910", "LastEditorUserId": "549910", "LastEditDate": "2019-10-29T07:47:00.413", "LastActivityDate": "2019-10-29T09:29:59.893", "Title": "How to build a solution of CloudFormation and Elastic Beanstalk that has only one EC2 instance?", "Tags": "|amazon-web-services|aws-cloudformation|amazon-elastic-beanstalk|", "AnswerCount": "2", "CommentCount": "2", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "103497081", "PostId": "58591924", "Score": "0", "Text": "There are tons of stacks under sample-templates which one did you use ?", "CreationDate": "2019-10-28T13:43:51.453", "UserId": "9931092", "filtered-sentences": []}, {"Id": "103516244", "PostId": "58591924", "Score": "0", "Text": "It was this one: https://s3-ap-south-1.amazonaws.com/cloudformation-templates-ap-south-1/EC2InstanceWithSecurityGroupSample.template", "CreationDate": "2019-10-29T06:22:25.017", "UserId": "549910", "filtered-sentences": []}], "history": [{"Id": "208095896", "PostHistoryTypeId": "2", "PostId": "58591924", "RevisionGUID": "e8da2bf2-41b0-4662-9dbe-e822fad7ea92", "CreationDate": "2019-10-28T13:35:54.923", "UserId": "549910", "Text": "This direct CloudFormation code snippet is part from example ElasticBeanstalk application provided in https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/sample-templates-services-ap-south-1.html  \r\n\r\n        \"Mappings\" : {\r\n        \"Region2Principal\" : {\r\n          \"us-east-1\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"us-west-2\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"us-west-1\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"eu-west-1\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"eu-west-2\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"eu-west-3\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"ap-southeast-1\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"ap-northeast-1\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"ap-northeast-2\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"ap-northeast-3\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"ap-southeast-2\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"ap-south-1\"     : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"us-east-2\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"ca-central-1\"   : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"sa-east-1\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"cn-north-1\"     : { \"EC2Principal\" : \"ec2.amazonaws.com.cn\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com.cn\" },\r\n          \"cn-northwest-1\" : { \"EC2Principal\" : \"ec2.amazonaws.com.cn\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com.cn\" },\r\n          \"eu-central-1\"   : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"eu-north-1\"     : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" }\r\n        }\r\n    \r\n      },\r\n    \r\n      \"Conditions\" : {\r\n        \"Is-EC2-VPC\"     : { \"Fn::Or\" : [ {\"Fn::Equals\" : [{\"Ref\" : \"AWS::Region\"}, \"eu-central-1\" ]},\r\n                                          {\"Fn::Equals\" : [{\"Ref\" : \"AWS::Region\"}, \"cn-north-1\" ]}]},\r\n        \"Is-EC2-Classic\" : { \"Fn::Not\" : [{ \"Condition\" : \"Is-EC2-VPC\"}]}\r\n      },\r\n    \r\n      \"Resources\": {\r\n        \"WebServerRole\": {\r\n          \"Type\": \"AWS::IAM::Role\",\r\n          \"Properties\" : {\r\n            \"AssumeRolePolicyDocument\" : {\r\n              \"Statement\"  : [{\r\n                \"Effect\"   : \"Allow\",\r\n                \"Principal\": { \"Service\": [{ \"Fn::FindInMap\" : [\"Region2Principal\", {\"Ref\" : \"AWS::Region\"}, \"EC2Principal\"]}] },\r\n                \"Action\"   : [ \"sts:AssumeRole\" ]\r\n              } ]\r\n            },\r\n            \"Path\": \"/\"\r\n          }\r\n        },\r\n    \r\n        \"WebServerRolePolicy\": {\r\n          \"Type\": \"AWS::IAM::Policy\",\r\n          \"Properties\": {\r\n            \"PolicyName\" : \"WebServerRole\",\r\n            \"PolicyDocument\" : {\r\n              \"Statement\"  : [ {\r\n                \"Effect\"    : \"Allow\",\r\n                \"NotAction\" : \"iam:*\",\r\n                \"Resource\"  : \"*\"\r\n              } ]\r\n            },\r\n            \"Roles\": [ { \"Ref\": \"WebServerRole\" } ]\r\n          }\r\n        },\r\n    \r\n        \"WebServerInstanceProfile\": {\r\n          \"Type\": \"AWS::IAM::InstanceProfile\",\r\n          \"Properties\": {\r\n            \"Path\": \"/\",\r\n            \"Roles\": [ { \"Ref\": \"WebServerRole\" } ]\r\n          }\r\n        },\r\n    \r\n        \"SampleApplication\": {\r\n          \"Type\": \"AWS::ElasticBeanstalk::Application\",\r\n          \"Properties\": {\r\n            \"Description\": \"AWS Elastic Beanstalk Sample Application\"\r\n          }\r\n        },\r\n    \r\n        \"SampleApplicationVersion\" : {\r\n          \"Type\" : \"AWS::ElasticBeanstalk::ApplicationVersion\",\r\n          \"Properties\" : {\r\n            \"Description\" : \"Version 1.0\",\r\n            \"ApplicationName\" : { \"Ref\" : \"SampleApplication\" },\r\n            \"SourceBundle\" : {\r\n              \"S3Bucket\": { \"Fn::Join\" : [\"-\", [\"cloudformation-examples\", {\"Ref\" : \"AWS::Region\" }]]},\r\n              \"S3Key\": \"CloudFormationBeanstalkRDSExample.war\"\r\n            }\r\n          }\r\n        },\r\n\r\nI have only the Free Tier account on AWS, so I do not want to cast money to test how this behaves. Description says:\r\n\r\n>**WARNING** This template creates one or more Amazon EC2 instances and an Amazon Relational Database Service database instance. You will be billed for the AWS resources used if you create a stack from this template.\r\n\r\nMy issue is to know, how many instances this would create if launched? I do not see any constraints, but the `Mappings` part seems so long, that I suppose more than one is at least there. `Conditions` has two entries, does that mean two instances also? I would like to find a solution with only one instance running, would it be enough to just limit the regions or how to limit amount of EC2 created to only one?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "}, \"cn-northwest-1\" : { \"EC2Principal\" : \"ec2.amazonaws.com.cn\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com.cn\" }, \"eu-central-1\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" }, \"eu-north-1\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" } } }, \"Conditions\" : { \"Is-EC2-VPC\" : { \"Fn::Or\" : [ {\"Fn::Equals\" : [{\"Ref\" : \"AWS::Region\"}, \"eu-central-1\" ]}, {\"Fn::Equals\" : [{\"Ref\" : \"AWS::Region\"}, \"cn-north-1\" ]}]}, \"Is-EC2-Classic\" : { \"Fn::Not\" : [{ \"Condition\" : \"Is-EC2-VPC\"}]} }, \"Resources\": { \"WebServerRole\": { \"Type\": \"AWS::IAM::Role\", \"Properties\" : { \"AssumeRolePolicyDocument\" : { \"Statement\" : [{ \"Effect\" : \"Allow\", \"Principal\": { \"Service\": [{ \"Fn::FindInMap\" : [\"Region2Principal\", {\"Ref\" : \"AWS::Region\"}, \"EC2Principal\"]}] }, \"Action\" : [ \"sts:AssumeRole\" ] } ] }, \"Path\": \"/\" } }, \"WebServerRolePolicy\": { \"Type\": \"AWS::IAM::Policy\", \"Properties\": { \"PolicyName\" : \"WebServerRole\", \"PolicyDocument\" : { \"Statement\" : [ { \"Effect\" : \"Allow\", \"NotAction\" : \"iam:*\", \"Resource\" : \"*\" } ] }, \"Roles\": [ { \"Ref\": \"WebServerRole\" } ] } }, \"WebServerInstanceProfile\": { \"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": { \"Path\": \"/\", \"Roles\": [ { \"Ref\": \"WebServerRole\" } ] } }, \"SampleApplication\": { \"Type\": \"AWS::ElasticBeanstalk::Application\", \"Properties\": { \"Description\": \"AWS Elastic Beanstalk Sample Application\" } }, \"SampleApplicationVersion\" : { \"Type\" : \"AWS::ElasticBeanstalk::ApplicationVersion\", \"Properties\" : { \"Description\" : \"Version 1.0\", \"ApplicationName\" : { \"Ref\" : \"SampleApplication\" }, \"SourceBundle\" : { \"S3Bucket\": { \"Fn::Join\" : [\"-\", [\"cloudformation-examples\", {\"Ref\" : \"AWS::Region\" }]]}, \"S3Key\": \"CloudFormationBeanstalkRDSExample.war\" } } }, I have only the Free Tier account on AWS, so I do not want to cast money to test how this behaves. ", "keywords": ["policy", "test"]}, {"source": "Text", "text": "Description says: >**WARNING** This template creates one or more Amazon EC2 instances and an Amazon Relational Database Service database instance. ", "keywords": ["instance"]}, {"source": "Text", "text": "You will be billed for the AWS resources used if you create a stack from this template. ", "keywords": ["bill"]}, {"source": "Text", "text": "I would like to find a solution with only one instance running, would it be enough to just limit the regions or how to limit amount of EC2 created to only one?", "keywords": ["instance"]}]}, {"Id": "208095897", "PostHistoryTypeId": "1", "PostId": "58591924", "RevisionGUID": "e8da2bf2-41b0-4662-9dbe-e822fad7ea92", "CreationDate": "2019-10-28T13:35:54.923", "UserId": "549910", "Text": "How to build a solution of CloudFormation and Elastic Beanstalk that has only one EC2 instance?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "How to build a solution of CloudFormation and Elastic Beanstalk that has only one EC2 instance?", "keywords": ["instance"]}]}, {"Id": "208095898", "PostHistoryTypeId": "3", "PostId": "58591924", "RevisionGUID": "e8da2bf2-41b0-4662-9dbe-e822fad7ea92", "CreationDate": "2019-10-28T13:35:54.923", "UserId": "549910", "Text": "|amazon-web-services|aws-cloudformation|amazon-elastic-beanstalk|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "208141656", "PostHistoryTypeId": "5", "PostId": "58591924", "RevisionGUID": "40d80474-4f5d-4edd-b61f-43a30cd86eb2", "CreationDate": "2019-10-29T07:47:00.413", "UserId": "549910", "Comment": "added 8 characters in body", "Text": "This direct CloudFormation code snippet is part from example ElasticBeanstalk application provided in https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/sample-templates-services-ap-south-1.html  \r\n\r\n        \"Mappings\" : {\r\n        \"Region2Principal\" : {\r\n          \"us-east-1\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"us-west-2\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"us-west-1\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"eu-west-1\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"eu-west-2\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"eu-west-3\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"ap-southeast-1\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"ap-northeast-1\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"ap-northeast-2\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"ap-northeast-3\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"ap-southeast-2\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"ap-south-1\"     : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"us-east-2\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"ca-central-1\"   : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"sa-east-1\"      : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"cn-north-1\"     : { \"EC2Principal\" : \"ec2.amazonaws.com.cn\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com.cn\" },\r\n          \"cn-northwest-1\" : { \"EC2Principal\" : \"ec2.amazonaws.com.cn\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com.cn\" },\r\n          \"eu-central-1\"   : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" },\r\n          \"eu-north-1\"     : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" }\r\n        }\r\n    \r\n      },\r\n    \r\n      \"Conditions\" : {\r\n        \"Is-EC2-VPC\"     : { \"Fn::Or\" : [ {\"Fn::Equals\" : [{\"Ref\" : \"AWS::Region\"}, \"eu-central-1\" ]},\r\n                                          {\"Fn::Equals\" : [{\"Ref\" : \"AWS::Region\"}, \"cn-north-1\" ]}]},\r\n        \"Is-EC2-Classic\" : { \"Fn::Not\" : [{ \"Condition\" : \"Is-EC2-VPC\"}]}\r\n      },\r\n    \r\n      \"Resources\": {\r\n        \"WebServerRole\": {\r\n          \"Type\": \"AWS::IAM::Role\",\r\n          \"Properties\" : {\r\n            \"AssumeRolePolicyDocument\" : {\r\n              \"Statement\"  : [{\r\n                \"Effect\"   : \"Allow\",\r\n                \"Principal\": { \"Service\": [{ \"Fn::FindInMap\" : [\"Region2Principal\", {\"Ref\" : \"AWS::Region\"}, \"EC2Principal\"]}] },\r\n                \"Action\"   : [ \"sts:AssumeRole\" ]\r\n              } ]\r\n            },\r\n            \"Path\": \"/\"\r\n          }\r\n        },\r\n    \r\n        \"WebServerRolePolicy\": {\r\n          \"Type\": \"AWS::IAM::Policy\",\r\n          \"Properties\": {\r\n            \"PolicyName\" : \"WebServerRole\",\r\n            \"PolicyDocument\" : {\r\n              \"Statement\"  : [ {\r\n                \"Effect\"    : \"Allow\",\r\n                \"NotAction\" : \"iam:*\",\r\n                \"Resource\"  : \"*\"\r\n              } ]\r\n            },\r\n            \"Roles\": [ { \"Ref\": \"WebServerRole\" } ]\r\n          }\r\n        },\r\n    \r\n        \"WebServerInstanceProfile\": {\r\n          \"Type\": \"AWS::IAM::InstanceProfile\",\r\n          \"Properties\": {\r\n            \"Path\": \"/\",\r\n            \"Roles\": [ { \"Ref\": \"WebServerRole\" } ]\r\n          }\r\n        },\r\n    \r\n        \"SampleApplication\": {\r\n          \"Type\": \"AWS::ElasticBeanstalk::Application\",\r\n          \"Properties\": {\r\n            \"Description\": \"AWS Elastic Beanstalk Sample Application\"\r\n          }\r\n        },\r\n    \r\n        \"SampleApplicationVersion\" : {\r\n          \"Type\" : \"AWS::ElasticBeanstalk::ApplicationVersion\",\r\n          \"Properties\" : {\r\n            \"Description\" : \"Version 1.0\",\r\n            \"ApplicationName\" : { \"Ref\" : \"SampleApplication\" },\r\n            \"SourceBundle\" : {\r\n              \"S3Bucket\": { \"Fn::Join\" : [\"-\", [\"cloudformation-examples\", {\"Ref\" : \"AWS::Region\" }]]},\r\n              \"S3Key\": \"CloudFormationBeanstalkRDSExample.war\"\r\n            }\r\n          }\r\n        },\r\n\r\nI have only the Free Tier account on AWS, so I do not want to cast money to test how this behaves. Description says:\r\n\r\n>**WARNING** This template creates one or more Amazon EC2 instances and an Amazon Relational Database Service database instance. You will be billed for the AWS resources used if you create a stack from this template.\r\n\r\nMy issue is to know, **how many instances this would create if launched**? I do not see any constraints, but the `Mappings` part seems so long, that I suppose more than one is at least there. `Conditions` has two entries, does that mean two instances also? I would like to find a solution with only one instance running, would it be enough to just limit the regions or **how to limit amount of EC2 created to only one?**", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "}, \"cn-northwest-1\" : { \"EC2Principal\" : \"ec2.amazonaws.com.cn\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com.cn\" }, \"eu-central-1\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" }, \"eu-north-1\" : { \"EC2Principal\" : \"ec2.amazonaws.com\", \"OpsWorksPrincipal\" : \"opsworks.amazonaws.com\" } } }, \"Conditions\" : { \"Is-EC2-VPC\" : { \"Fn::Or\" : [ {\"Fn::Equals\" : [{\"Ref\" : \"AWS::Region\"}, \"eu-central-1\" ]}, {\"Fn::Equals\" : [{\"Ref\" : \"AWS::Region\"}, \"cn-north-1\" ]}]}, \"Is-EC2-Classic\" : { \"Fn::Not\" : [{ \"Condition\" : \"Is-EC2-VPC\"}]} }, \"Resources\": { \"WebServerRole\": { \"Type\": \"AWS::IAM::Role\", \"Properties\" : { \"AssumeRolePolicyDocument\" : { \"Statement\" : [{ \"Effect\" : \"Allow\", \"Principal\": { \"Service\": [{ \"Fn::FindInMap\" : [\"Region2Principal\", {\"Ref\" : \"AWS::Region\"}, \"EC2Principal\"]}] }, \"Action\" : [ \"sts:AssumeRole\" ] } ] }, \"Path\": \"/\" } }, \"WebServerRolePolicy\": { \"Type\": \"AWS::IAM::Policy\", \"Properties\": { \"PolicyName\" : \"WebServerRole\", \"PolicyDocument\" : { \"Statement\" : [ { \"Effect\" : \"Allow\", \"NotAction\" : \"iam:*\", \"Resource\" : \"*\" } ] }, \"Roles\": [ { \"Ref\": \"WebServerRole\" } ] } }, \"WebServerInstanceProfile\": { \"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": { \"Path\": \"/\", \"Roles\": [ { \"Ref\": \"WebServerRole\" } ] } }, \"SampleApplication\": { \"Type\": \"AWS::ElasticBeanstalk::Application\", \"Properties\": { \"Description\": \"AWS Elastic Beanstalk Sample Application\" } }, \"SampleApplicationVersion\" : { \"Type\" : \"AWS::ElasticBeanstalk::ApplicationVersion\", \"Properties\" : { \"Description\" : \"Version 1.0\", \"ApplicationName\" : { \"Ref\" : \"SampleApplication\" }, \"SourceBundle\" : { \"S3Bucket\": { \"Fn::Join\" : [\"-\", [\"cloudformation-examples\", {\"Ref\" : \"AWS::Region\" }]]}, \"S3Key\": \"CloudFormationBeanstalkRDSExample.war\" } } }, I have only the Free Tier account on AWS, so I do not want to cast money to test how this behaves. ", "keywords": ["policy", "test"]}, {"source": "Text", "text": "Description says: >**WARNING** This template creates one or more Amazon EC2 instances and an Amazon Relational Database Service database instance. ", "keywords": ["instance"]}, {"source": "Text", "text": "You will be billed for the AWS resources used if you create a stack from this template. ", "keywords": ["bill"]}, {"source": "Text", "text": "I would like to find a solution with only one instance running, would it be enough to just limit the regions or **how to limit amount of EC2 created to only one?**", "keywords": ["instance"]}]}], "answers": [{"Id": "58593456", "PostTypeId": "2", "ParentId": "58591924", "CreationDate": "2019-10-28T15:08:39.907", "Score": "1", "Body": "<p>I think your using this template. <a href=\"https://s3-ap-south-1.amazonaws.com/cloudformation-templates-ap-south-1/ElasticBeanstalk_Simple.template\" rel=\"nofollow noreferrer\">https://s3-ap-south-1.amazonaws.com/cloudformation-templates-ap-south-1/ElasticBeanstalk_Simple.template</a></p>\n\n<p>In which case its creating a database which is a db.t2.small. Amazon Free Tier for an RDS is exclusively a db.t2.micro. If you edit the template to the free tier that warning should disappear  </p>\n\n<p>More info here: <a href=\"https://aws.amazon.com/rds/free/\" rel=\"nofollow noreferrer\">https://aws.amazon.com/rds/free/</a></p>\n", "OwnerUserId": "7500779", "LastActivityDate": "2019-10-28T15:08:39.907", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "103517840", "PostId": "58593456", "Score": "0", "Text": "Well, I would like to know the logic, when there becomes implicit load balancing and when not and how to control, that there would be no load balancer at all, if I at first want to manage with minimal setup of one EC2 only. So, I don't want to actually launch anything before I know the inner logic what would happen if I do this or that.", "CreationDate": "2019-10-29T07:50:21.903", "UserId": "549910", "filtered-sentences": []}], "history": [{"Id": "208102253", "PostHistoryTypeId": "2", "PostId": "58593456", "RevisionGUID": "55638fe7-996c-4382-b022-2630ce15e8f2", "CreationDate": "2019-10-28T15:08:39.907", "UserId": "7500779", "Text": "I think your using this template. https://s3-ap-south-1.amazonaws.com/cloudformation-templates-ap-south-1/ElasticBeanstalk_Simple.template\r\n\r\nIn which case its creating a database which is a db.t2.small. Amazon Free Tier for an RDS is exclusively a db.t2.micro. If you edit the template to the free tier that warning should disappear  \r\n\r\nMore info here: https://aws.amazon.com/rds/free/", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "58604590", "PostTypeId": "2", "ParentId": "58591924", "CreationDate": "2019-10-29T09:29:59.893", "Score": "1", "Body": "<p>Actually, I found a way to go:</p>\n\n<p>I took this solution as a base one:</p>\n\n<pre><code>AWSTemplateFormatVersion: '2010-09-09'\nResources:\n  sampleApplication:\n    Type: AWS::ElasticBeanstalk::Application\n    Properties:\n      Description: AWS Elastic Beanstalk Sample Application\n  sampleApplicationVersion:\n    Type: AWS::ElasticBeanstalk::ApplicationVersion\n    Properties:\n      ApplicationName:\n        Ref: sampleApplication\n      Description: AWS ElasticBeanstalk Sample Application Version\n      SourceBundle:\n        S3Bucket: !Sub \"elasticbeanstalk-samples-${AWS::Region}\"\n        S3Key: php-newsample-app.zip\n  sampleConfigurationTemplate:\n    Type: AWS::ElasticBeanstalk::ConfigurationTemplate\n    Properties:\n      ApplicationName:\n        Ref: sampleApplication\n      Description: AWS ElasticBeanstalk Sample Configuration Template\n      OptionSettings:\n      - Namespace: aws:autoscaling:asg\n        OptionName: MinSize\n        Value: '2'\n      - Namespace: aws:autoscaling:asg\n        OptionName: MaxSize\n        Value: '6'\n      - Namespace: aws:elasticbeanstalk:environment\n        OptionName: EnvironmentType\n        Value: LoadBalanced\n      SolutionStackName: 64bit Amazon Linux 2018.03 v2.8.15 running PHP 7.2\n  sampleEnvironment:\n    Type: AWS::ElasticBeanstalk::Environment\n    Properties:\n      ApplicationName:\n        Ref: sampleApplication\n      Description: AWS ElasticBeanstalk Sample Environment\n      TemplateName:\n        Ref: sampleConfigurationTemplate\n      VersionLabel:\n        Ref: sampleApplicationVersion\n</code></pre>\n\n<p>(found in <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-elasticbeanstalk.html\" rel=\"nofollow noreferrer\">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-elasticbeanstalk.html</a>)</p>\n\n<p>There if I change <code>EnvironmentType</code> to <code>SingleInstance</code>, I get a single instance solution like I want.</p>\n\n<p>(found in <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options-general.html#command-options-general-elasticbeanstalkenvironment\" rel=\"nofollow noreferrer\">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options-general.html#command-options-general-elasticbeanstalkenvironment</a>)</p>\n\n<p>I haven't tested this yet, but I suppose that at the same way I can drop the <code>MinSize</code> and <code>MaxSize</code> because, this is single instance.</p>\n", "OwnerUserId": "549910", "LastActivityDate": "2019-10-29T09:29:59.893", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "103520296", "PostId": "58604590", "Score": "0", "Text": "then, I can change the other values according my needs, and I am done. Thanks folks.", "CreationDate": "2019-10-29T09:30:57.947", "UserId": "549910", "filtered-sentences": [{"source": "Text", "text": "then, I can change the other values according my needs, and I am done. ", "keywords": ["change"]}]}], "history": [{"Id": "208147365", "PostHistoryTypeId": "2", "PostId": "58604590", "RevisionGUID": "a40af0f2-79d6-4afb-91f6-f77ed03afa63", "CreationDate": "2019-10-29T09:29:59.893", "UserId": "549910", "Text": "Actually, I found a way to go:\r\n\r\nI took this solution as a base one:\r\n\r\n    AWSTemplateFormatVersion: '2010-09-09'\r\n    Resources:\r\n      sampleApplication:\r\n        Type: AWS::ElasticBeanstalk::Application\r\n        Properties:\r\n          Description: AWS Elastic Beanstalk Sample Application\r\n      sampleApplicationVersion:\r\n        Type: AWS::ElasticBeanstalk::ApplicationVersion\r\n        Properties:\r\n          ApplicationName:\r\n            Ref: sampleApplication\r\n          Description: AWS ElasticBeanstalk Sample Application Version\r\n          SourceBundle:\r\n            S3Bucket: !Sub \"elasticbeanstalk-samples-${AWS::Region}\"\r\n            S3Key: php-newsample-app.zip\r\n      sampleConfigurationTemplate:\r\n        Type: AWS::ElasticBeanstalk::ConfigurationTemplate\r\n        Properties:\r\n          ApplicationName:\r\n            Ref: sampleApplication\r\n          Description: AWS ElasticBeanstalk Sample Configuration Template\r\n          OptionSettings:\r\n          - Namespace: aws:autoscaling:asg\r\n            OptionName: MinSize\r\n            Value: '2'\r\n          - Namespace: aws:autoscaling:asg\r\n            OptionName: MaxSize\r\n            Value: '6'\r\n          - Namespace: aws:elasticbeanstalk:environment\r\n            OptionName: EnvironmentType\r\n            Value: LoadBalanced\r\n          SolutionStackName: 64bit Amazon Linux 2018.03 v2.8.15 running PHP 7.2\r\n      sampleEnvironment:\r\n        Type: AWS::ElasticBeanstalk::Environment\r\n        Properties:\r\n          ApplicationName:\r\n            Ref: sampleApplication\r\n          Description: AWS ElasticBeanstalk Sample Environment\r\n          TemplateName:\r\n            Ref: sampleConfigurationTemplate\r\n          VersionLabel:\r\n            Ref: sampleApplicationVersion\r\n\r\n(found in https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-elasticbeanstalk.html)\r\n\r\nThere if I change `EnvironmentType` to `SingleInstance`, I get a single instance solution like I want.\r\n\r\n(found in https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options-general.html#command-options-general-elasticbeanstalkenvironment)\r\n\r\nI haven't tested this yet, but I suppose that at the same way I can drop the `MinSize` and `MaxSize` because, this is single instance.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Actually, I found a way to go: I took this solution as a base one: AWSTemplateFormatVersion: '2010-09-09' Resources: sampleApplication: Type: AWS::ElasticBeanstalk::Application Properties: Description: AWS Elastic Beanstalk Sample Application sampleApplicationVersion: Type: AWS::ElasticBeanstalk::ApplicationVersion Properties: ApplicationName: Ref: sampleApplication Description: AWS ElasticBeanstalk Sample Application Version SourceBundle: S3Bucket: !Sub \"elasticbeanstalk-samples-${AWS::Region}\" S3Key: php-newsample-app.zip sampleConfigurationTemplate: Type: AWS::ElasticBeanstalk::ConfigurationTemplate Properties: ApplicationName: Ref: sampleApplication Description: AWS ElasticBeanstalk Sample Configuration Template OptionSettings: - Namespace: aws:autoscaling:asg OptionName: MinSize Value: '2' - Namespace: aws:autoscaling:asg OptionName: MaxSize Value: '6' - Namespace: aws:elasticbeanstalk:environment OptionName: EnvironmentType Value: LoadBalanced SolutionStackName: 64bit Amazon Linux 2018.03 v2.8.15 running PHP 7.2 sampleEnvironment: Type: AWS::ElasticBeanstalk::Environment Properties: ApplicationName: Ref: sampleApplication Description: AWS ElasticBeanstalk Sample Environment TemplateName: Ref: sampleConfigurationTemplate VersionLabel: Ref: sampleApplicationVersion (found in https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-elasticbeanstalk.html) There if I change `EnvironmentType` to `SingleInstance`, I get a single instance solution like I want. (found in https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options-general.html#command-options-general-elasticbeanstalkenvironment) I haven't tested this yet, but I suppose that at the same way I can drop the `MinSize` and `MaxSize` because, this is single instance.", "keywords": ["instance", "change", "test"]}]}], "filtered-sentences": [{"source": "Body", "text": "Actually, I found a way to go: I took this solution as a base one: (found in https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-elasticbeanstalk.html) There if I change EnvironmentType to SingleInstance, I get a single instance solution like I want. (found in https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options-general.html#command-options-general-elasticbeanstalkenvironment) ", "keywords": ["instance", "change"]}, {"source": "Body", "text": "I haven't tested this yet, but I suppose that at the same way I can drop the MinSize and MaxSize because, this is single instance.", "keywords": ["instance", "test"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Title", "text": "How to build a solution of CloudFormation and Elastic Beanstalk that has only one EC2 instance?", "keywords": ["instance"]}, {"source": "Body", "text": "This direct CloudFormation code snippet is part from example ElasticBeanstalk application provided in https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/sample-templates-services-ap-south-1.html I have only the Free Tier account on AWS, so I do not want to cast money to test how this behaves. ", "keywords": ["test"]}, {"source": "Body", "text": "This template creates one or more Amazon EC2 instances and an Amazon Relational Database Service database instance. ", "keywords": ["instance"]}, {"source": "Body", "text": "You will be billed for the AWS resources used if you create a stack from this template. ", "keywords": ["bill"]}, {"source": "Body", "text": "I would like to find a solution with only one instance running, would it be enough to just limit the regions or how to limit amount of EC2 created to only one?", "keywords": ["instance"]}]}
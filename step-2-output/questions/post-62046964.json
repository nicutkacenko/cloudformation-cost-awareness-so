{"Id": "62046964", "PostTypeId": "1", "CreationDate": "2020-05-27T15:33:50.600", "Score": "4", "ViewCount": "574", "Body": "<p>I want to create a EC2 instance type <code>t3.medium</code> on all environments and <code>m5.large</code> on production.</p>\n\n<p>I'm using <code>.ebextensions</code> (YAML) like so:</p>\n\n<p>option 1:</p>\n\n<pre><code>Mappings:\n  EnvironmentMap:\n    \"production\":\n      TheType: \"m5.large\"\n      SecurityGroup: \"foo\"\n      ...\n    \"staging\":\n      TheType: \"t3.medium\"\n      SecurityGroup: \"bar\"\n      ...\n\noption_settings:\n  aws:autoscaling:launchconfiguration:\n    IamInstanceProfile: \"aws-elasticbeanstalk-ec2-role\"\n    InstanceType: !FindInMap\n      - EnvironmentMap\n      - !Ref 'AWSEBEnvironmentName'\n      - TheType\n    SecurityGroups:\n      - {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"SecurityGroup\"]}\n</code></pre>\n\n<p>Option 2:</p>\n\n<pre><code>    InstanceType: {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"EC2InstanceType\"]}\n</code></pre>\n\n<p>Option 3:</p>\n\n<pre><code>    InstanceType:\n      - {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"EC2InstanceType\"]}\n</code></pre>\n\n<h1>Results</h1>\n\n<p>Option 1 fails with Invalid Yaml (but I took this from this AWS <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-findinmap.html\" rel=\"nofollow noreferrer\">example</a>.</p>\n\n<p>Option 2 and 3 fail with the same problem.\nThe FindInMap function is not \"called\":\n<code>Invalid option value: '{\"Fn::FindInMap\":[\"EnvironmentMap\",\"EC2InstanceType\"]},{\"Ref\":\"AWSEBEnvironmentName\"}' (Namespace: 'aws:autoscaling:launchconfiguration', OptionName: 'InstanceType'): Value is not one of the allowed values: [c1.medium, c1.xlarge, c3.2xlarge, ....\n</code>\nIt tries to interpret the whole function/thing as a string.</p>\n\n<p><strike>For the <code>SecurityGroups</code> property it works, for <code>InstanceType</code> it does not.</strike></p>\n\n<p>I can't do it dynamically and I can't find how to achieve this neither on AWS doc, SO, or anywhere else. I would assume this is simple stuff. What am I missing?</p>\n\n<hr>\n\n<p>EDIT:</p>\n\n<p>Option 4: using conditionals</p>\n\n<pre><code>Conditions:\n  IsProduction: !Equals [ !Ref AWSEBEnvironmentName, production ]\n\noption_settings:\n\n  aws:autoscaling:launchconfiguration:\n    InstanceType: !If [ IsProduction, m5.large, t3.medium ]\n    SecurityGroups:\n      - {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"SecurityGroup\"]}\n</code></pre>\n\n<p>Error: <code>YAML exception: Invalid Yaml: could not determine a constructor for the tag !Equals in...</code></p>\n\n<p>But this comes from documentation on <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/conditions-section-structure.html\" rel=\"nofollow noreferrer\">conditions</a> and <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-conditions.html#intrinsic-function-reference-conditions-if\" rel=\"nofollow noreferrer\">if</a>.</p>\n\n<hr>\n\n<p>EDIT 2:</p>\n\n<p>I eventually found out that the option <code>InstanceType</code> is <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options-general.html#command-options-general-autoscalinglaunchconfiguration\" rel=\"nofollow noreferrer\">obsolute</a> and we should use:</p>\n\n<pre><code>aws:ec2:instances\n  InstanceTypes: \"t3.medium\"\n</code></pre>\n\n<p>But alas, this does not solve the problem either because I cannot use the replacement functions here as well (<code>Fn:findInMap</code>).</p>\n", "OwnerUserId": "797369", "LastEditorUserId": "797369", "LastEditDate": "2020-05-28T17:15:10.640", "LastActivityDate": "2023-12-17T05:15:15.410", "Title": "Dynamically set the EC2 Instance Type per Environment using ebextensions", "Tags": "|amazon-web-services|amazon-elastic-beanstalk|aws-cloudformation|ebextensions|", "AnswerCount": "2", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "222678173", "PostHistoryTypeId": "5", "PostId": "62046964", "RevisionGUID": "fa3105b5-b0eb-41c2-8b97-9a170c15b91b", "CreationDate": "2020-05-27T15:45:26.210", "UserId": "797369", "Comment": "add missing link", "Text": "I want to create a EC2 instance type `t3.medium` on all environments and `m5.large` on production.\r\n\r\nI'm using `.ebextensions` (YAML) like so:\r\n\r\noption 1:\r\n\r\n    Mappings:\r\n      EnvironmentMap:\r\n        \"production\":\r\n          TheType: \"m5.large\"\r\n          SecurityGroup: \"foo\"\r\n          ...\r\n        \"staging\":\r\n          TheType: \"t3.medium\"\r\n          SecurityGroup: \"bar\"\r\n          ...\r\n\r\n    option_settings:\r\n      aws:autoscaling:launchconfiguration:\r\n        IamInstanceProfile: \"aws-elasticbeanstalk-ec2-role\"\r\n        InstanceType: !FindInMap\r\n          - EnvironmentMap\r\n          - !Ref 'AWSEBEnvironmentName'\r\n          - TheType\r\n        SecurityGroups:\r\n          - {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"SecurityGroup\"]}\r\n\r\n\r\nOption 2:\r\n\r\n\r\n        InstanceType: {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"EC2InstanceType\"]}\r\n\r\n\r\nOption 3:\r\n\r\n\r\n        InstanceType:\r\n          - {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"EC2InstanceType\"]}\r\n\r\n\r\n# Results\r\n\r\nOption 1 fails with Invalid Yaml (but I took this from this AWS [example](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-findinmap.html).\r\n\r\nOption 2 and 3 fail with the same problem.\r\nThe FindInMap function is not \"called\":\r\n`Invalid option value: '{\"Fn::FindInMap\":[\"EnvironmentMap\",\"EC2InstanceType\"]},{\"Ref\":\"AWSEBEnvironmentName\"}' (Namespace: 'aws:autoscaling:launchconfiguration', OptionName: 'InstanceType'): Value is not one of the allowed values: [c1.medium, c1.xlarge, c3.2xlarge, ....\r\n`\r\nIt tries to interpret the whole function/thing as a string.\r\n\r\n\r\nFor the `SecurityGroups` property it works, for `InstanceType` it does not.\r\n\r\nI can't do it dynamically and I can't find how to achieve this neither on AWS doc, SO, or anywhere else. I would assume this is simple stuff. What am I missing?\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I want to create a EC2 instance type `t3.medium` on all environments and `m5.large` on production. ", "keywords": ["instance"]}]}, {"Id": "222677129", "PostHistoryTypeId": "2", "PostId": "62046964", "RevisionGUID": "45c75e88-d253-412e-8104-ba5741c039a7", "CreationDate": "2020-05-27T15:33:50.600", "UserId": "797369", "Text": "I want to create a EC2 instance type `t3.medium` on all environments and `m5.large` on production.\r\n\r\nI'm using `.ebextensions` (YAML) like so:\r\n\r\noption 1:\r\n\r\n    Mappings:\r\n      EnvironmentMap:\r\n        \"production\":\r\n          TheType: \"m5.large\"\r\n          SecurityGroup: \"foo\"\r\n          ...\r\n        \"staging\":\r\n          TheType: \"t3.medium\"\r\n          SecurityGroup: \"bar\"\r\n          ...\r\n\r\n    option_settings:\r\n      aws:autoscaling:launchconfiguration:\r\n        IamInstanceProfile: \"aws-elasticbeanstalk-ec2-role\"\r\n        InstanceType: !FindInMap\r\n          - EnvironmentMap\r\n          - !Ref 'AWSEBEnvironmentName'\r\n          - TheType\r\n        SecurityGroups:\r\n          - {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"SecurityGroup\"]}\r\n\r\n\r\nOption 2:\r\n\r\n\r\n        InstanceType: {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"EC2InstanceType\"]}\r\n\r\n\r\nOption 3:\r\n\r\n\r\n        InstanceType:\r\n          - {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"EC2InstanceType\"]}\r\n\r\n\r\n# Results\r\n\r\nOption 1 fails with Invalid Yaml (but I took this from this AWS [example|]).\r\n\r\nOption 2 and 3 fail with the same problem.\r\nThe FindInMap function is not \"called\":\r\n`Invalid option value: '{\"Fn::FindInMap\":[\"EnvironmentMap\",\"EC2InstanceType\"]},{\"Ref\":\"AWSEBEnvironmentName\"}' (Namespace: 'aws:autoscaling:launchconfiguration', OptionName: 'InstanceType'): Value is not one of the allowed values: [c1.medium, c1.xlarge, c3.2xlarge, ....\r\n`\r\nIt tries to interpret the whole function/thing as a string.\r\n\r\n\r\nFor the `SecurityGroups` property it works, for `InstanceType` it does not.\r\n\r\nI can't do it dynamically and I can't find how to achieve this neither on AWS doc, SO, or anywhere else. I would assume this is simple stuff. What am I missing?\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I want to create a EC2 instance type `t3.medium` on all environments and `m5.large` on production. ", "keywords": ["instance"]}]}, {"Id": "222677130", "PostHistoryTypeId": "1", "PostId": "62046964", "RevisionGUID": "45c75e88-d253-412e-8104-ba5741c039a7", "CreationDate": "2020-05-27T15:33:50.600", "UserId": "797369", "Text": "Dynamically set the EC2 Instance Type per Environment using ebextensions", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Dynamically set the EC2 Instance Type per Environment using ebextensions", "keywords": ["instance"]}]}, {"Id": "222677131", "PostHistoryTypeId": "3", "PostId": "62046964", "RevisionGUID": "45c75e88-d253-412e-8104-ba5741c039a7", "CreationDate": "2020-05-27T15:33:50.600", "UserId": "797369", "Text": "|amazon-web-services|amazon-elastic-beanstalk|aws-cloudformation|ebextensions|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "222681279", "PostHistoryTypeId": "5", "PostId": "62046964", "RevisionGUID": "ff9e0eaa-354e-42e5-81e2-deac84378105", "CreationDate": "2020-05-27T16:25:53.360", "UserId": "797369", "Comment": "fix typo", "Text": "I want to create a EC2 instance type `t3.medium` on all environments and `m5.large` on production.\r\n\r\nI'm using `.ebextensions` (YAML) like so:\r\n\r\noption 1:\r\n\r\n    Mappings:\r\n      EnvironmentMap:\r\n        \"production\":\r\n          TheType: \"m5.large\"\r\n          SecurityGroup: \"foo\"\r\n          ...\r\n        \"staging\":\r\n          TheType: \"t3.medium\"\r\n          SecurityGroup: \"bar\"\r\n          ...\r\n\r\n    option_settings:\r\n      aws:autoscaling:launchconfiguration:\r\n        IamInstanceProfile: \"aws-elasticbeanstalk-ec2-role\"\r\n        InstanceType: !FindInMap\r\n          - EnvironmentMap\r\n          - !Ref 'AWSEBEnvironmentName'\r\n          - TheType\r\n        SecurityGroups:\r\n          - {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"SecurityGroup\"]}\r\n\r\n\r\nOption 2:\r\n\r\n\r\n        InstanceType: {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"EC2InstanceType\"]}\r\n\r\n\r\nOption 3:\r\n\r\n\r\n        InstanceType:\r\n          - {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"EC2InstanceType\"]}\r\n\r\n\r\n# Results\r\n\r\nOption 1 fails with Invalid Yaml (but I took this from this AWS [example](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-findinmap.html).\r\n\r\nOption 2 and 3 fail with the same problem.\r\nThe FindInMap function is not \"called\":\r\n`Invalid option value: '{\"Fn::FindInMap\":[\"EnvironmentMap\",\"EC2InstanceType\"]},{\"Ref\":\"AWSEBEnvironmentName\"}' (Namespace: 'aws:autoscaling:launchconfiguration', OptionName: 'InstanceType'): Value is not one of the allowed values: [c1.medium, c1.xlarge, c3.2xlarge, ....\r\n`\r\nIt tries to interpret the whole function/thing as a string.\r\n\r\n\r\nFor the `SecurityGroups` property it works, for `InstanceType` it does not.\r\n\r\nI can't do it dynamically and I can't find how to achieve this neither on AWS doc, SO, or anywhere else. I would assume this is simple stuff. What am I missing?\r\n\r\n----\r\n\r\nEDIT:\r\n\r\nOption 4: using conditionals\r\n\r\n\r\n```\r\nConditions:\r\n  IsProduction: !Equals [ !Ref AWSEBEnvironmentName, production ]\r\n\r\noption_settings:\r\n\r\n  aws:autoscaling:launchconfiguration:\r\n    InstanceType: !If [ IsProduction, m5.large, t3.medium ]\r\n    SecurityGroups:\r\n      - {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"SecurityGroup\"]}\r\n```\r\n\r\nError: `YAML exception: Invalid Yaml: could not determine a constructor for the tag !Equals in...`\r\n\r\nBut this comes from documentation on [conditions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/conditions-section-structure.html) and [if](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-conditions.html#intrinsic-function-reference-conditions-if).", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I want to create a EC2 instance type `t3.medium` on all environments and `m5.large` on production. ", "keywords": ["instance"]}]}, {"Id": "222773066", "PostHistoryTypeId": "5", "PostId": "62046964", "RevisionGUID": "0e70992b-5d4f-4f31-bc81-0aaab2dd97e8", "CreationDate": "2020-05-28T17:15:10.640", "UserId": "797369", "Comment": "fix typo", "Text": "I want to create a EC2 instance type `t3.medium` on all environments and `m5.large` on production.\r\n\r\nI'm using `.ebextensions` (YAML) like so:\r\n\r\noption 1:\r\n\r\n    Mappings:\r\n      EnvironmentMap:\r\n        \"production\":\r\n          TheType: \"m5.large\"\r\n          SecurityGroup: \"foo\"\r\n          ...\r\n        \"staging\":\r\n          TheType: \"t3.medium\"\r\n          SecurityGroup: \"bar\"\r\n          ...\r\n\r\n    option_settings:\r\n      aws:autoscaling:launchconfiguration:\r\n        IamInstanceProfile: \"aws-elasticbeanstalk-ec2-role\"\r\n        InstanceType: !FindInMap\r\n          - EnvironmentMap\r\n          - !Ref 'AWSEBEnvironmentName'\r\n          - TheType\r\n        SecurityGroups:\r\n          - {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"SecurityGroup\"]}\r\n\r\n\r\nOption 2:\r\n\r\n\r\n        InstanceType: {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"EC2InstanceType\"]}\r\n\r\n\r\nOption 3:\r\n\r\n\r\n        InstanceType:\r\n          - {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"EC2InstanceType\"]}\r\n\r\n\r\n# Results\r\n\r\nOption 1 fails with Invalid Yaml (but I took this from this AWS [example](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-findinmap.html).\r\n\r\nOption 2 and 3 fail with the same problem.\r\nThe FindInMap function is not \"called\":\r\n`Invalid option value: '{\"Fn::FindInMap\":[\"EnvironmentMap\",\"EC2InstanceType\"]},{\"Ref\":\"AWSEBEnvironmentName\"}' (Namespace: 'aws:autoscaling:launchconfiguration', OptionName: 'InstanceType'): Value is not one of the allowed values: [c1.medium, c1.xlarge, c3.2xlarge, ....\r\n`\r\nIt tries to interpret the whole function/thing as a string.\r\n\r\n\r\n<strike>For the `SecurityGroups` property it works, for `InstanceType` it does not.</strike>\r\n\r\nI can't do it dynamically and I can't find how to achieve this neither on AWS doc, SO, or anywhere else. I would assume this is simple stuff. What am I missing?\r\n\r\n----\r\n\r\nEDIT:\r\n\r\nOption 4: using conditionals\r\n\r\n\r\n```\r\nConditions:\r\n  IsProduction: !Equals [ !Ref AWSEBEnvironmentName, production ]\r\n\r\noption_settings:\r\n\r\n  aws:autoscaling:launchconfiguration:\r\n    InstanceType: !If [ IsProduction, m5.large, t3.medium ]\r\n    SecurityGroups:\r\n      - {\"Fn::FindInMap\": [\"EnvironmentMap\", {\"Ref\": \"AWSEBEnvironmentName\"}, \"SecurityGroup\"]}\r\n```\r\n\r\nError: `YAML exception: Invalid Yaml: could not determine a constructor for the tag !Equals in...`\r\n\r\nBut this comes from documentation on [conditions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/conditions-section-structure.html) and [if](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-conditions.html#intrinsic-function-reference-conditions-if).\r\n\r\n----\r\n\r\nEDIT 2:\r\n\r\nI eventually found out that the option `InstanceType` is [obsolute](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options-general.html#command-options-general-autoscalinglaunchconfiguration) and we should use:\r\n\r\n    aws:ec2:instances\r\n      InstanceTypes: \"t3.medium\"\r\n\r\nBut alas, this does not solve the problem either because I cannot use the replacement functions here as well (`Fn:findInMap`).\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I want to create a EC2 instance type `t3.medium` on all environments and `m5.large` on production. ", "keywords": ["instance"]}]}], "answers": [{"Id": "62057977", "PostTypeId": "2", "ParentId": "62046964", "CreationDate": "2020-05-28T06:00:07.803", "Score": "1", "Body": "<p>The reason why <code>FindInMap</code> does not work in <code>option_settings</code> is the fact that only <strong>four intrinsic functions are allowed</strong> there (from <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/ebextensions-functions.html\" rel=\"nofollow noreferrer\">docs</a>):</p>\n\n<ul>\n<li>Ref</li>\n<li>Fn::GetAtt</li>\n<li>Fn::Join</li>\n<li>Fn::GetOptionSetting</li>\n</ul>\n\n<p>I'm not convinced that <code>SecurityGroups</code> worked. I think your script failed before <code>FindInMap</code> in <code>SecurityGroups</code> got chance to be evaluated. </p>\n\n<p>However,  <strong>I tried to find a way</strong> using <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-resources.html\" rel=\"nofollow noreferrer\">Resources</a>. The closes I got was with the following <code>config</code> file:</p>\n\n<pre><code>Mappings:\n  EnvironmentMap:\n    production:\n      TheType: \"t3.medium\"\n    staging:\n      TheType: \"t2.small\"\n\nResources:\n  AWSEBAutoScalingLaunchConfiguration:\n    Type: AWS::AutoScaling::LaunchConfiguration\n    Properties:\n      InstanceType:\n        ? \"Fn::FindInMap\"\n        :\n          - EnvironmentMap\n          - \n            Ref: \"AWSEBEnvironmentName\"\n          - TheType\n</code></pre>\n\n<p>Although this is a step closer, it <strong>ultimately fails</strong> as well. The reason is that when EB is jointing our <code>Resources</code> config file with its own template, it produces the following:</p>\n\n<pre><code>\"InstanceType\": {\n  \"Ref\": \"InstanceType\", # &lt;--- this should NOT be here :-(\n  \"Fn::FindInMap\": [\n    \"EnvironmentMap\",\n    {\n      \"Ref\": \"AWSEBEnvironmentName\"\n    },\n    \"TheType\"\n  ]\n},\n</code></pre>\n\n<p>instead of </p>\n\n<pre><code>\"InstanceType\": {\n  \"Fn::FindInMap\": [\n    \"EnvironmentMap\",\n    {\n      \"Ref\": \"AWSEBEnvironmentName\"\n    },\n    \"TheType\"\n  ]\n},\n</code></pre>\n\n<p>And this happens because the original <code>InstanceType</code> (before the joint operation) is: </p>\n\n<pre><code>\"InstanceType\":{\"Ref\":\"InstanceType\"},\n</code></pre>\n\n<p>Therefore, EB <strong>instead of replacing</strong> <code>InstanceType</code> with our custom <code>InstanceType</code> provided in our config file, it just merges them. </p>\n", "OwnerUserId": "248823", "LastActivityDate": "2020-05-28T06:00:07.803", "CommentCount": "4", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "109762739", "PostId": "62057977", "Score": "1", "Text": "thanks for the answer. i learned something already. I would assume this is a basic operation. Use smaller, cheaper EC2 on dev, use a bigger faster EC2 on prod. How come this is so hard? How are we supposed to achieve the same effect then ?", "CreationDate": "2020-05-28T08:33:33.363", "UserId": "797369", "filtered-sentences": [{"source": "Text", "text": "Use smaller, cheaper EC2 on dev, use a bigger faster EC2 on prod. ", "keywords": ["cheap"]}]}, {"Id": "109762875", "PostId": "62057977", "Score": "1", "Text": "@Vetras I don't have answer currently.  I also tried using [Fn::GetOptionSetting](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/ebextensions-functions.html#ebextensions-functions-getoptionsetting) but had no luck. Maybe there is other way, simpler. I don't know for now. Sorry.", "CreationDate": "2020-05-28T08:37:42.200", "UserId": "248823", "filtered-sentences": []}, {"Id": "109763461", "PostId": "62057977", "Score": "0", "Text": "@Vetras As a side note, if you used CloudFormation for provisioning your EB env,  you could do it easily there, not from `.ebextensions`.", "CreationDate": "2020-05-28T08:55:36.073", "UserId": "248823", "filtered-sentences": []}, {"Id": "109772347", "PostId": "62057977", "Score": "0", "Text": "Right now the whole project is ebextensions and is a bit large.\nI am planning on cloning this into terraform sometime soon. Thanks for the help.", "CreationDate": "2020-05-28T13:19:21.350", "UserId": "797369", "filtered-sentences": []}], "history": [{"Id": "222721937", "PostHistoryTypeId": "2", "PostId": "62057977", "RevisionGUID": "cd24e4e5-a616-42ee-85b4-c5dcccf4fcb1", "CreationDate": "2020-05-28T06:00:07.803", "UserId": "248823", "Text": "The reason why `FindInMap` does not work in `option_settings` is the fact that only **four intrinsic functions are allowed** there (from [docs](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/ebextensions-functions.html)):\r\n\r\n - Ref\r\n - Fn::GetAtt\r\n - Fn::Join\r\n - Fn::GetOptionSetting\r\n\r\nI'm not convinced that `SecurityGroups` worked. I think your script failed before `FindInMap` in `SecurityGroups` got chance to be evaluated. \r\n\r\n\r\nHowever,  **I tried to find a way** using [Resources](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-resources.html). The closes I got was with the following `config` file:\r\n\r\n```\r\nMappings:\r\n  EnvironmentMap:\r\n    production:\r\n      TheType: \"t3.medium\"\r\n    staging:\r\n      TheType: \"t2.small\"\r\n\r\nResources:\r\n  AWSEBAutoScalingLaunchConfiguration:\r\n    Type: AWS::AutoScaling::LaunchConfiguration\r\n    Properties:\r\n      InstanceType:\r\n        ? \"Fn::FindInMap\"\r\n        :\r\n          - EnvironmentMap\r\n          - \r\n            Ref: \"AWSEBEnvironmentName\"\r\n          - TheType\r\n```\r\n\r\nAlthough this is a step closer, it **ultimately fails** as well. The reason is that when EB is jointing our `Resources` config file with its own template, it produces the following:\r\n\r\n```\r\n\"InstanceType\": {\r\n  \"Ref\": \"InstanceType\", # <--- this should NOT be here :-(\r\n  \"Fn::FindInMap\": [\r\n    \"EnvironmentMap\",\r\n    {\r\n      \"Ref\": \"AWSEBEnvironmentName\"\r\n    },\r\n    \"TheType\"\r\n  ]\r\n},\r\n```\r\n\r\ninstead of \r\n\r\n\r\n```\r\n\"InstanceType\": {\r\n  \"Fn::FindInMap\": [\r\n    \"EnvironmentMap\",\r\n    {\r\n      \"Ref\": \"AWSEBEnvironmentName\"\r\n    },\r\n    \"TheType\"\r\n  ]\r\n},\r\n```\r\n\r\nAnd this happens because the original `InstanceType` (before the joint operation) is: \r\n\r\n```\r\n\"InstanceType\":{\"Ref\":\"InstanceType\"},\r\n```\r\n\r\nTherefore, EB **instead of replacing** `InstanceType` with our custom `InstanceType` provided in our config file, it just merges them. \r\n\r\n\r\n\r\n\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "77673388", "PostTypeId": "2", "ParentId": "62046964", "CreationDate": "2023-12-17T05:15:15.410", "Score": "0", "Body": "<p>I know this is an old question, but for anyone else searching, instead of trying to dynamically or conditionally set the instance type in an ebextensions config file, you can just entirely omit that config option and instead include the <code>--instance_type</code> flag in the <code>eb create</code> command (<a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb3-create.html#eb3-createoptions\" rel=\"nofollow noreferrer\">https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb3-create.html#eb3-createoptions</a>):</p>\n<pre class=\"lang-bash prettyprint-override\"><code>eb create --instance_type t4g.small [...]\n</code></pre>\n<p>Now since your ebextensions has no reference to the instance type/size, when you deploy, the original option won't get overridden. You can change the instance type within the running environment through the web console.</p>\n", "OwnerUserId": "1231466", "LastActivityDate": "2023-12-17T05:15:15.410", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "137440690", "PostId": "77673388", "Score": "0", "Text": "This helps in the case you are creating stuff with the CLI. Not when you have a running env and try to update the IAC and deploy -- right?", "CreationDate": "2024-02-08T10:22:20.433", "UserId": "797369", "filtered-sentences": []}, {"Id": "137450110", "PostId": "77673388", "Score": "0", "Text": "Yes, I create the environment with the CLI and then I can update the instance type in the web console.", "CreationDate": "2024-02-09T04:36:19.790", "UserId": "1231466", "filtered-sentences": [{"source": "Text", "text": "Yes, I create the environment with the CLI and then I can update the instance type in the web console.", "keywords": ["instance"]}]}], "history": [{"Id": "301337653", "PostHistoryTypeId": "2", "PostId": "77673388", "RevisionGUID": "518b8e82-9af8-4a3c-b50d-72440760d631", "CreationDate": "2023-12-17T05:15:15.410", "UserId": "1231466", "Text": "I know this is an old question, but for anyone else searching, instead of trying to dynamically or conditionally set the instance type in an ebextensions config file, you can just entirely omit that config option and instead include the `--instance_type` flag in the `eb create` command (https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb3-create.html#eb3-createoptions):\r\n\r\n```bash\r\neb create --instance_type t4g.small [...]\r\n```\r\n\r\nNow since your ebextensions has no reference to the instance type/size, when you deploy, the original option won't get overridden. You can change the instance type within the running environment through the web console.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I know this is an old question, but for anyone else searching, instead of trying to dynamically or conditionally set the instance type in an ebextensions config file, you can just entirely omit that config option and instead include the `--instance_type` flag in the `eb create` command (https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb3-create.html#eb3-createoptions): ```bash eb create --instance_type t4g.small [...] ``` Now since your ebextensions has no reference to the instance type/size, when you deploy, the original option won't get overridden. ", "keywords": ["instance"]}, {"source": "Text", "text": "You can change the instance type within the running environment through the web console.", "keywords": ["instance", "change"]}]}], "filtered-sentences": [{"source": "Body", "text": "I know this is an old question, but for anyone else searching, instead of trying to dynamically or conditionally set the instance type in an ebextensions config file, you can just entirely omit that config option and instead include the --instance_type flag in the eb create command (https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb3-create.html#eb3-createoptions): ", "keywords": ["instance"]}, {"source": "Body", "text": "Now since your ebextensions has no reference to the instance type/size, when you deploy, the original option won't get overridden. ", "keywords": ["instance"]}, {"source": "Body", "text": "You can change the instance type within the running environment through the web console.", "keywords": ["instance", "change"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Title", "text": "Dynamically set the EC2 Instance Type per Environment using ebextensions", "keywords": ["instance"]}, {"source": "Body", "text": "I want to create a EC2 instance type t3.medium on all environments and m5.large on production. ", "keywords": ["instance"]}]}
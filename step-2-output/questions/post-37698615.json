{"Id": "37698615", "PostTypeId": "1", "CreationDate": "2016-06-08T09:31:55.560", "Score": "0", "ViewCount": "921", "Body": "<p>I want to setup my infrastructure with cloud formation. As I understood this, there are two ways to install packages.</p>\n\n<p>Option 1) With packages e.g.</p>\n\n<pre><code>       \"packages\": {\n          \"apt-get\": {\n            \"epel-release\": [],\n            \"gcc-c++\": [],\n            \"make\": [],\n            \"git\": []\n          }\n        }\n</code></pre>\n\n<p>Option 2) With a Wait Condition </p>\n\n<pre><code>\"UserData\": {\n  \"Fn::Base64\": {\n    \"Fn::Join\": [\n      \"\",\n      [\n        \"#!/bin/bash -ex\\n\",\n        \"apt-get update -y aws-cfn-bootstrap\\n\",\n        \"apt-get install -y aws-cli\\n\",\n        ...\n</code></pre>\n\n<p>Now my wait conditions times out when installing the packages. I read so far, that there are three options:</p>\n\n<p>Debug 1) Sending an error, when the installation fails</p>\n\n<pre><code>\"npm install pm2 -g || error_exit 'Failed to install pm2.'\\n\",\n</code></pre>\n\n<p>Debug 2) Sending positive signals after successful steps:</p>\n\n<pre><code>\"/opt/aws/bin/cfn-signal -e 0 -r \\\"AWS installed node &amp; npm.\\\" '\",\n</code></pre>\n\n<p>Debug 3) Checking out the logs\n<a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html\" rel=\"nofollow\">http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html</a></p>\n\n<h1>Questions</h1>\n\n<p>Question 1) \nI don't see any of the failure messages mentioned in Debug 1, how can I rewrite the template, that these messages are correctly shown in the Events.</p>\n\n<p>Question 2)\nMaybe it is because it already fails on the first step. But can I see/make it visible, which substeps have been passed?</p>\n\n<p>Question 3)\nI installed <code>aws</code> on my Mac &amp; run <code>aws configure</code> for my root account. How can I access the logs from there. Because the EC2 instance is not running yet, I can't just ssh to it.</p>\n\n<h1>Full template:</h1>\n\n<pre><code>    {\n  \"Description\": \"Create instances ready for CodeDeploy: Create up to 3 Amazon EC2 instances with an associated instance profile and install the AWS CodeDeploy Agent. **WARNING** This template creates one or more Amazon EC2 instances. You will be billed for the AWS resources used if you create a stack from this template. Copyright [2012-2014] Amazon.com, Inc. or its affiliates. All Rights Reserved. Licensed under the Apache License, Version 2.0 (the \\\"License\\\"). You may not use this file except in compliance with the License. A copy of the License is located at http://aws.amazon.com/apache2.0/ or in the \\\"license\\\" file accompanying this file. This file is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\",\n  \"AWSTemplateFormatVersion\": \"2010-09-09\",\n  \"Parameters\": {\n    \"TagKey\": {\n      \"Description\": \"The EC2 tag key that identifies this as a target for deployments.\",\n      \"Type\": \"String\",\n      \"Default\": \"Name\",\n      \"AllowedPattern\": \"[\\\\x20-\\\\x7E]*\",\n      \"ConstraintDescription\": \"Can contain only ASCII characters.\"\n    },\n    \"TagValue\": {\n      \"Description\": \"The EC2 tag value that identifies this as a target for deployments.\",\n      \"Type\": \"String\",\n      \"Default\": \"golden-cow\",\n      \"AllowedPattern\": \"[\\\\x20-\\\\x7E]*\",\n      \"ConstraintDescription\": \"Can contain only ASCII characters.\"\n    },\n    \"KeyPairName\": {\n      \"Description\": \"Name of an existing Amazon EC2 key pair to enable SSH or RDP access to the instances.\",\n      \"Type\": \"String\",\n      \"MinLength\": \"1\",\n      \"MaxLength\": \"255\",\n      \"AllowedPattern\": \"[\\\\x20-\\\\x7E]*\",\n      \"Default\": \"AWS Golden Cow\",\n      \"ConstraintDescription\": \"KeyPairName is a required Field and can contain only ASCII characters.\"\n    },\n    \"InstanceType\": {\n      \"Description\": \"Amazon EC2 instance type.\",\n      \"Type\": \"String\",\n      \"Default\": \"t2.micro\",\n      \"ConstraintDescription\": \"Must be a valid Amazon EC2 instance type.\"\n    },\n    \"InstanceCount\": {\n      \"Description\": \"Number of Amazon EC2 instances (Must be a number between 1 and 1).\",\n      \"Type\": \"Number\",\n      \"Default\": \"1\",\n      \"ConstraintDescription\": \"Must be a number between 1 and 3.\",\n      \"MinValue\": \"1\",\n      \"MaxValue\": \"1\"\n    },\n    \"OperatingSystem\": {\n      \"Description\": \"Amazon EC2 operating system type (Linux or Windows).\",\n      \"Type\": \"String\",\n      \"Default\": \"Linux\",\n      \"ConstraintDescription\": \"Linux\",\n      \"AllowedValues\": [\n        \"Linux\"\n      ]\n    },\n    \"SSHLocation\": {\n      \"Description\": \"The IP address range that can be used to connect using SSH or RDP to the Amazon EC2 instances.\",\n      \"Type\": \"String\",\n      \"MinLength\": \"9\",\n      \"MaxLength\": \"18\",\n      \"Default\": \"0.0.0.0/0\",\n      \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\",\n      \"ConstraintDescription\": \"Must be a valid IP CIDR range of the form x.x.x.x/x.\"\n    }\n  },\n  \"Mappings\": {\n    \"RegionOS2AMI\": {\n      \"eu-central-1\": {\n        \"Linux\": \"ami-87564feb\"\n      }\n    },\n    \"OS2SSHPort\": {\n      \"Linux\": {\n        \"SSHPort\": \"22\"\n      }\n    }\n  },\n  \"Conditions\": {\n    \"LaunchInstance1\": {\n      \"Fn::Equals\": [\n        \"1\",\n        {\n          \"Ref\": \"InstanceCount\"\n        }\n      ]\n    }\n  },\n  \"Resources\": {\n    \"LinuxEC2Instance\": {\n      \"Type\": \"AWS::EC2::Instance\",\n      \"Condition\": \"LaunchInstance1\",\n      \"Metadata\": {\n        \"AWS::CloudFormation::Init\": {\n          \"config\": {\n            \"services\": {\n              \"sysvint\": {\n                \"codedeploy-agent\": {\n                  \"enabled\": \"true\",\n                  \"ensureRunning\": \"true\"\n                }\n              }\n            },\n            \"packages\": {\n              \"apt-get\": {\n                \"epel-release\": [],\n                \"gcc-c++\": [],\n                \"make\": [],\n                \"git\": []\n              }\n            }\n          }\n        },\n        \"AWS::CloudFormation::Designer\": {\n          \"id\": \"df094acb-0425-4ae5-bfc1-18c94c3d90c1\"\n        }\n      },\n      \"Properties\": {\n        \"ImageId\": {\n          \"Fn::FindInMap\": [\n            \"RegionOS2AMI\",\n            {\n              \"Ref\": \"AWS::Region\"\n            },\n            {\n              \"Ref\": \"OperatingSystem\"\n            }\n          ]\n        },\n        \"InstanceType\": {\n          \"Ref\": \"InstanceType\"\n        },\n        \"SecurityGroups\": [\n          {\n            \"Ref\": \"SecurityGroup\"\n          }\n        ],\n        \"UserData\": {\n          \"Fn::Base64\": {\n            \"Fn::Join\": [\n              \"\",\n              [\n                \"#!/bin/bash -ex\\n\",\n                \"apt-get update -y aws-cfn-bootstrap\\n\",\n                \"apt-get install -y aws-cli\\n\",\n                \"/opt/aws/bin/cfn-signal -e 0 -r \\\"AWS installed CLI.\\\" '\",\n                \"# Helper function.\\n\",\n                \"function error_exit\\n\",\n                \"{\\n\",\n                \"  /opt/aws/bin/cfn-signal -e 1 -r \\\"$1\\\" '\",\n                {\n                  \"Ref\": \"WaitHandle\"\n                },\n                \"'\\n\",\n                \"  exit 1\\n\",\n                \"}\\n\",\n                \"#Install nodejs, npm\\n\",\n                \"curl -sL https://deb.nodesource.com/setup_6.x\\n\",\n                \"apt-get install -y nodejs npm || error_exit 'Failed to install nodejs.'\\n\",\n                \"npm install pm2 -g || error_exit 'Failed to install pm2.'\\n\",\n                \"/opt/aws/bin/cfn-signal -e 0 -r \\\"AWS installed node &amp; npm.\\\" '\",\n                \"# Install the AWS CodeDeploy Agent.\\n\",\n                \"cd /home/ec2-user/\\n\",\n                \"aws s3 cp 's3://aws-codedeploy-eu-central-1/latest/codedeploy-agent_all.deb' . || error_exit 'Failed to download AWS CodeDeploy Agent.'\\n\",\n                \"apt-get -y install codedeploy-agent_all.deb || error_exit 'Failed to install AWS CodeDeploy Agent.' \\n\",\n                \"/opt/aws/bin/cfn-init -s \",\n                {\n                  \"Ref\": \"AWS::StackId\"\n                },\n                \" -r LinuxEC2Instance --region \",\n                {\n                  \"Ref\": \"AWS::Region\"\n                },\n                \" || error_exit 'Failed to run cfn-init.'\\n\",\n                \"# All is well, so signal success.\\n\",\n                \"/opt/aws/bin/cfn-signal -e 0 -r \\\"AWS CodeDeploy Agent setup complete.\\\" '\",\n                {\n                  \"Ref\": \"WaitHandle\"\n                },\n                \"'\\n\"\n              ]\n            ]\n          }\n        },\n        \"KeyName\": {\n          \"Ref\": \"KeyPairName\"\n        },\n        \"Tags\": [\n          {\n            \"Key\": {\n              \"Ref\": \"TagKey\"\n            },\n            \"Value\": {\n              \"Ref\": \"TagValue\"\n            }\n          }\n        ],\n        \"IamInstanceProfile\": {\n          \"Ref\": \"InstanceRoleInstanceProfile\"\n        }\n      }\n    },\n    \"WaitHandle\": {\n      \"Type\": \"AWS::CloudFormation::WaitConditionHandle\",\n      \"Metadata\": {\n        \"AWS::CloudFormation::Designer\": {\n          \"id\": \"761ddc9a-7c3b-41ca-9fa1-21429046b271\"\n        }\n      }\n    },\n    \"WaitCondition\": {\n      \"Type\": \"AWS::CloudFormation::WaitCondition\",\n      \"Properties\": {\n        \"Count\": 3,\n        \"Handle\": {\n          \"Ref\": \"WaitHandle\"\n        },\n        \"Timeout\": \"900\"\n      },\n      \"Metadata\": {\n        \"AWS::CloudFormation::Designer\": {\n          \"id\": \"a2c91b03-2c8c-4bd5-9c44-efdb89cf5375\"\n        }\n      }\n    },\n    \"SecurityGroup\": {\n      \"Type\": \"AWS::EC2::SecurityGroup\",\n      \"Properties\": {\n        \"GroupDescription\": \"Enable HTTP access via port 80 and SSH access.\",\n        \"SecurityGroupIngress\": [\n          {\n            \"IpProtocol\": \"tcp\",\n            \"FromPort\": \"80\",\n            \"ToPort\": \"80\",\n            \"CidrIp\": \"0.0.0.0/0\"\n          },\n          {\n            \"IpProtocol\": \"tcp\",\n            \"FromPort\": {\n              \"Fn::FindInMap\": [\n                \"OS2SSHPort\",\n                {\n                  \"Ref\": \"OperatingSystem\"\n                },\n                \"SSHPort\"\n              ]\n            },\n            \"ToPort\": {\n              \"Fn::FindInMap\": [\n                \"OS2SSHPort\",\n                {\n                  \"Ref\": \"OperatingSystem\"\n                },\n                \"SSHPort\"\n              ]\n            },\n            \"CidrIp\": {\n              \"Ref\": \"SSHLocation\"\n            }\n          }\n        ]\n      },\n      \"Metadata\": {\n        \"AWS::CloudFormation::Designer\": {\n          \"id\": \"841b5a35-52f2-4887-bd4b-7b9a7dd90dc3\"\n        }\n      }\n    },\n    \"CodeDeployTrustRole\": {\n      \"Type\": \"AWS::IAM::Role\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Sid\": \"1\",\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"codedeploy.us-east-1.amazonaws.com\",\n                  \"codedeploy.us-west-2.amazonaws.com\",\n                  \"codedeploy.eu-west-1.amazonaws.com\",\n                  \"codedeploy.eu-central-1.amazonaws.com\"\n                ]\n              },\n              \"Action\": \"sts:AssumeRole\"\n            }\n          ]\n        },\n        \"Path\": \"/\"\n      },\n      \"Metadata\": {\n        \"AWS::CloudFormation::Designer\": {\n          \"id\": \"47a08921-1b89-46f7-8874-7d41e8e3595f\"\n        }\n      }\n    },\n    \"CodeDeployRolePolicies\": {\n      \"Type\": \"AWS::IAM::Policy\",\n      \"Properties\": {\n        \"PolicyName\": \"CodeDeployPolicy\",\n        \"PolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Effect\": \"Allow\",\n              \"Resource\": [\n                \"*\"\n              ],\n              \"Action\": [\n                \"ec2:Describe*\"\n              ]\n            },\n            {\n              \"Effect\": \"Allow\",\n              \"Resource\": [\n                \"*\"\n              ],\n              \"Action\": [\n                \"autoscaling:CompleteLifecycleAction\",\n                \"autoscaling:DeleteLifecycleHook\",\n                \"autoscaling:DescribeLifecycleHooks\",\n                \"autoscaling:DescribeAutoScalingGroups\",\n                \"autoscaling:PutLifecycleHook\",\n                \"autoscaling:RecordLifecycleActionHeartbeat\"\n              ]\n            }\n          ]\n        },\n        \"Roles\": [\n          {\n            \"Ref\": \"CodeDeployTrustRole\"\n          }\n        ]\n      },\n      \"Metadata\": {\n        \"AWS::CloudFormation::Designer\": {\n          \"id\": \"6b960024-669a-49c2-be54-ac96c32be1f7\"\n        }\n      }\n    },\n    \"InstanceRole\": {\n      \"Type\": \"AWS::IAM::Role\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"ec2.amazonaws.com\"\n                ]\n              },\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ]\n            }\n          ]\n        },\n        \"Path\": \"/\"\n      },\n      \"Metadata\": {\n        \"AWS::CloudFormation::Designer\": {\n          \"id\": \"7d432a6d-0c26-4570-8043-36dab502b408\"\n        }\n      }\n    },\n    \"InstanceRolePolicies\": {\n      \"Type\": \"AWS::IAM::Policy\",\n      \"Properties\": {\n        \"PolicyName\": \"InstanceRole\",\n        \"PolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Effect\": \"Allow\",\n              \"Action\": [\n                \"autoscaling:Describe*\",\n                \"cloudformation:Describe*\",\n                \"cloudformation:GetTemplate\",\n                \"s3:Get*\"\n              ],\n              \"Resource\": \"*\"\n            }\n          ]\n        },\n        \"Roles\": [\n          {\n            \"Ref\": \"InstanceRole\"\n          }\n        ]\n      },\n      \"Metadata\": {\n        \"AWS::CloudFormation::Designer\": {\n          \"id\": \"729a7797-a918-420b-a063-eed7adcda437\"\n        }\n      }\n    },\n    \"InstanceRoleInstanceProfile\": {\n      \"Type\": \"AWS::IAM::InstanceProfile\",\n      \"Properties\": {\n        \"Path\": \"/\",\n        \"Roles\": [\n          {\n            \"Ref\": \"InstanceRole\"\n          }\n        ]\n      },\n      \"Metadata\": {\n        \"AWS::CloudFormation::Designer\": {\n          \"id\": \"8088e2e8-777e-4b49-9fe7-a36c8d76f6ee\"\n        }\n      }\n    }\n  },\n  \"Outputs\": {\n    \"CodeDeployTrustRoleARN\": {\n      \"Value\": {\n        \"Fn::GetAtt\": [\n          \"CodeDeployTrustRole\",\n          \"Arn\"\n        ]\n      }\n    }\n  },\n  \"Metadata\": {\n    \"AWS::CloudFormation::Designer\": {\n      \"7d432a6d-0c26-4570-8043-36dab502b408\": {\n        \"size\": {\n          \"width\": 60,\n          \"height\": 60\n        },\n        \"position\": {\n          \"x\": 60,\n          \"y\": 90\n        },\n        \"z\": 1,\n        \"embeds\": []\n      },\n      \"8088e2e8-777e-4b49-9fe7-a36c8d76f6ee\": {\n        \"size\": {\n          \"width\": 60,\n          \"height\": 60\n        },\n        \"position\": {\n          \"x\": 180,\n          \"y\": 90\n        },\n        \"z\": 1,\n        \"embeds\": [],\n        \"isassociatedwith\": [\n          \"7d432a6d-0c26-4570-8043-36dab502b408\"\n        ]\n      },\n      \"729a7797-a918-420b-a063-eed7adcda437\": {\n        \"size\": {\n          \"width\": 60,\n          \"height\": 60\n        },\n        \"position\": {\n          \"x\": 60,\n          \"y\": 210\n        },\n        \"z\": 1,\n        \"embeds\": [],\n        \"isassociatedwith\": [\n          \"7d432a6d-0c26-4570-8043-36dab502b408\"\n        ]\n      },\n      \"47a08921-1b89-46f7-8874-7d41e8e3595f\": {\n        \"size\": {\n          \"width\": 60,\n          \"height\": 60\n        },\n        \"position\": {\n          \"x\": 180,\n          \"y\": 210\n        },\n        \"z\": 1,\n        \"embeds\": []\n      },\n      \"6b960024-669a-49c2-be54-ac96c32be1f7\": {\n        \"size\": {\n          \"width\": 60,\n          \"height\": 60\n        },\n        \"position\": {\n          \"x\": 300,\n          \"y\": 90\n        },\n        \"z\": 1,\n        \"embeds\": [],\n        \"isassociatedwith\": [\n          \"47a08921-1b89-46f7-8874-7d41e8e3595f\"\n        ]\n      },\n      \"841b5a35-52f2-4887-bd4b-7b9a7dd90dc3\": {\n        \"size\": {\n          \"width\": 60,\n          \"height\": 60\n        },\n        \"position\": {\n          \"x\": 300,\n          \"y\": 210\n        },\n        \"z\": 1,\n        \"embeds\": []\n      },\n      \"761ddc9a-7c3b-41ca-9fa1-21429046b271\": {\n        \"size\": {\n          \"width\": 60,\n          \"height\": 60\n        },\n        \"position\": {\n          \"x\": 60,\n          \"y\": 330\n        },\n        \"z\": 1,\n        \"embeds\": []\n      },\n      \"044d2ef7-e348-4e63-8d56-40c4c22cf6a3\": {\n        \"size\": {\n          \"width\": 60,\n          \"height\": 60\n        },\n        \"position\": {\n          \"x\": 180,\n          \"y\": 330\n        },\n        \"z\": 1,\n        \"embeds\": [],\n        \"ismemberof\": [\n          \"841b5a35-52f2-4887-bd4b-7b9a7dd90dc3\"\n        ],\n        \"isrelatedto\": [\n          \"761ddc9a-7c3b-41ca-9fa1-21429046b271\",\n          \"8088e2e8-777e-4b49-9fe7-a36c8d76f6ee\"\n        ]\n      },\n      \"90b878c4-8d68-4e73-a523-d0abc821a603\": {\n        \"size\": {\n          \"width\": 60,\n          \"height\": 60\n        },\n        \"position\": {\n          \"x\": 300,\n          \"y\": 330\n        },\n        \"z\": 1,\n        \"embeds\": [],\n        \"ismemberof\": [\n          \"841b5a35-52f2-4887-bd4b-7b9a7dd90dc3\"\n        ],\n        \"isrelatedto\": [\n          \"761ddc9a-7c3b-41ca-9fa1-21429046b271\",\n          \"8088e2e8-777e-4b49-9fe7-a36c8d76f6ee\"\n        ]\n      },\n      \"a2c91b03-2c8c-4bd5-9c44-efdb89cf5375\": {\n        \"size\": {\n          \"width\": 60,\n          \"height\": 60\n        },\n        \"position\": {\n          \"x\": 420,\n          \"y\": 90\n        },\n        \"z\": 1,\n        \"embeds\": [],\n        \"references\": [\n          \"761ddc9a-7c3b-41ca-9fa1-21429046b271\"\n        ]\n      },\n      \"df094acb-0425-4ae5-bfc1-18c94c3d90c1\": {\n        \"size\": {\n          \"width\": 60,\n          \"height\": 60\n        },\n        \"position\": {\n          \"x\": 420,\n          \"y\": 210\n        },\n        \"z\": 1,\n        \"embeds\": [],\n        \"ismemberof\": [\n          \"841b5a35-52f2-4887-bd4b-7b9a7dd90dc3\"\n        ],\n        \"isrelatedto\": [\n          \"761ddc9a-7c3b-41ca-9fa1-21429046b271\",\n          \"8088e2e8-777e-4b49-9fe7-a36c8d76f6ee\"\n        ]\n      }\n    }\n  }\n}\n</code></pre>\n", "OwnerUserId": "2876990", "LastActivityDate": "2016-09-14T02:44:32.700", "Title": "Correct Way to Install & Debug Installation of Packages With AWS Cloud Formation", "Tags": "|amazon-web-services|amazon-ec2|aws-cloudformation|", "AnswerCount": "1", "CommentCount": "5", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "62873909", "PostId": "37698615", "Score": "0", "Text": "Are you sure you can't ssh to the instance? Did you deactivate the rollback on failure so your instance isn't destroyed when the CF stack creation failed?", "CreationDate": "2016-06-08T10:20:28.410", "UserId": "2339082", "filtered-sentences": [{"source": "Text", "text": "Are you sure you can't ssh to the instance? ", "keywords": ["instance"]}, {"source": "Text", "text": "Did you deactivate the rollback on failure so your instance isn't destroyed when the CF stack creation failed?", "keywords": ["instance"]}]}, {"Id": "62874812", "PostId": "37698615", "Score": "0", "Text": "I didn't know that this is possible. Do I have to add `DisableRollback: false` after `\"LinuxEC2Instance\": {` or right in the beginning e.g. after `\"Parameters\": {`", "CreationDate": "2016-06-08T10:44:44.177", "UserId": "2876990", "filtered-sentences": []}, {"Id": "62875112", "PostId": "37698615", "Score": "0", "Text": "It's not in the CloudFormation template. It's an option when you create your stack. If you use the AWS Console, it's on the \"Advanced\" Options (3rd screen). If you use the AWS CLI, there is an option: http://docs.aws.amazon.com/cli/latest/reference/cloudformation/create-stack.html", "CreationDate": "2016-06-08T10:52:51.370", "UserId": "2339082", "filtered-sentences": []}, {"Id": "62892467", "PostId": "37698615", "Score": "0", "Text": "Thx this helped a lot. Do you know if I can integrate it Q1 & Q2? But so far I'm able to log in, and use `tail -f -n 200 /var/log/cloud-init-output.log`, test single command sin the command line and redesign the whole script and test run it with: `/var/lib/cloud/instance/scripts/part-001`", "CreationDate": "2016-06-08T17:35:37.733", "UserId": "2876990", "filtered-sentences": [{"source": "Text", "text": "But so far I'm able to log in, and use `tail -f -n 200 /var/log/cloud-init-output.log`, test single command sin the command line and redesign the whole script and test run it with: `/var/lib/cloud/instance/scripts/part-001`", "keywords": ["instance", "test"]}]}, {"Id": "62900556", "PostId": "37698615", "Score": "0", "Text": "No, I don't know if Q1 & Q2 are possible.", "CreationDate": "2016-06-08T21:46:29.030", "UserId": "2339082", "filtered-sentences": []}], "history": [{"Id": "119943855", "PostHistoryTypeId": "2", "PostId": "37698615", "RevisionGUID": "52bc9fcd-abba-46ea-8731-0e28665be2db", "CreationDate": "2016-06-08T09:31:55.560", "UserId": "2876990", "Text": "I want to setup my infrastructure with cloud formation. As I understood this, there are two ways to install packages.\r\n\r\nOption 1) With packages e.g.\r\n\r\n           \"packages\": {\r\n              \"apt-get\": {\r\n                \"epel-release\": [],\r\n                \"gcc-c++\": [],\r\n                \"make\": [],\r\n                \"git\": []\r\n              }\r\n            }\r\n\r\nOption 2) With a Wait Condition \r\n\r\n    \"UserData\": {\r\n      \"Fn::Base64\": {\r\n        \"Fn::Join\": [\r\n          \"\",\r\n          [\r\n            \"#!/bin/bash -ex\\n\",\r\n            \"apt-get update -y aws-cfn-bootstrap\\n\",\r\n            \"apt-get install -y aws-cli\\n\",\r\n            ...\r\n\r\nNow my wait conditions times out when installing the packages. I read so far, that there are three options:\r\n\r\nDebug 1) Sending an error, when the installation fails\r\n\r\n    \"npm install pm2 -g || error_exit 'Failed to install pm2.'\\n\",\r\nDebug 2) Sending positive signals after successful steps:\r\n\r\n    \"/opt/aws/bin/cfn-signal -e 0 -r \\\"AWS installed node & npm.\\\" '\",\r\nDebug 3) Checking out the logs\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html\r\n\r\n# Questions\r\nQuestion 1) \r\nI don't see any of the failure messages mentioned in Debug 1, how can I rewrite the template, that these messages are correctly shown in the Events.\r\n\r\nQuestion 2)\r\nMaybe it is because it already fails on the first step. But can I see/make it visible, which substeps have been passed?\r\n\r\nQuestion 3)\r\nI installed `aws` on my Mac & run `aws configure` for my root account. How can I access the logs from there. Because the EC2 instance is not running yet, I can't just ssh to it.\r\n\r\n# Full template:\r\n\r\n        {\r\n      \"Description\": \"Create instances ready for CodeDeploy: Create up to 3 Amazon EC2 instances with an associated instance profile and install the AWS CodeDeploy Agent. **WARNING** This template creates one or more Amazon EC2 instances. You will be billed for the AWS resources used if you create a stack from this template. Copyright [2012-2014] Amazon.com, Inc. or its affiliates. All Rights Reserved. Licensed under the Apache License, Version 2.0 (the \\\"License\\\"). You may not use this file except in compliance with the License. A copy of the License is located at http://aws.amazon.com/apache2.0/ or in the \\\"license\\\" file accompanying this file. This file is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\",\r\n      \"AWSTemplateFormatVersion\": \"2010-09-09\",\r\n      \"Parameters\": {\r\n        \"TagKey\": {\r\n          \"Description\": \"The EC2 tag key that identifies this as a target for deployments.\",\r\n          \"Type\": \"String\",\r\n          \"Default\": \"Name\",\r\n          \"AllowedPattern\": \"[\\\\x20-\\\\x7E]*\",\r\n          \"ConstraintDescription\": \"Can contain only ASCII characters.\"\r\n        },\r\n        \"TagValue\": {\r\n          \"Description\": \"The EC2 tag value that identifies this as a target for deployments.\",\r\n          \"Type\": \"String\",\r\n          \"Default\": \"golden-cow\",\r\n          \"AllowedPattern\": \"[\\\\x20-\\\\x7E]*\",\r\n          \"ConstraintDescription\": \"Can contain only ASCII characters.\"\r\n        },\r\n        \"KeyPairName\": {\r\n          \"Description\": \"Name of an existing Amazon EC2 key pair to enable SSH or RDP access to the instances.\",\r\n          \"Type\": \"String\",\r\n          \"MinLength\": \"1\",\r\n          \"MaxLength\": \"255\",\r\n          \"AllowedPattern\": \"[\\\\x20-\\\\x7E]*\",\r\n          \"Default\": \"AWS Golden Cow\",\r\n          \"ConstraintDescription\": \"KeyPairName is a required Field and can contain only ASCII characters.\"\r\n        },\r\n        \"InstanceType\": {\r\n          \"Description\": \"Amazon EC2 instance type.\",\r\n          \"Type\": \"String\",\r\n          \"Default\": \"t2.micro\",\r\n          \"ConstraintDescription\": \"Must be a valid Amazon EC2 instance type.\"\r\n        },\r\n        \"InstanceCount\": {\r\n          \"Description\": \"Number of Amazon EC2 instances (Must be a number between 1 and 1).\",\r\n          \"Type\": \"Number\",\r\n          \"Default\": \"1\",\r\n          \"ConstraintDescription\": \"Must be a number between 1 and 3.\",\r\n          \"MinValue\": \"1\",\r\n          \"MaxValue\": \"1\"\r\n        },\r\n        \"OperatingSystem\": {\r\n          \"Description\": \"Amazon EC2 operating system type (Linux or Windows).\",\r\n          \"Type\": \"String\",\r\n          \"Default\": \"Linux\",\r\n          \"ConstraintDescription\": \"Linux\",\r\n          \"AllowedValues\": [\r\n            \"Linux\"\r\n          ]\r\n        },\r\n        \"SSHLocation\": {\r\n          \"Description\": \"The IP address range that can be used to connect using SSH or RDP to the Amazon EC2 instances.\",\r\n          \"Type\": \"String\",\r\n          \"MinLength\": \"9\",\r\n          \"MaxLength\": \"18\",\r\n          \"Default\": \"0.0.0.0/0\",\r\n          \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\",\r\n          \"ConstraintDescription\": \"Must be a valid IP CIDR range of the form x.x.x.x/x.\"\r\n        }\r\n      },\r\n      \"Mappings\": {\r\n        \"RegionOS2AMI\": {\r\n          \"eu-central-1\": {\r\n            \"Linux\": \"ami-87564feb\"\r\n          }\r\n        },\r\n        \"OS2SSHPort\": {\r\n          \"Linux\": {\r\n            \"SSHPort\": \"22\"\r\n          }\r\n        }\r\n      },\r\n      \"Conditions\": {\r\n        \"LaunchInstance1\": {\r\n          \"Fn::Equals\": [\r\n            \"1\",\r\n            {\r\n              \"Ref\": \"InstanceCount\"\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      \"Resources\": {\r\n        \"LinuxEC2Instance\": {\r\n          \"Type\": \"AWS::EC2::Instance\",\r\n          \"Condition\": \"LaunchInstance1\",\r\n          \"Metadata\": {\r\n            \"AWS::CloudFormation::Init\": {\r\n              \"config\": {\r\n                \"services\": {\r\n                  \"sysvint\": {\r\n                    \"codedeploy-agent\": {\r\n                      \"enabled\": \"true\",\r\n                      \"ensureRunning\": \"true\"\r\n                    }\r\n                  }\r\n                },\r\n                \"packages\": {\r\n                  \"apt-get\": {\r\n                    \"epel-release\": [],\r\n                    \"gcc-c++\": [],\r\n                    \"make\": [],\r\n                    \"git\": []\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            \"AWS::CloudFormation::Designer\": {\r\n              \"id\": \"df094acb-0425-4ae5-bfc1-18c94c3d90c1\"\r\n            }\r\n          },\r\n          \"Properties\": {\r\n            \"ImageId\": {\r\n              \"Fn::FindInMap\": [\r\n                \"RegionOS2AMI\",\r\n                {\r\n                  \"Ref\": \"AWS::Region\"\r\n                },\r\n                {\r\n                  \"Ref\": \"OperatingSystem\"\r\n                }\r\n              ]\r\n            },\r\n            \"InstanceType\": {\r\n              \"Ref\": \"InstanceType\"\r\n            },\r\n            \"SecurityGroups\": [\r\n              {\r\n                \"Ref\": \"SecurityGroup\"\r\n              }\r\n            ],\r\n            \"UserData\": {\r\n              \"Fn::Base64\": {\r\n                \"Fn::Join\": [\r\n                  \"\",\r\n                  [\r\n                    \"#!/bin/bash -ex\\n\",\r\n                    \"apt-get update -y aws-cfn-bootstrap\\n\",\r\n                    \"apt-get install -y aws-cli\\n\",\r\n                    \"/opt/aws/bin/cfn-signal -e 0 -r \\\"AWS installed CLI.\\\" '\",\r\n                    \"# Helper function.\\n\",\r\n                    \"function error_exit\\n\",\r\n                    \"{\\n\",\r\n                    \"  /opt/aws/bin/cfn-signal -e 1 -r \\\"$1\\\" '\",\r\n                    {\r\n                      \"Ref\": \"WaitHandle\"\r\n                    },\r\n                    \"'\\n\",\r\n                    \"  exit 1\\n\",\r\n                    \"}\\n\",\r\n                    \"#Install nodejs, npm\\n\",\r\n                    \"curl -sL https://deb.nodesource.com/setup_6.x\\n\",\r\n                    \"apt-get install -y nodejs npm || error_exit 'Failed to install nodejs.'\\n\",\r\n                    \"npm install pm2 -g || error_exit 'Failed to install pm2.'\\n\",\r\n                    \"/opt/aws/bin/cfn-signal -e 0 -r \\\"AWS installed node & npm.\\\" '\",\r\n                    \"# Install the AWS CodeDeploy Agent.\\n\",\r\n                    \"cd /home/ec2-user/\\n\",\r\n                    \"aws s3 cp 's3://aws-codedeploy-eu-central-1/latest/codedeploy-agent_all.deb' . || error_exit 'Failed to download AWS CodeDeploy Agent.'\\n\",\r\n                    \"apt-get -y install codedeploy-agent_all.deb || error_exit 'Failed to install AWS CodeDeploy Agent.' \\n\",\r\n                    \"/opt/aws/bin/cfn-init -s \",\r\n                    {\r\n                      \"Ref\": \"AWS::StackId\"\r\n                    },\r\n                    \" -r LinuxEC2Instance --region \",\r\n                    {\r\n                      \"Ref\": \"AWS::Region\"\r\n                    },\r\n                    \" || error_exit 'Failed to run cfn-init.'\\n\",\r\n                    \"# All is well, so signal success.\\n\",\r\n                    \"/opt/aws/bin/cfn-signal -e 0 -r \\\"AWS CodeDeploy Agent setup complete.\\\" '\",\r\n                    {\r\n                      \"Ref\": \"WaitHandle\"\r\n                    },\r\n                    \"'\\n\"\r\n                  ]\r\n                ]\r\n              }\r\n            },\r\n            \"KeyName\": {\r\n              \"Ref\": \"KeyPairName\"\r\n            },\r\n            \"Tags\": [\r\n              {\r\n                \"Key\": {\r\n                  \"Ref\": \"TagKey\"\r\n                },\r\n                \"Value\": {\r\n                  \"Ref\": \"TagValue\"\r\n                }\r\n              }\r\n            ],\r\n            \"IamInstanceProfile\": {\r\n              \"Ref\": \"InstanceRoleInstanceProfile\"\r\n            }\r\n          }\r\n        },\r\n        \"WaitHandle\": {\r\n          \"Type\": \"AWS::CloudFormation::WaitConditionHandle\",\r\n          \"Metadata\": {\r\n            \"AWS::CloudFormation::Designer\": {\r\n              \"id\": \"761ddc9a-7c3b-41ca-9fa1-21429046b271\"\r\n            }\r\n          }\r\n        },\r\n        \"WaitCondition\": {\r\n          \"Type\": \"AWS::CloudFormation::WaitCondition\",\r\n          \"Properties\": {\r\n            \"Count\": 3,\r\n            \"Handle\": {\r\n              \"Ref\": \"WaitHandle\"\r\n            },\r\n            \"Timeout\": \"900\"\r\n          },\r\n          \"Metadata\": {\r\n            \"AWS::CloudFormation::Designer\": {\r\n              \"id\": \"a2c91b03-2c8c-4bd5-9c44-efdb89cf5375\"\r\n            }\r\n          }\r\n        },\r\n        \"SecurityGroup\": {\r\n          \"Type\": \"AWS::EC2::SecurityGroup\",\r\n          \"Properties\": {\r\n            \"GroupDescription\": \"Enable HTTP access via port 80 and SSH access.\",\r\n            \"SecurityGroupIngress\": [\r\n              {\r\n                \"IpProtocol\": \"tcp\",\r\n                \"FromPort\": \"80\",\r\n                \"ToPort\": \"80\",\r\n                \"CidrIp\": \"0.0.0.0/0\"\r\n              },\r\n              {\r\n                \"IpProtocol\": \"tcp\",\r\n                \"FromPort\": {\r\n                  \"Fn::FindInMap\": [\r\n                    \"OS2SSHPort\",\r\n                    {\r\n                      \"Ref\": \"OperatingSystem\"\r\n                    },\r\n                    \"SSHPort\"\r\n                  ]\r\n                },\r\n                \"ToPort\": {\r\n                  \"Fn::FindInMap\": [\r\n                    \"OS2SSHPort\",\r\n                    {\r\n                      \"Ref\": \"OperatingSystem\"\r\n                    },\r\n                    \"SSHPort\"\r\n                  ]\r\n                },\r\n                \"CidrIp\": {\r\n                  \"Ref\": \"SSHLocation\"\r\n                }\r\n              }\r\n            ]\r\n          },\r\n          \"Metadata\": {\r\n            \"AWS::CloudFormation::Designer\": {\r\n              \"id\": \"841b5a35-52f2-4887-bd4b-7b9a7dd90dc3\"\r\n            }\r\n          }\r\n        },\r\n        \"CodeDeployTrustRole\": {\r\n          \"Type\": \"AWS::IAM::Role\",\r\n          \"Properties\": {\r\n            \"AssumeRolePolicyDocument\": {\r\n              \"Statement\": [\r\n                {\r\n                  \"Sid\": \"1\",\r\n                  \"Effect\": \"Allow\",\r\n                  \"Principal\": {\r\n                    \"Service\": [\r\n                      \"codedeploy.us-east-1.amazonaws.com\",\r\n                      \"codedeploy.us-west-2.amazonaws.com\",\r\n                      \"codedeploy.eu-west-1.amazonaws.com\",\r\n                      \"codedeploy.eu-central-1.amazonaws.com\"\r\n                    ]\r\n                  },\r\n                  \"Action\": \"sts:AssumeRole\"\r\n                }\r\n              ]\r\n            },\r\n            \"Path\": \"/\"\r\n          },\r\n          \"Metadata\": {\r\n            \"AWS::CloudFormation::Designer\": {\r\n              \"id\": \"47a08921-1b89-46f7-8874-7d41e8e3595f\"\r\n            }\r\n          }\r\n        },\r\n        \"CodeDeployRolePolicies\": {\r\n          \"Type\": \"AWS::IAM::Policy\",\r\n          \"Properties\": {\r\n            \"PolicyName\": \"CodeDeployPolicy\",\r\n            \"PolicyDocument\": {\r\n              \"Statement\": [\r\n                {\r\n                  \"Effect\": \"Allow\",\r\n                  \"Resource\": [\r\n                    \"*\"\r\n                  ],\r\n                  \"Action\": [\r\n                    \"ec2:Describe*\"\r\n                  ]\r\n                },\r\n                {\r\n                  \"Effect\": \"Allow\",\r\n                  \"Resource\": [\r\n                    \"*\"\r\n                  ],\r\n                  \"Action\": [\r\n                    \"autoscaling:CompleteLifecycleAction\",\r\n                    \"autoscaling:DeleteLifecycleHook\",\r\n                    \"autoscaling:DescribeLifecycleHooks\",\r\n                    \"autoscaling:DescribeAutoScalingGroups\",\r\n                    \"autoscaling:PutLifecycleHook\",\r\n                    \"autoscaling:RecordLifecycleActionHeartbeat\"\r\n                  ]\r\n                }\r\n              ]\r\n            },\r\n            \"Roles\": [\r\n              {\r\n                \"Ref\": \"CodeDeployTrustRole\"\r\n              }\r\n            ]\r\n          },\r\n          \"Metadata\": {\r\n            \"AWS::CloudFormation::Designer\": {\r\n              \"id\": \"6b960024-669a-49c2-be54-ac96c32be1f7\"\r\n            }\r\n          }\r\n        },\r\n        \"InstanceRole\": {\r\n          \"Type\": \"AWS::IAM::Role\",\r\n          \"Properties\": {\r\n            \"AssumeRolePolicyDocument\": {\r\n              \"Statement\": [\r\n                {\r\n                  \"Effect\": \"Allow\",\r\n                  \"Principal\": {\r\n                    \"Service\": [\r\n                      \"ec2.amazonaws.com\"\r\n                    ]\r\n                  },\r\n                  \"Action\": [\r\n                    \"sts:AssumeRole\"\r\n                  ]\r\n                }\r\n              ]\r\n            },\r\n            \"Path\": \"/\"\r\n          },\r\n          \"Metadata\": {\r\n            \"AWS::CloudFormation::Designer\": {\r\n              \"id\": \"7d432a6d-0c26-4570-8043-36dab502b408\"\r\n            }\r\n          }\r\n        },\r\n        \"InstanceRolePolicies\": {\r\n          \"Type\": \"AWS::IAM::Policy\",\r\n          \"Properties\": {\r\n            \"PolicyName\": \"InstanceRole\",\r\n            \"PolicyDocument\": {\r\n              \"Statement\": [\r\n                {\r\n                  \"Effect\": \"Allow\",\r\n                  \"Action\": [\r\n                    \"autoscaling:Describe*\",\r\n                    \"cloudformation:Describe*\",\r\n                    \"cloudformation:GetTemplate\",\r\n                    \"s3:Get*\"\r\n                  ],\r\n                  \"Resource\": \"*\"\r\n                }\r\n              ]\r\n            },\r\n            \"Roles\": [\r\n              {\r\n                \"Ref\": \"InstanceRole\"\r\n              }\r\n            ]\r\n          },\r\n          \"Metadata\": {\r\n            \"AWS::CloudFormation::Designer\": {\r\n              \"id\": \"729a7797-a918-420b-a063-eed7adcda437\"\r\n            }\r\n          }\r\n        },\r\n        \"InstanceRoleInstanceProfile\": {\r\n          \"Type\": \"AWS::IAM::InstanceProfile\",\r\n          \"Properties\": {\r\n            \"Path\": \"/\",\r\n            \"Roles\": [\r\n              {\r\n                \"Ref\": \"InstanceRole\"\r\n              }\r\n            ]\r\n          },\r\n          \"Metadata\": {\r\n            \"AWS::CloudFormation::Designer\": {\r\n              \"id\": \"8088e2e8-777e-4b49-9fe7-a36c8d76f6ee\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"Outputs\": {\r\n        \"CodeDeployTrustRoleARN\": {\r\n          \"Value\": {\r\n            \"Fn::GetAtt\": [\r\n              \"CodeDeployTrustRole\",\r\n              \"Arn\"\r\n            ]\r\n          }\r\n        }\r\n      },\r\n      \"Metadata\": {\r\n        \"AWS::CloudFormation::Designer\": {\r\n          \"7d432a6d-0c26-4570-8043-36dab502b408\": {\r\n            \"size\": {\r\n              \"width\": 60,\r\n              \"height\": 60\r\n            },\r\n            \"position\": {\r\n              \"x\": 60,\r\n              \"y\": 90\r\n            },\r\n            \"z\": 1,\r\n            \"embeds\": []\r\n          },\r\n          \"8088e2e8-777e-4b49-9fe7-a36c8d76f6ee\": {\r\n            \"size\": {\r\n              \"width\": 60,\r\n              \"height\": 60\r\n            },\r\n            \"position\": {\r\n              \"x\": 180,\r\n              \"y\": 90\r\n            },\r\n            \"z\": 1,\r\n            \"embeds\": [],\r\n            \"isassociatedwith\": [\r\n              \"7d432a6d-0c26-4570-8043-36dab502b408\"\r\n            ]\r\n          },\r\n          \"729a7797-a918-420b-a063-eed7adcda437\": {\r\n            \"size\": {\r\n              \"width\": 60,\r\n              \"height\": 60\r\n            },\r\n            \"position\": {\r\n              \"x\": 60,\r\n              \"y\": 210\r\n            },\r\n            \"z\": 1,\r\n            \"embeds\": [],\r\n            \"isassociatedwith\": [\r\n              \"7d432a6d-0c26-4570-8043-36dab502b408\"\r\n            ]\r\n          },\r\n          \"47a08921-1b89-46f7-8874-7d41e8e3595f\": {\r\n            \"size\": {\r\n              \"width\": 60,\r\n              \"height\": 60\r\n            },\r\n            \"position\": {\r\n              \"x\": 180,\r\n              \"y\": 210\r\n            },\r\n            \"z\": 1,\r\n            \"embeds\": []\r\n          },\r\n          \"6b960024-669a-49c2-be54-ac96c32be1f7\": {\r\n            \"size\": {\r\n              \"width\": 60,\r\n              \"height\": 60\r\n            },\r\n            \"position\": {\r\n              \"x\": 300,\r\n              \"y\": 90\r\n            },\r\n            \"z\": 1,\r\n            \"embeds\": [],\r\n            \"isassociatedwith\": [\r\n              \"47a08921-1b89-46f7-8874-7d41e8e3595f\"\r\n            ]\r\n          },\r\n          \"841b5a35-52f2-4887-bd4b-7b9a7dd90dc3\": {\r\n            \"size\": {\r\n              \"width\": 60,\r\n              \"height\": 60\r\n            },\r\n            \"position\": {\r\n              \"x\": 300,\r\n              \"y\": 210\r\n            },\r\n            \"z\": 1,\r\n            \"embeds\": []\r\n          },\r\n          \"761ddc9a-7c3b-41ca-9fa1-21429046b271\": {\r\n            \"size\": {\r\n              \"width\": 60,\r\n              \"height\": 60\r\n            },\r\n            \"position\": {\r\n              \"x\": 60,\r\n              \"y\": 330\r\n            },\r\n            \"z\": 1,\r\n            \"embeds\": []\r\n          },\r\n          \"044d2ef7-e348-4e63-8d56-40c4c22cf6a3\": {\r\n            \"size\": {\r\n              \"width\": 60,\r\n              \"height\": 60\r\n            },\r\n            \"position\": {\r\n              \"x\": 180,\r\n              \"y\": 330\r\n            },\r\n            \"z\": 1,\r\n            \"embeds\": [],\r\n            \"ismemberof\": [\r\n              \"841b5a35-52f2-4887-bd4b-7b9a7dd90dc3\"\r\n            ],\r\n            \"isrelatedto\": [\r\n              \"761ddc9a-7c3b-41ca-9fa1-21429046b271\",\r\n              \"8088e2e8-777e-4b49-9fe7-a36c8d76f6ee\"\r\n            ]\r\n          },\r\n          \"90b878c4-8d68-4e73-a523-d0abc821a603\": {\r\n            \"size\": {\r\n              \"width\": 60,\r\n              \"height\": 60\r\n            },\r\n            \"position\": {\r\n              \"x\": 300,\r\n              \"y\": 330\r\n            },\r\n            \"z\": 1,\r\n            \"embeds\": [],\r\n            \"ismemberof\": [\r\n              \"841b5a35-52f2-4887-bd4b-7b9a7dd90dc3\"\r\n            ],\r\n            \"isrelatedto\": [\r\n              \"761ddc9a-7c3b-41ca-9fa1-21429046b271\",\r\n              \"8088e2e8-777e-4b49-9fe7-a36c8d76f6ee\"\r\n            ]\r\n          },\r\n          \"a2c91b03-2c8c-4bd5-9c44-efdb89cf5375\": {\r\n            \"size\": {\r\n              \"width\": 60,\r\n              \"height\": 60\r\n            },\r\n            \"position\": {\r\n              \"x\": 420,\r\n              \"y\": 90\r\n            },\r\n            \"z\": 1,\r\n            \"embeds\": [],\r\n            \"references\": [\r\n              \"761ddc9a-7c3b-41ca-9fa1-21429046b271\"\r\n            ]\r\n          },\r\n          \"df094acb-0425-4ae5-bfc1-18c94c3d90c1\": {\r\n            \"size\": {\r\n              \"width\": 60,\r\n              \"height\": 60\r\n            },\r\n            \"position\": {\r\n              \"x\": 420,\r\n              \"y\": 210\r\n            },\r\n            \"z\": 1,\r\n            \"embeds\": [],\r\n            \"ismemberof\": [\r\n              \"841b5a35-52f2-4887-bd4b-7b9a7dd90dc3\"\r\n            ],\r\n            \"isrelatedto\": [\r\n              \"761ddc9a-7c3b-41ca-9fa1-21429046b271\",\r\n              \"8088e2e8-777e-4b49-9fe7-a36c8d76f6ee\"\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "Because the EC2 instance is not running yet, I can't just ssh to it. ", "keywords": ["instance"]}, {"source": "Text", "text": "# Full template: { \"Description\": \"Create instances ready for CodeDeploy: Create up to 3 Amazon EC2 instances with an associated instance profile and install the AWS CodeDeploy Agent. ", "keywords": ["instance"]}, {"source": "Text", "text": "You will be billed for the AWS resources used if you create a stack from this template. ", "keywords": ["bill"]}, {"source": "Text", "text": "See the License for the specific language governing permissions and limitations under the License.\", \"AWSTemplateFormatVersion\": \"2010-09-09\", \"Parameters\": { \"TagKey\": { \"Description\": \"The EC2 tag key that identifies this as a target for deployments.\", \"Type\": \"String\", \"Default\": \"Name\", \"AllowedPattern\": \"[\\\\x20-\\\\x7E]*\", \"ConstraintDescription\": \"Can contain only ASCII characters.\" }, \"TagValue\": { \"Description\": \"The EC2 tag value that identifies this as a target for deployments.\", \"Type\": \"String\", \"Default\": \"golden-cow\", \"AllowedPattern\": \"[\\\\x20-\\\\x7E]*\", \"ConstraintDescription\": \"Can contain only ASCII characters.\" }, \"KeyPairName\": { \"Description\": \"Name of an existing Amazon EC2 key pair to enable SSH or RDP access to the instances.\", \"Type\": \"String\", \"MinLength\": \"1\", \"MaxLength\": \"255\", \"AllowedPattern\": \"[\\\\x20-\\\\x7E]*\", \"Default\": \"AWS Golden Cow\", \"ConstraintDescription\": \"KeyPairName is a required Field and can contain only ASCII characters.\" }, \"InstanceType\": { \"Description\": \"Amazon EC2 instance type.\", \"Type\": \"String\", \"Default\": \"t2.micro\", \"ConstraintDescription\": \"Must be a valid Amazon EC2 instance type.\" }, \"InstanceCount\": { \"Description\": \"Number of Amazon EC2 instances (Must be a number between 1 and 1).\", \"Type\": \"Number\", \"Default\": \"1\", \"ConstraintDescription\": \"Must be a number between 1 and 3.\", \"MinValue\": \"1\", \"MaxValue\": \"1\" }, \"OperatingSystem\": { \"Description\": \"Amazon EC2 operating system type (Linux or Windows).\", \"Type\": \"String\", \"Default\": \"Linux\", \"ConstraintDescription\": \"Linux\", \"AllowedValues\": [ \"Linux\" ] }, \"SSHLocation\": { \"Description\": \"The IP address range that can be used to connect using SSH or RDP to the Amazon EC2 instances.\", \"Type\": \"String\", \"MinLength\": \"9\", \"MaxLength\": \"18\", \"Default\": \"0.0.0.0/0\", \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\", \"ConstraintDescription\": \"Must be a valid IP CIDR range of the form x.x.x.x/x.\" } }, \"Mappings\": { \"RegionOS2AMI\": { \"eu-central-1\": { \"Linux\": \"ami-87564feb\" } }, \"OS2SSHPort\": { \"Linux\": { \"SSHPort\": \"22\" } } }, \"Conditions\": { \"LaunchInstance1\": { \"Fn::Equals\": [ \"1\", { \"Ref\": \"InstanceCount\" } ] } }, \"Resources\": { \"LinuxEC2Instance\": { \"Type\": \"AWS::EC2::Instance\", \"Condition\": \"LaunchInstance1\", \"Metadata\": { \"AWS::CloudFormation::Init\": { \"config\": { \"services\": { \"sysvint\": { \"codedeploy-agent\": { \"enabled\": \"true\", \"ensureRunning\": \"true\" } } }, \"packages\": { \"apt-get\": { \"epel-release\": [], \"gcc-c++\": [], \"make\": [], \"git\": [] } } } }, \"AWS::CloudFormation::Designer\": { \"id\": \"df094acb-0425-4ae5-bfc1-18c94c3d90c1\" } }, \"Properties\": { \"ImageId\": { \"Fn::FindInMap\": [ \"RegionOS2AMI\", { \"Ref\": \"AWS::Region\" }, { \"Ref\": \"OperatingSystem\" } ] }, \"InstanceType\": { \"Ref\": \"InstanceType\" }, \"SecurityGroups\": [ { \"Ref\": \"SecurityGroup\" } ], \"UserData\": { \"Fn::Base64\": { \"Fn::Join\": [ \"\", [ \"#!/bin/bash -ex\\n\", \"apt-get update -y aws-cfn-bootstrap\\n\", \"apt-get install -y aws-cli\\n\", \"/opt/aws/bin/cfn-signal -e 0 -r \\\"AWS installed CLI.\\\" '\", \"# Helper function.\\n\", \"function error_exit\\n\", \"{\\n\", \" /opt/aws/bin/cfn-signal -e 1 -r \\\"$1\\\" '\", { \"Ref\": \"WaitHandle\" }, \"'\\n\", \" exit 1\\n\", \"}\\n\", \"#Install nodejs, npm\\n\", \"curl -sL https://deb.nodesource.com/setup_6.x\\n\", \"apt-get install -y nodejs npm || error_exit 'Failed to install nodejs.'\\n\", \"npm install pm2 -g || error_exit 'Failed to install pm2.'\\n\", \"/opt/aws/bin/cfn-signal -e 0 -r \\\"AWS installed node & npm.\\\" '\", \"# Install the AWS CodeDeploy Agent.\\n\", \"cd /home/ec2-user/\\n\", \"aws s3 cp 's3://aws-codedeploy-eu-central-1/latest/codedeploy-agent_all.deb' . ", "keywords": ["instance"]}, {"source": "Text", "text": "}, \"Value\": { \"Ref\": \"TagValue\" } } ], \"IamInstanceProfile\": { \"Ref\": \"InstanceRoleInstanceProfile\" } } }, \"WaitHandle\": { \"Type\": \"AWS::CloudFormation::WaitConditionHandle\", \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"761ddc9a-7c3b-41ca-9fa1-21429046b271\" } } }, \"WaitCondition\": { \"Type\": \"AWS::CloudFormation::WaitCondition\", \"Properties\": { \"Count\": 3, \"Handle\": { \"Ref\": \"WaitHandle\" }, \"Timeout\": \"900\" }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"a2c91b03-2c8c-4bd5-9c44-efdb89cf5375\" } } }, \"SecurityGroup\": { \"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": { \"GroupDescription\": \"Enable HTTP access via port 80 and SSH access.\", \"SecurityGroupIngress\": [ { \"IpProtocol\": \"tcp\", \"FromPort\": \"80\", \"ToPort\": \"80\", \"CidrIp\": \"0.0.0.0/0\" }, { \"IpProtocol\": \"tcp\", \"FromPort\": { \"Fn::FindInMap\": [ \"OS2SSHPort\", { \"Ref\": \"OperatingSystem\" }, \"SSHPort\" ] }, \"ToPort\": { \"Fn::FindInMap\": [ \"OS2SSHPort\", { \"Ref\": \"OperatingSystem\" }, \"SSHPort\" ] }, \"CidrIp\": { \"Ref\": \"SSHLocation\" } } ] }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"841b5a35-52f2-4887-bd4b-7b9a7dd90dc3\" } } }, \"CodeDeployTrustRole\": { \"Type\": \"AWS::IAM::Role\", \"Properties\": { \"AssumeRolePolicyDocument\": { \"Statement\": [ { \"Sid\": \"1\", \"Effect\": \"Allow\", \"Principal\": { \"Service\": [ \"codedeploy.us-east-1.amazonaws.com\", \"codedeploy.us-west-2.amazonaws.com\", \"codedeploy.eu-west-1.amazonaws.com\", \"codedeploy.eu-central-1.amazonaws.com\" ] }, \"Action\": \"sts:AssumeRole\" } ] }, \"Path\": \"/\" }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"47a08921-1b89-46f7-8874-7d41e8e3595f\" } } }, \"CodeDeployRolePolicies\": { \"Type\": \"AWS::IAM::Policy\", \"Properties\": { \"PolicyName\": \"CodeDeployPolicy\", \"PolicyDocument\": { \"Statement\": [ { \"Effect\": \"Allow\", \"Resource\": [ \"*\" ], \"Action\": [ \"ec2:Describe*\" ] }, { \"Effect\": \"Allow\", \"Resource\": [ \"*\" ], \"Action\": [ \"autoscaling:CompleteLifecycleAction\", \"autoscaling:DeleteLifecycleHook\", \"autoscaling:DescribeLifecycleHooks\", \"autoscaling:DescribeAutoScalingGroups\", \"autoscaling:PutLifecycleHook\", \"autoscaling:RecordLifecycleActionHeartbeat\" ] } ] }, \"Roles\": [ { \"Ref\": \"CodeDeployTrustRole\" } ] }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"6b960024-669a-49c2-be54-ac96c32be1f7\" } } }, \"InstanceRole\": { \"Type\": \"AWS::IAM::Role\", \"Properties\": { \"AssumeRolePolicyDocument\": { \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"Service\": [ \"ec2.amazonaws.com\" ] }, \"Action\": [ \"sts:AssumeRole\" ] } ] }, \"Path\": \"/\" }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"7d432a6d-0c26-4570-8043-36dab502b408\" } } }, \"InstanceRolePolicies\": { \"Type\": \"AWS::IAM::Policy\", \"Properties\": { \"PolicyName\": \"InstanceRole\", \"PolicyDocument\": { \"Statement\": [ { \"Effect\": \"Allow\", \"Action\": [ \"autoscaling:Describe*\", \"cloudformation:Describe*\", \"cloudformation:GetTemplate\", \"s3:Get*\" ], \"Resource\": \"*\" } ] }, \"Roles\": [ { \"Ref\": \"InstanceRole\" } ] }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"729a7797-a918-420b-a063-eed7adcda437\" } } }, \"InstanceRoleInstanceProfile\": { \"Type\": \"AWS::IAM::InstanceProfile\", \"Properties\": { \"Path\": \"/\", \"Roles\": [ { \"Ref\": \"InstanceRole\" } ] }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"8088e2e8-777e-4b49-9fe7-a36c8d76f6ee\" } } } }, \"Outputs\": { \"CodeDeployTrustRoleARN\": { \"Value\": { \"Fn::GetAtt\": [ \"CodeDeployTrustRole\", \"Arn\" ] } } }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"7d432a6d-0c26-4570-8043-36dab502b408\": { \"size\": { \"width\": 60, \"height\": 60 }, \"position\": { \"x\": 60, \"y\": 90 }, \"z\": 1, \"embeds\": [] }, \"8088e2e8-777e-4b49-9fe7-a36c8d76f6ee\": { \"size\": { \"width\": 60, \"height\": 60 }, \"position\": { \"x\": 180, \"y\": 90 }, \"z\": 1, \"embeds\": [], \"isassociatedwith\": [ \"7d432a6d-0c26-4570-8043-36dab502b408\" ] }, \"729a7797-a918-420b-a063-eed7adcda437\": { \"size\": { \"width\": 60, \"height\": 60 }, \"position\": { \"x\": 60, \"y\": 210 }, \"z\": 1, \"embeds\": [], \"isassociatedwith\": [ \"7d432a6d-0c26-4570-8043-36dab502b408\" ] }, \"47a08921-1b89-46f7-8874-7d41e8e3595f\": { \"size\": { \"width\": 60, \"height\": 60 }, \"position\": { \"x\": 180, \"y\": 210 }, \"z\": 1, \"embeds\": [] }, \"6b960024-669a-49c2-be54-ac96c32be1f7\": { \"size\": { \"width\": 60, \"height\": 60 }, \"position\": { \"x\": 300, \"y\": 90 }, \"z\": 1, \"embeds\": [], \"isassociatedwith\": [ \"47a08921-1b89-46f7-8874-7d41e8e3595f\" ] }, \"841b5a35-52f2-4887-bd4b-7b9a7dd90dc3\": { \"size\": { \"width\": 60, \"height\": 60 }, \"position\": { \"x\": 300, \"y\": 210 }, \"z\": 1, \"embeds\": [] }, \"761ddc9a-7c3b-41ca-9fa1-21429046b271\": { \"size\": { \"width\": 60, \"height\": 60 }, \"position\": { \"x\": 60, \"y\": 330 }, \"z\": 1, \"embeds\": [] }, \"044d2ef7-e348-4e63-8d56-40c4c22cf6a3\": { \"size\": { \"width\": 60, \"height\": 60 }, \"position\": { \"x\": 180, \"y\": 330 }, \"z\": 1, \"embeds\": [], \"ismemberof\": [ \"841b5a35-52f2-4887-bd4b-7b9a7dd90dc3\" ], \"isrelatedto\": [ \"761ddc9a-7c3b-41ca-9fa1-21429046b271\", \"8088e2e8-777e-4b49-9fe7-a36c8d76f6ee\" ] }, \"90b878c4-8d68-4e73-a523-d0abc821a603\": { \"size\": { \"width\": 60, \"height\": 60 }, \"position\": { \"x\": 300, \"y\": 330 }, \"z\": 1, \"embeds\": [], \"ismemberof\": [ \"841b5a35-52f2-4887-bd4b-7b9a7dd90dc3\" ], \"isrelatedto\": [ \"761ddc9a-7c3b-41ca-9fa1-21429046b271\", \"8088e2e8-777e-4b49-9fe7-a36c8d76f6ee\" ] }, \"a2c91b03-2c8c-4bd5-9c44-efdb89cf5375\": { \"size\": { \"width\": 60, \"height\": 60 }, \"position\": { \"x\": 420, \"y\": 90 }, \"z\": 1, \"embeds\": [], \"references\": [ \"761ddc9a-7c3b-41ca-9fa1-21429046b271\" ] }, \"df094acb-0425-4ae5-bfc1-18c94c3d90c1\": { \"size\": { \"width\": 60, \"height\": 60 }, \"position\": { \"x\": 420, \"y\": 210 }, \"z\": 1, \"embeds\": [], \"ismemberof\": [ \"841b5a35-52f2-4887-bd4b-7b9a7dd90dc3\" ], \"isrelatedto\": [ \"761ddc9a-7c3b-41ca-9fa1-21429046b271\", \"8088e2e8-777e-4b49-9fe7-a36c8d76f6ee\" ] } } } }", "keywords": ["policy"]}]}, {"Id": "119943856", "PostHistoryTypeId": "1", "PostId": "37698615", "RevisionGUID": "52bc9fcd-abba-46ea-8731-0e28665be2db", "CreationDate": "2016-06-08T09:31:55.560", "UserId": "2876990", "Text": "Correct Way to Install & Debug Installation of Packages With AWS Cloud Formation", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "119943857", "PostHistoryTypeId": "3", "PostId": "37698615", "RevisionGUID": "52bc9fcd-abba-46ea-8731-0e28665be2db", "CreationDate": "2016-06-08T09:31:55.560", "UserId": "2876990", "Text": "|amazon-web-services|amazon-ec2|aws-cloudformation|", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "answers": [{"Id": "39481730", "PostTypeId": "2", "ParentId": "37698615", "CreationDate": "2016-09-14T02:44:32.700", "Score": "1", "Body": "<p>I think the answer to Q2 is the resources tab of an executing CF stack. On the resources tab, you'll see which resources have been created, which ones are in-progress and which ones have failed. Using the \"DependsOn\" parameter, we can enforce a sequence in which the resources get created. You can thus setup your template to create resources sequentially and you can pinpoint failures, if any.</p>\n", "OwnerUserId": "2242667", "LastActivityDate": "2016-09-14T02:44:32.700", "CommentCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "127039446", "PostHistoryTypeId": "2", "PostId": "39481730", "RevisionGUID": "3dd18fea-b105-4581-be79-be2e51fb87bb", "CreationDate": "2016-09-14T02:44:32.700", "UserId": "2242667", "Text": "I think the answer to Q2 is the resources tab of an executing CF stack. On the resources tab, you'll see which resources have been created, which ones are in-progress and which ones have failed. Using the \"DependsOn\" parameter, we can enforce a sequence in which the resources get created. You can thus setup your template to create resources sequentially and you can pinpoint failures, if any.", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "Because the EC2 instance is not running yet, I can't just ssh to it. ", "keywords": ["instance"]}]}
{"Id": "59739900", "PostTypeId": "1", "CreationDate": "2020-01-14T18:42:08.510", "Score": "0", "ViewCount": "58", "Body": "<p>I would like to write a command line tool that, among other things, monitors CloudFormation stack events for a particular stack and pretty-prints them to the console.</p>\n\n<p>The out-of-the box solution is to repeatedly poll <code>describe-stack-events</code>. This is not ideal \u2014 you get the latest 200 events every time, and you're limited by the polling rate.</p>\n\n<p>CloudFormation can also log events to an SNS topic. However, as far as I know, SNS is designed to send events to long-lasting destinations like lambdas and email addresses; it's not made for a script to temporarily listen to a topic.</p>\n\n<p>I don't know much about AWS's various event and queueing services. I'm looking for a solution that is:</p>\n\n<ul>\n<li>Cheap/easy.</li>\n<li>Low-latency. (I'd like to see events in real time as a deployment is happening.)</li>\n<li>Amenable to short-term subscriptions from a Node app or somesuch on my local machine.</li>\n</ul>\n\n<p>I do not need:</p>\n\n<ul>\n<li>Any sort of storage or view into past events.</li>\n<li>Very high reliability. (This is a convenience tool for devs.)</li>\n</ul>\n\n<p>Suggestions?</p>\n", "OwnerUserId": "159369", "LastActivityDate": "2020-01-14T18:42:08.510", "Title": "Temporarily monitor CloudFormation stack events", "Tags": "|amazon-web-services|aws-cloudformation|", "AnswerCount": "0", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "105631889", "PostId": "59739900", "Score": "1", "Text": "Would slack be an option? I know a way to do this quick, easy, and cheap through slack in real time.", "CreationDate": "2020-01-14T21:08:14.187", "UserId": "10963381", "filtered-sentences": [{"source": "Text", "text": "I know a way to do this quick, easy, and cheap through slack in real time.", "keywords": ["cheap"]}]}, {"Id": "105632004", "PostId": "59739900", "Score": "0", "Text": "That's a good idea, and I might implement that as well. But for this particular use case, I'm looking for something that can run locally, e.g. in a terminal.", "CreationDate": "2020-01-14T21:13:53.893", "UserId": "159369", "filtered-sentences": []}, {"Id": "105632223", "PostId": "59739900", "Score": "0", "Text": "You could make a lambda that pushes new updates to a sqs queue and have your cli poll the queue. This way you would not have to deal with a flood of events each time.  Not sure if there is an easy way without polling. You potentially could open a http endpoint that could receive the sns message, but that would not be easy.", "CreationDate": "2020-01-14T21:22:33.213", "UserId": "10963381", "filtered-sentences": []}], "history": [{"Id": "212944519", "PostHistoryTypeId": "2", "PostId": "59739900", "RevisionGUID": "67f994c5-4f06-4355-aff7-efd6c9e415bd", "CreationDate": "2020-01-14T18:42:08.510", "UserId": "159369", "Text": "I would like to write a command line tool that, among other things, monitors CloudFormation stack events for a particular stack and pretty-prints them to the console.\r\n\r\nThe out-of-the box solution is to repeatedly poll `describe-stack-events`. This is not ideal \u2014 you get the latest 200 events every time, and you're limited by the polling rate.\r\n\r\nCloudFormation can also log events to an SNS topic. However, as far as I know, SNS is designed to send events to long-lasting destinations like lambdas and email addresses; it's not made for a script to temporarily listen to a topic.\r\n\r\nI don't know much about AWS's various event and queueing services. I'm looking for a solution that is:\r\n\r\n- Cheap/easy.\r\n- Low-latency. (I'd like to see events in real time as a deployment is happening.)\r\n- Amenable to short-term subscriptions from a Node app or somesuch on my local machine.\r\n\r\nI do not need:\r\n\r\n- Any sort of storage or view into past events.\r\n- Very high reliability. (This is a convenience tool for devs.)\r\n\r\nSuggestions?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "- Cheap/easy. ", "keywords": ["cheap"]}, {"source": "Text", "text": "- Any sort of storage or view into past events. ", "keywords": ["storage"]}]}, {"Id": "212944520", "PostHistoryTypeId": "1", "PostId": "59739900", "RevisionGUID": "67f994c5-4f06-4355-aff7-efd6c9e415bd", "CreationDate": "2020-01-14T18:42:08.510", "UserId": "159369", "Text": "Temporarily monitor CloudFormation stack events", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "212944521", "PostHistoryTypeId": "3", "PostId": "59739900", "RevisionGUID": "67f994c5-4f06-4355-aff7-efd6c9e415bd", "CreationDate": "2020-01-14T18:42:08.510", "UserId": "159369", "Text": "|amazon-web-services|aws-cloudformation|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I'm looking for a solution that is: Cheap/easy. ", "keywords": ["cheap"]}, {"source": "Body", "text": "I do not need: Any sort of storage or view into past events. ", "keywords": ["storage"]}]}
{"Id": "57731848", "PostTypeId": "1", "CreationDate": "2019-08-30T18:46:16.483", "Score": "2", "ViewCount": "880", "Body": "<p>I'm trying to write a SAM template to have an IoT rule that triggers a Lambda function. The account I'm using requires tagging all resources with a long list of identifiers for billing reasons. These are always the same and it seems a shame to copy them repetitively for each resource. SAM allows for globals shared between one resource type (so every Function can share tags) but I'm not seeing a good way to apply global tags between resource types. </p>\n\n<p>I thought about using a Parameter and trying to reference it, but there are no supported parameter Types that allow for the key/value structure of tags. \n<a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html\" rel=\"nofollow noreferrer\">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html</a></p>\n\n<p>I'd love to do something like this:</p>\n\n<pre><code>Parameters:\n  UniversalTags:\n    Type: KeyValueObject\n    Default:\n      - \n        Key: \"Name\"\n        Value: \"my name\"\n      - \n        Key: \"Manager\"\n        Value: \"my manager\"\n      -\n        Key: \"Market\"\n        Value: \"my market\"\n       -\n        Key: \"Engagement Office\"\n        Value: \"location\"\n      -\n        Key: \"Email\"\n        Value: \"email@test.com\"\n\nResources:\n  IoTProcessingFunction:\n    Type: AWS::Serverless::Function \n    Properties:\n      Tags: !Ref UniversalTags\n\n  IoTRule:\n    Type: AWS::IoT::TopicRule\n    Properties:\n      Tags: !Ref UniversalTags\n</code></pre>\n\n<p>Anyone know of any ways to implement this?</p>\n", "OwnerUserId": "12000781", "LastActivityDate": "2022-05-16T03:18:54.633", "Title": "Share tags between different resource types in cloudformation template", "Tags": "|yaml|aws-cloudformation|aws-sam|", "AnswerCount": "2", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "204485194", "PostHistoryTypeId": "2", "PostId": "57731848", "RevisionGUID": "d2f11d87-542f-446f-99ad-6af6a805f961", "CreationDate": "2019-08-30T18:46:16.483", "UserId": "12000781", "Text": "I'm trying to write a SAM template to have an IoT rule that triggers a Lambda function. The account I'm using requires tagging all resources with a long list of identifiers for billing reasons. These are always the same and it seems a shame to copy them repetitively for each resource. SAM allows for globals shared between one resource type (so every Function can share tags) but I'm not seeing a good way to apply global tags between resource types. \r\n\r\nI thought about using a Parameter and trying to reference it, but there are no supported parameter Types that allow for the key/value structure of tags. \r\nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html\r\n\r\nI'd love to do something like this:\r\n```yml\r\nParameters:\r\n  UniversalTags:\r\n    Type: KeyValueObject\r\n    Default:\r\n      - \r\n        Key: \"Name\"\r\n        Value: \"my name\"\r\n      - \r\n        Key: \"Manager\"\r\n        Value: \"my manager\"\r\n      -\r\n        Key: \"Market\"\r\n        Value: \"my market\"\r\n       -\r\n        Key: \"Engagement Office\"\r\n        Value: \"location\"\r\n      -\r\n        Key: \"Email\"\r\n        Value: \"email@test.com\"\r\n\r\nResources:\r\n  IoTProcessingFunction:\r\n    Type: AWS::Serverless::Function \r\n    Properties:\r\n      Tags: !Ref UniversalTags\r\n\r\n  IoTRule:\r\n    Type: AWS::IoT::TopicRule\r\n    Properties:\r\n      Tags: !Ref UniversalTags\r\n```\r\nAnyone know of any ways to implement this?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "The account I'm using requires tagging all resources with a long list of identifiers for billing reasons. ", "keywords": ["bill"]}, {"source": "Text", "text": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html I'd love to do something like this: ```yml Parameters: UniversalTags: Type: KeyValueObject Default: - Key: \"Name\" Value: \"my name\" - Key: \"Manager\" Value: \"my manager\" - Key: \"Market\" Value: \"my market\" - Key: \"Engagement Office\" Value: \"location\" - Key: \"Email\" Value: \"email@test.com\" Resources: IoTProcessingFunction: Type: AWS::Serverless::Function Properties: Tags: !Ref UniversalTags IoTRule: Type: AWS::IoT::TopicRule Properties: Tags: !Ref UniversalTags ``` Anyone know of any ways to implement this?", "keywords": ["test"]}]}, {"Id": "204485195", "PostHistoryTypeId": "1", "PostId": "57731848", "RevisionGUID": "d2f11d87-542f-446f-99ad-6af6a805f961", "CreationDate": "2019-08-30T18:46:16.483", "UserId": "12000781", "Text": "Share tags between different resource types in cloudformation template", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "204485196", "PostHistoryTypeId": "3", "PostId": "57731848", "RevisionGUID": "d2f11d87-542f-446f-99ad-6af6a805f961", "CreationDate": "2019-08-30T18:46:16.483", "UserId": "12000781", "Text": "|yaml|aws-cloudformation|aws-sam|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "72253858", "PostTypeId": "2", "ParentId": "57731848", "CreationDate": "2022-05-16T03:18:54.633", "Score": "1", "Body": "<p>I'd rather put them in the <code>samconfig.toml</code> file, like:</p>\n<pre><code>[default.deploy.parameters]\nstack_name = &quot;your-application&quot;\ns3_bucket = &quot;your-s3-for-cloudformation-stuff&quot;\ns3_prefix = &quot;your-folder-name&quot;\n...\ntags = &quot;Name=\\&quot;my name\\&quot; Manager=\\&quot;my manager\\&quot;&quot;\n</code></pre>\n<p>That will propagate tags down to all the resources of the stack (including CloudFormation stack itself)</p>\n", "OwnerUserId": "2197207", "LastActivityDate": "2022-05-16T03:18:54.633", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "270227811", "PostHistoryTypeId": "2", "PostId": "72253858", "RevisionGUID": "30702f66-cc35-4032-87d6-1a5f1dc509bb", "CreationDate": "2022-05-16T03:18:54.633", "UserId": "2197207", "Text": "I'd rather put them in the `samconfig.toml` file, like:\r\n```\r\n[default.deploy.parameters]\r\nstack_name = \"your-application\"\r\ns3_bucket = \"your-s3-for-cloudformation-stuff\"\r\ns3_prefix = \"your-folder-name\"\r\n...\r\ntags = \"Name=\\\"my name\\\" Manager=\\\"my manager\\\"\"\r\n```\r\n\r\nThat will propagate tags down to all the resources of the stack (including CloudFormation stack itself)\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "57734237", "PostTypeId": "2", "ParentId": "57731848", "CreationDate": "2019-08-30T23:56:09.053", "Score": "-1", "Body": "<p>This is something that CloudFormation doesn't do well. Look into <a href=\"https://docs.aws.amazon.com/cdk/latest/guide/home.html\" rel=\"nofollow noreferrer\">AWS CDK</a>. It allows you to write code that generates CloudFormation. Your CloudFormation will still be repetitive, but you won't need to look at it or maintain it, and you'll be able to describe the Tags only once in CDK</p>\n", "OwnerUserId": "715780", "LastActivityDate": "2019-08-30T23:56:09.053", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "204494980", "PostHistoryTypeId": "2", "PostId": "57734237", "RevisionGUID": "c61a50fa-cbc6-4753-b27c-2a90a27d7752", "CreationDate": "2019-08-30T23:56:09.053", "UserId": "715780", "Text": "This is something that CloudFormation doesn't do well. Look into [AWS CDK][1]. It allows you to write code that generates CloudFormation. Your CloudFormation will still be repetitive, but you won't need to look at it or maintain it, and you'll be able to describe the Tags only once in CDK\r\n\r\n\r\n  [1]: https://docs.aws.amazon.com/cdk/latest/guide/home.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "The account I'm using requires tagging all resources with a long list of identifiers for billing reasons. ", "keywords": ["bill"]}]}
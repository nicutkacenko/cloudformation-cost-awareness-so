{"Id": "58798834", "PostTypeId": "1", "AcceptedAnswerId": "58981787", "CreationDate": "2019-11-11T09:37:54.210", "Score": "3", "ViewCount": "1020", "Body": "<p>I would like to be able to perform PITR restoration without losing benefit of Infrastructure-as-a-code with CloudFormation. </p>\n\n<p>Specifically, if I perform PITR restoration manually and then point application to the new database, won't that result in new DynamoDB table falling out of CloudFormation managed infrastructure? AFAIK, there is no mechanism at the moment to add a resource to CloudFormation after it was already created. \nHas anyone solved this problem?</p>\n", "OwnerUserId": "180309", "LastActivityDate": "2019-11-21T18:48:04.823", "Title": "DynamoDB - restoring table using PITR for DynamoDB table managed by CloudFormation", "Tags": "|amazon-web-services|amazon-dynamodb|aws-cloudformation|pitr|", "AnswerCount": "2", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "103879550", "PostId": "58798834", "Score": "0", "Text": "May be this https://aws.amazon.com/blogs/aws/new-amazon-dynamodb-continuous-backups-and-point-in-time-recovery-pitr/?", "CreationDate": "2019-11-11T10:30:12.377", "UserId": "4723732", "filtered-sentences": []}, {"Id": "103879583", "PostId": "58798834", "Score": "0", "Text": "@RichardRublev - That article does not explain how to do the rollback in a way that is compatible with CloudFormation.", "CreationDate": "2019-11-11T10:31:20.903", "UserId": "180309", "filtered-sentences": []}, {"Id": "103879638", "PostId": "58798834", "Score": "0", "Text": "I agree,may be you should try with Terraform.", "CreationDate": "2019-11-11T10:33:13.210", "UserId": "4723732", "filtered-sentences": []}], "history": [{"Id": "208965897", "PostHistoryTypeId": "2", "PostId": "58798834", "RevisionGUID": "1ac10df8-96a0-4aa5-9481-5dc2b05e91eb", "CreationDate": "2019-11-11T09:37:54.210", "UserId": "180309", "Text": "I would like to be able to perform PITR restoration without losing benefit of Infrastructure-as-a-code with CloudFormation. \r\n\r\nSpecifically, if I perform PITR restoration manually and then point application to the new database, won't that result in new DynamoDB table falling out of CloudFormation managed infrastructure? AFAIK, there is no mechanism at the moment to add a resource to CloudFormation after it was already created. \r\nHas anyone solved this problem?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "208965898", "PostHistoryTypeId": "1", "PostId": "58798834", "RevisionGUID": "1ac10df8-96a0-4aa5-9481-5dc2b05e91eb", "CreationDate": "2019-11-11T09:37:54.210", "UserId": "180309", "Text": "DynamoDB - restoring table using PITR for DynamoDB table managed by CloudFormation", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "208965899", "PostHistoryTypeId": "3", "PostId": "58798834", "RevisionGUID": "1ac10df8-96a0-4aa5-9481-5dc2b05e91eb", "CreationDate": "2019-11-11T09:37:54.210", "UserId": "180309", "Text": "|amazon-web-services|amazon-dynamodb|aws-cloudformation|pitr|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "58807612", "PostTypeId": "2", "ParentId": "58798834", "CreationDate": "2019-11-11T19:37:09.627", "Score": "1", "Body": "<p>You are correct, the restored table will be outside cloudformation control. The only solution that I know of is to write a script that copies that from the recovered table to the original table. Obviously there is a cost and time involved in that and it is less than ideal.</p>\n\n<p>As ever there is always the option to write a custom resource but that somewhat undermines the point of using Cloudformation in the first place.</p>\n", "OwnerUserId": "2129937", "LastActivityDate": "2019-11-11T19:37:09.627", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "209001974", "PostHistoryTypeId": "2", "PostId": "58807612", "RevisionGUID": "617e9ea7-3e7e-49d2-8e68-b3657e6094ed", "CreationDate": "2019-11-11T19:37:09.627", "UserId": "2129937", "Text": "You are correct, the restored table will be outside cloudformation control. The only solution that I know of is to write a script that copies that from the recovered table to the original table. Obviously there is a cost and time involved in that and it is less than ideal.\r\n\r\nAs ever there is always the option to write a custom resource but that somewhat undermines the point of using Cloudformation in the first place.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Obviously there is a cost and time involved in that and it is less than ideal. ", "keywords": ["cost"]}]}], "filtered-sentences": [{"source": "Body", "text": "Obviously there is a cost and time involved in that and it is less than ideal. ", "keywords": ["cost"]}]}, {"Id": "58981787", "PostTypeId": "2", "ParentId": "58798834", "CreationDate": "2019-11-21T18:48:04.823", "Score": "2", "Body": "<p>There is a now a way to <a href=\"https://aws.amazon.com/blogs/aws/new-import-existing-resources-into-a-cloudformation-stack/\" rel=\"nofollow noreferrer\">import existing resources into cloudformation.</a></p>\n\n<p>This means that you can do a PiTR and then import the newly created table into your stack.</p>\n", "OwnerUserId": "9132536", "LastActivityDate": "2019-11-21T18:48:04.823", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "104216686", "PostId": "58981787", "Score": "0", "Text": "Indeed, that seems like a better solution now", "CreationDate": "2019-11-21T19:03:22.230", "UserId": "180309", "filtered-sentences": []}], "history": [{"Id": "209712072", "PostHistoryTypeId": "2", "PostId": "58981787", "RevisionGUID": "7491168b-1b4e-4629-a691-2b2027c17b7f", "CreationDate": "2019-11-21T18:48:04.823", "UserId": "9132536", "Text": "There is a now a way to [import existing resources into cloudformation.][1]\r\n\r\nThis means that you can do a PiTR and then import the newly created table into your stack.\r\n\r\n  [1]: https://aws.amazon.com/blogs/aws/new-import-existing-resources-into-a-cloudformation-stack/", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": false, "filtered-sentences": []}
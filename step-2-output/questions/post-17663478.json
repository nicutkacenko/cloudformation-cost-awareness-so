{"Id": "17663478", "PostTypeId": "1", "AcceptedAnswerId": "17666781", "CreationDate": "2013-07-15T20:37:51.163", "Score": "2", "ViewCount": "4409", "Body": "<p>I'm having a lot of trouble trying to get a Cloud Formation template running correctly with auto scaling. I have the following resource:</p>\n\n<pre><code>\"LaunchConfig\" : {\n  \"Type\" : \"AWS::AutoScaling::LaunchConfiguration\",\n  \"Properties\" : {\n    \"KeyName\" : { \"Fn::FindInMap\" : [ \"EnvironmentToKeyName\", { \"Ref\" : \"Environment\" }, \"KeyName\" ] },\n    \"ImageId\" : { \"Fn::FindInMap\" : [ \"AWSRegionToAMI\", { \"Ref\" : \"AWS::Region\" }, \"AMI\" ] },\n    \"SecurityGroups\" : [ \"neat_spi\" ],\n    \"InstanceType\" : { \"Ref\" : \"InstanceType\" },\n    \"UserData\" : { \"Fn::Base64\" : {\n        \"Fn::Join\" : [\"\", [ \"&lt;script&gt;\", \"call c:\\\\chef\\\\boot.bat\", { \"Ref\" : \"Environment\" }, \"&lt;/script&gt;\"]]\n      }\n    }\n  }\n}\n</code></pre>\n\n<p>But it doesn't look like this script is running at all when the machine is started. How do I make sure it runs? Or how do I figure out why it isn't running?</p>\n\n<p>I can't find any logging anywhere on how to see if this was run or not.</p>\n", "OwnerUserId": "293686", "LastActivityDate": "2016-06-15T05:38:06.077", "Title": "How do I execute UserData content in a Windows EC2 instance", "Tags": "|windows|amazon-ec2|autoscaling|aws-cloudformation|", "AnswerCount": "3", "CommentCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "43748267", "PostHistoryTypeId": "2", "PostId": "17663478", "RevisionGUID": "8f6d9a9e-c6b9-4756-a48e-004c64b2c21e", "CreationDate": "2013-07-15T20:37:51.163", "UserId": "293686", "Text": "I'm having a lot of trouble trying to get a Cloud Formation template running correctly with auto scaling. I have the following resource:\r\n\r\n    \"LaunchConfig\" : {\r\n      \"Type\" : \"AWS::AutoScaling::LaunchConfiguration\",\r\n      \"Properties\" : {\r\n        \"KeyName\" : { \"Fn::FindInMap\" : [ \"EnvironmentToKeyName\", { \"Ref\" : \"Environment\" }, \"KeyName\" ] },\r\n        \"ImageId\" : { \"Fn::FindInMap\" : [ \"AWSRegionToAMI\", { \"Ref\" : \"AWS::Region\" }, \"AMI\" ] },\r\n        \"SecurityGroups\" : [ \"neat_spi\" ],\r\n        \"InstanceType\" : { \"Ref\" : \"InstanceType\" },\r\n        \"UserData\" : { \"Fn::Base64\" : {\r\n            \"Fn::Join\" : [\"\", [ \"<script>\", \"call c:\\\\chef\\\\boot.bat\", { \"Ref\" : \"Environment\" }, \"</script>\"]]\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\nBut it doesn't look like this script is running at all when the machine is started. How do I make sure it runs? Or how do I figure out why it isn't running?\r\n\r\nI can't find any logging anywhere on how to see if this was run or not.", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "43748268", "PostHistoryTypeId": "1", "PostId": "17663478", "RevisionGUID": "8f6d9a9e-c6b9-4756-a48e-004c64b2c21e", "CreationDate": "2013-07-15T20:37:51.163", "UserId": "293686", "Text": "How do I execute UserData content in a Windows EC2 instance", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "How do I execute UserData content in a Windows EC2 instance", "keywords": ["instance"]}]}, {"Id": "43748269", "PostHistoryTypeId": "3", "PostId": "17663478", "RevisionGUID": "8f6d9a9e-c6b9-4756-a48e-004c64b2c21e", "CreationDate": "2013-07-15T20:37:51.163", "UserId": "293686", "Text": "|windows|amazon-ec2|autoscaling|aws-cloudformation|", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "answers": [{"Id": "17666781", "PostTypeId": "2", "ParentId": "17663478", "CreationDate": "2013-07-16T01:53:37.250", "Score": "0", "Body": "<p>After the VM boots, you can run remote commands on it with WinRM. Here's an example client:</p>\n\n<p><a href=\"https://github.com/WinRb/WinRM\" rel=\"nofollow\">https://github.com/WinRb/WinRM</a></p>\n\n<p>Make sure WinRM is enabled in your Windows AMI and that the correct port is open in the security group.</p>\n", "OwnerUserId": "1224060", "LastActivityDate": "2013-07-16T01:53:37.250", "CommentCount": "1", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "78164131", "PostId": "17666781", "Score": "2", "Text": "This doesn't answer the question about UserData.", "CreationDate": "2017-08-09T23:58:56.120", "UserId": "358224", "filtered-sentences": []}], "history": [{"Id": "43757473", "PostHistoryTypeId": "2", "PostId": "17666781", "RevisionGUID": "5a0e8146-670c-4834-be3b-6f0a6363c117", "CreationDate": "2013-07-16T01:53:37.250", "UserId": "1224060", "Text": "After the VM boots, you can run remote commands on it with WinRM. Here's an example client:\r\n\r\nhttps://github.com/WinRb/WinRM\r\n\r\nMake sure WinRM is enabled in your Windows AMI and that the correct port is open in the security group.", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "37826953", "PostTypeId": "2", "ParentId": "17663478", "CreationDate": "2016-06-15T05:38:06.077", "Score": "3", "Body": "<p>I had a heck of a time getting the scripts to run on my AMI as well. <strong>It worked when I used a standard Amazon AMI</strong>, but it didn't work with my custom build AMIs.</p>\n\n<p>I then found this link <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ami-create-standard.html\" rel=\"nofollow\">Create a Standard Amazon Machine Image Using Sysprep</a>.</p>\n\n<p>To summarize, I</p>\n\n<ol>\n<li>I made sure termination protection was turned on (this caused me to lose all my work once)</li>\n<li>Launched into a new Windows instance</li>\n<li>I customized the instance by doing things like installing windows features I needed and installing an .MSI that I needed.</li>\n<li>I turned on Windows Updates and cleared the recycle bin</li>\n<li>I ran <code>EC2ConfigService Settings</code> from <strong>Start</strong> -> <strong>All Programs</strong></li>\n<li>I checked \"<em>Enable UserData execution for next service start (automatically enabled at SysPrep) eg. <code>&lt;script&gt;&lt;/script&gt; or &lt;powershell&gt;&lt;/powershell&gt;</code></em>\" on the <strong>General</strong> tab.</li>\n<li>Make sure you set a proper password policy on the <strong>Image</strong> tab. I chose Random.</li>\n<li>Click <strong>Apply</strong> and then click <strong>Shutdown with SysPrep</strong></li>\n<li>When the EC2 instance is finally stopped, you can create an image from the AWS console.</li>\n</ol>\n\n<p>This new AMI was able to run my UserData scripts properly.</p>\n", "OwnerUserId": "1229195", "LastActivityDate": "2016-06-15T05:38:06.077", "CommentCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "120456334", "PostHistoryTypeId": "2", "PostId": "37826953", "RevisionGUID": "37e10988-e097-4a86-b4ca-03f24c22f51d", "CreationDate": "2016-06-15T05:38:06.077", "UserId": "1229195", "Text": "I had a heck of a time getting the scripts to run on my AMI as well. **It worked when I used a standard Amazon AMI**, but it didn't work with my custom build AMIs.\r\n\r\nI then found this link [Create a Standard Amazon Machine Image Using Sysprep][1].\r\n\r\nTo summarize, I\r\n\r\n 1. I made sure termination protection was turned on (this caused me to lose all my work once)\r\n 1. Launched into a new Windows instance\r\n 1. I customized the instance by doing things like installing windows features I needed and installing an .MSI that I needed.\r\n 1. I turned on Windows Updates and cleared the recycle bin\r\n 1. I ran `EC2ConfigService Settings` from **Start** -> **All Programs**\r\n 1. I checked \"*Enable UserData execution for next service start (automatically enabled at SysPrep) eg. `<script></script> or <powershell></powershell>`*\" on the **General** tab.\r\n 1. Make sure you set a proper password policy on the **Image** tab. I chose Random.\r\n 1. Click **Apply** and then click **Shutdown with SysPrep**\r\n 1. When the EC2 instance is finally stopped, you can create an image from the AWS console.\r\n \r\nThis new AMI was able to run my UserData scripts properly.\r\n\r\n  [1]: https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ami-create-standard.html", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "I made sure termination protection was turned on (this caused me to lose all my work once) 1. Launched into a new Windows instance 1. I customized the instance by doing things like installing windows features I needed and installing an .MSI that I needed. ", "keywords": ["instance"]}, {"source": "Text", "text": "1. I turned on Windows Updates and cleared the recycle bin 1. I ran `EC2ConfigService Settings` from **Start** -> **All Programs** 1. I checked \"*Enable UserData execution for next service start (automatically enabled at SysPrep) eg. ` or `*\" on the **General** tab. 1. Make sure you set a proper password policy on the **Image** tab. I chose Random. ", "keywords": ["policy"]}, {"source": "Text", "text": "When the EC2 instance is finally stopped, you can create an image from the AWS console. ", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "To summarize, I I made sure termination protection was turned on (this caused me to lose all my work once) Launched into a new Windows instance I customized the instance by doing things like installing windows features I needed and installing an .MSI that I needed. ", "keywords": ["instance"]}, {"source": "Body", "text": "Make sure you set a proper password policy on the Image tab. ", "keywords": ["policy"]}, {"source": "Body", "text": "Click Apply and then click Shutdown with SysPrep When the EC2 instance is finally stopped, you can create an image from the AWS console. ", "keywords": ["instance"]}]}, {"Id": "18393765", "PostTypeId": "2", "ParentId": "17663478", "CreationDate": "2013-08-23T02:36:13.070", "Score": "4", "Body": "<p>Couple of things to look for...</p>\n\n<ol>\n<li>Verify the cfn tools are installed</li>\n<li>Look in the c:\\cfn subdirectory - there's a path called logs floating around there somewhere - review that.</li>\n<li>Look under program files\\amazon\\ec2tools - there's a log directory in there.  Check to make sure that it's running the script</li>\n<li>In the directory above there's a folder called scripts - you should see something that looks like userdata.bat - try running that to confirm it works.</li>\n</ol>\n\n<p>Troubleshooting CloudFormation and Userdata is time consuming - and can be costly - because you get billed for an hour every time you start and stop the instance.  Something that works to great advantage for Amazon.  (Bring on per minute pricing please)</p>\n", "OwnerUserId": "735268", "LastActivityDate": "2013-08-23T02:36:13.070", "CommentCount": "1", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "28913818", "PostId": "18393765", "Score": "0", "Text": "C:\\Program Files\\Amazon\\Ec2ConfigService\\Logs\\Ec2ConfigLog.txt was the most useful file I found. It contains a log of your scripts which are installed under C:\\Program Files\\Amazon\\Ec2ConfigService\\Scripts as UserScript.bat/ps1", "CreationDate": "2013-10-21T11:53:34.837", "UserId": "320546", "filtered-sentences": []}], "history": [{"Id": "45813469", "PostHistoryTypeId": "2", "PostId": "18393765", "RevisionGUID": "208d675a-df4b-4c11-9a0c-54bf035c511d", "CreationDate": "2013-08-23T02:36:13.070", "UserId": "735268", "Text": "Couple of things to look for...\r\n\r\n 1. Verify the cfn tools are installed\r\n 2. Look in the c:\\\\cfn subdirectory - there's a path called logs floating around there somewhere - review that.\r\n 3. Look under program files\\amazon\\ec2tools - there's a log directory in there.  Check to make sure that it's running the script\r\n 4. In the directory above there's a folder called scripts - you should see something that looks like userdata.bat - try running that to confirm it works.\r\n\r\nTroubleshooting CloudFormation and Userdata is time consuming - and can be costly - because you get billed for an hour every time you start and stop the instance.  Something that works to great advantage for Amazon.  (Bring on per minute pricing please)", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "Troubleshooting CloudFormation and Userdata is time consuming - and can be costly - because you get billed for an hour every time you start and stop the instance. ", "keywords": ["bill", "instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "Troubleshooting CloudFormation and Userdata is time consuming - and can be costly - because you get billed for an hour every time you start and stop the instance. ", "keywords": ["bill", "instance"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Title", "text": "How do I execute UserData content in a Windows EC2 instance", "keywords": ["instance"]}]}
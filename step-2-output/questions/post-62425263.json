{"Id": "62425263", "PostTypeId": "1", "CreationDate": "2020-06-17T08:59:47.883", "Score": "0", "ViewCount": "1037", "Body": "<p>I have this AWS exercise scenario, where your customer has not used AWS before, and is encountering issues when trying to launch a web application as a proof of concept.\nSo far your customer has launched an AWS Elastic Load Balancer (ELB) and an Amazon Elastic Compute Cloud (EC2) instance acting as the web server. Both are deployed in a Virtual Private Cloud (VPC) on AWS. While your customer's initial deployment aims to present a static web page to its users (demo.html located in the document root of the web server</p>\n\n<p>Below is the cloud formation script:</p>\n\n<pre><code>AWSTemplateFormatVersion: '2010-09-09'\nDescription: |\n\n  AWS CloudFormation SA Assignment - WARNING: You will be billed for the\n  AWS resources used if you create a stack from this template and consume all your\n  promotional credit. \n\n  We recommend you create a billing alert. Once you submit your\n  answers delete the CloudFormation stack and terminate any other resources launched\n  in relation to this exercise. \n\n  Feel free to do that as soon as you have submitted\n  your document and before your interview.\n\nParameters:\n\n\n  CandidateName:\n    Description: 'Please input your first and last name:'\n    Type: String\n    MaxLength: '50'\n    MinLength: '3'\n    ConstraintDescription: Please input your full name.\n\nResources:\n\n\n    SAVPC:\n      Type: AWS::EC2::VPC\n      Properties:\n        CidrBlock: 10.0.0.0/16\n        InstanceTenancy: default\n        EnableDnsSupport: 'true'\n        EnableDnsHostnames: 'true'\n        Tags:\n          - Key: environment\n            Value: sa-assignment\n          - Key: Name\n            Value: !Join ['-', [SAVPC, !Ref 'CandidateName']]\n\n    PublicSubnetA:\n      Type: AWS::EC2::Subnet\n      Properties:\n        CidrBlock: 10.0.0.0/24\n        AvailabilityZone: eu-west-1a\n        MapPublicIpOnLaunch: 'True'\n        VpcId: !Ref 'SAVPC'\n        Tags:\n          - Key: environment\n            Value: sa-assignment\n          - Key: Name\n            Value: !Join ['-', [PublicSubnetA, !Ref 'CandidateName']]\n\n    PublicSubnetB:\n      Type: AWS::EC2::Subnet\n      Properties:\n        CidrBlock: 10.0.1.0/24\n        AvailabilityZone: eu-west-1b\n        MapPublicIpOnLaunch: 'True'\n        VpcId: !Ref 'SAVPC'\n        Tags:\n          - Key: environment\n            Value: sa-assignment\n          - Key: Name\n            Value: !Join ['-', [PublicSubnetB, !Ref 'CandidateName']]\n\n    PrivateSubnetA:\n      Type: AWS::EC2::Subnet\n      Properties:\n        CidrBlock: 10.0.2.0/24\n        AvailabilityZone: eu-west-1a\n        VpcId: !Ref 'SAVPC'\n        Tags:\n          - Key: environment\n            Value: sa-assignment\n          - Key: Name\n            Value: !Join ['-', [PrivateSubnetA, !Ref 'CandidateName']]\n\n    PrivateSubnetB:\n      Type: AWS::EC2::Subnet\n      Properties:\n        CidrBlock: 10.0.3.0/24\n        AvailabilityZone: eu-west-1b\n        VpcId: !Ref 'SAVPC'\n        Tags:\n          - Key: environment\n            Value: sa-assignment\n          - Key: Name\n            Value: !Join ['-', [PrivateSubnetB, !Ref 'CandidateName']]\n\n    SAIGW:\n      Type: AWS::EC2::InternetGateway\n      Properties:\n        Tags:\n          - Key: environment\n            Value: sa-assignment\n          - Key: Name\n            Value: !Join ['-', [IGW, !Ref 'CandidateName']]\n\n    SANetworkACL:\n      Type: AWS::EC2::NetworkAcl\n      Properties:\n        VpcId: !Ref 'SAVPC'\n        Tags:\n          - Key: environment\n            Value: sa-assignment\n          - Key: Name\n            Value: !Join ['-', [NACL, !Ref 'CandidateName']]\n\n    SARoutePublic:\n      Type: AWS::EC2::RouteTable\n      Properties:\n        VpcId: !Ref 'SAVPC'\n        Tags:\n          - Key: environment\n            Value: sa-assignment\n          - Key: Name\n            Value: !Join ['-', [PublicRoute, !Ref 'CandidateName']]\n\n    SARoutePrivate:\n      Type: AWS::EC2::RouteTable\n      Properties:\n        VpcId: !Ref 'SAVPC'\n        Tags:\n          - Key: environment\n            Value: sa-assignment\n          - Key: Name\n            Value: !Join ['-', [PrivateRoute, !Ref 'CandidateName']]\n\n    SAInstance1:\n      Type: AWS::EC2::Instance\n      Properties:\n        DisableApiTermination: 'false'\n        InstanceInitiatedShutdownBehavior: stop\n        ImageId: ami-047bb4163c506cd98\n        InstanceType: t2.micro\n        Monitoring: 'false'\n        UserData: IyEvYmluL2Jhc2gNCnl1bSB1cGRhdGUgLXkNCnl1bSBpbnN0YWxsIC15IGh0dHBkMjQNCnNlcnZpY2UgaHR0cGQgc3RhcnQNCmNoa2NvbmZpZyBodHRwZCBvbg0KZ3JvdXBhZGQgd3d3DQp1c2VybW9kIC1hIC1HIHd3dyBlYzItdXNlcg0KY2hvd24gLVIgcm9vdDp3d3cgL3Zhci93d3cNCmNobW9kIDI3NzUgL3Zhci93d3cNCmZpbmQgL3Zhci93d3cgLXR5cGUgZCAtZXhlYyBjaG1vZCAyNzc1IHt9ICsNCmZpbmQgL3Zhci93d3cgLXR5cGUgZiAtZXhlYyBjaG1vZCAwNjY0IHt9ICsNCmVjaG8gJzxodG1sPjxoZWFkPjx0aXRsZT5TdWNjZXNzITwvdGl0bGU+PC9oZWFkPjxib2R5PjxpZnJhbWUgd2lkdGg9IjU2MCIgaGVpZ2h0PSIzMTUiIHNyYz0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvSnMyMXhLTUZkd3ciIGZyYW1lYm9yZGVyPSIwIiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+PC9ib2R5PjwvaHRtbD4nID4gL3Zhci93d3cvaHRtbC9kZW1vLmh0bWw=\n        Tags:\n          - Key: environment\n            Value: sa-assignment\n          - Key: Name\n            Value: !Join ['-', [Instance1, !Ref 'CandidateName']]\n        NetworkInterfaces:\n        - AssociatePublicIpAddress: 'true'\n          DeleteOnTermination: 'true'\n          Description: Primary network interface\n          DeviceIndex: 0\n          SubnetId: !Ref 'PublicSubnetA'\n          GroupSet: [!Ref 'SASGapp']\n\n    SAelb:\n      Type: AWS::ElasticLoadBalancing::LoadBalancer\n      Properties:\n        Subnets: [!Ref 'PublicSubnetB']\n        Instances: [!Ref 'SAInstance1']\n        SecurityGroups: [!Ref 'SASGELB']\n        Listeners:\n        - LoadBalancerPort: '80'\n          InstancePort: '80'\n          Protocol: HTTP\n        HealthCheck:\n          HealthyThreshold: '2'\n          Interval: '15'\n          Target: TCP:443\n          Timeout: '5'\n          UnhealthyThreshold: '2'\n        Tags:\n          - Key: environment\n            Value: sa-assignment\n          - Key: Name\n            Value: !Join ['-', [ELB, !Ref 'CandidateName']]\n\n    SASGELB:\n      Type: AWS::EC2::SecurityGroup\n      Properties:\n        GroupDescription: SA Assignment - ELB security group\n        VpcId: !Ref 'SAVPC'\n        Tags:\n          - Key: environment\n            Value: sa-assignment\n          - Key: Name\n            Value: ELBSecurityGroup\n\n    SASGapp:\n      Type: AWS::EC2::SecurityGroup\n      Properties:\n        GroupDescription: SA Assignment - App server security group\n        VpcId: !Ref 'SAVPC'\n        Tags:\n          - Key: environment\n            Value: sa-assignment\n          - Key: Name\n            Value: AppServerSecurityGroup\n\n    SANACLEntry1:\n      Type: AWS::EC2::NetworkAclEntry\n      Properties:\n        CidrBlock: 0.0.0.0/0\n        Egress: 'true'\n        Protocol: '-1'\n        RuleAction: allow\n        RuleNumber: '100'\n        NetworkAclId: !Ref 'SANetworkACL'\n\n    SANACLEntry2:\n      Type: AWS::EC2::NetworkAclEntry\n      Properties:\n        CidrBlock: 0.0.0.0/0\n        Protocol: '-1'\n        RuleAction: allow\n        RuleNumber: '100'\n        NetworkAclId: !Ref 'SANetworkACL'\n\n    subnetacl1:\n      Type: AWS::EC2::SubnetNetworkAclAssociation\n      Properties:\n        NetworkAclId: !Ref 'SANetworkACL'\n        SubnetId: !Ref 'PublicSubnetA'\n\n    subnetacl2:\n      Type: AWS::EC2::SubnetNetworkAclAssociation\n      Properties:\n        NetworkAclId: !Ref 'SANetworkACL'\n        SubnetId: !Ref 'PublicSubnetB'\n\n    subnetacl3:\n      Type: AWS::EC2::SubnetNetworkAclAssociation\n      Properties:\n        NetworkAclId: !Ref 'SANetworkACL'\n        SubnetId: !Ref 'PrivateSubnetA'\n\n    subnetacl4:\n      Type: AWS::EC2::SubnetNetworkAclAssociation\n      Properties:\n        NetworkAclId: !Ref 'SANetworkACL'\n        SubnetId: !Ref 'PrivateSubnetB'\n\n    SAIGWAttachment:\n      Type: AWS::EC2::VPCGatewayAttachment\n      Properties:\n        VpcId: !Ref 'SAVPC'\n        InternetGatewayId: !Ref 'SAIGW'\n\n    subnetRoutePublicA:\n      Type: AWS::EC2::SubnetRouteTableAssociation\n      Properties:\n        RouteTableId: !Ref 'SARoutePublic'\n        SubnetId: !Ref 'PublicSubnetA'\n\n    subnetRoutePublicB:\n      Type: AWS::EC2::SubnetRouteTableAssociation\n      Properties:\n        RouteTableId: !Ref 'SARoutePublic'\n        SubnetId: !Ref 'PublicSubnetB'\n\n    subnetRoutePrivateA:\n      Type: AWS::EC2::SubnetRouteTableAssociation\n      Properties:\n        RouteTableId: !Ref 'SARoutePrivate'\n        SubnetId: !Ref 'PrivateSubnetA'\n\n    subnetRoutePrivateB:\n      Type: AWS::EC2::SubnetRouteTableAssociation\n      Properties:\n        RouteTableId: !Ref 'SARoutePrivate'\n        SubnetId: !Ref 'PrivateSubnetB'\n\n    publicroute:\n      Type: AWS::EC2::Route\n      Properties:\n        DestinationCidrBlock: 0.0.0.0/0\n        RouteTableId: !Ref 'SARoutePublic'\n        GatewayId: !Ref 'SAIGW'\n      DependsOn: SAIGW\n\n\nOutputs:\n\n\n  LoadBalancerDNSName:\n    Description: The DNSName of the load balancer\n    Value: !GetAtt SAelb.DNSName\n</code></pre>\n\n<p>what is the problem with this, is ELB configuration all correct?.</p>\n", "OwnerUserId": "13761393", "LastEditorUserId": "13761393", "LastEditDate": "2020-06-17T09:16:41.860", "LastActivityDate": "2022-09-01T04:08:31.083", "Title": "Troubleshoot Cloudformation script", "Tags": "|amazon-web-services|aws-cloudformation|", "AnswerCount": "2", "CommentCount": "2", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "110404069", "PostId": "62425263", "Score": "0", "Text": "There is nothing wrong with the template. It deploys.", "CreationDate": "2020-06-17T09:22:33.483", "UserId": "248823", "filtered-sentences": []}, {"Id": "110405282", "PostId": "62425263", "Score": "1", "Text": "Is this an assignment you are meant to complete to prove your competency in AWS before applying for a job as a Solutions Architect somewhere?", "CreationDate": "2020-06-17T10:03:17.437", "UserId": "174777", "filtered-sentences": []}], "history": [{"Id": "224264737", "PostHistoryTypeId": "5", "PostId": "62425263", "RevisionGUID": "863f8f18-e534-4722-ba05-9c0e4db6de2f", "CreationDate": "2020-06-17T09:16:41.860", "UserId": "13761393", "Comment": "added 1 character in body", "Text": "I have this AWS exercise scenario, where your customer has not used AWS before, and is encountering issues when trying to launch a web application as a proof of concept.\r\nSo far your customer has launched an AWS Elastic Load Balancer (ELB) and an Amazon Elastic Compute Cloud (EC2) instance acting as the web server. Both are deployed in a Virtual Private Cloud (VPC) on AWS. While your customer's initial deployment aims to present a static web page to its users (demo.html located in the document root of the web server\r\n\r\nBelow is the cloud formation script:\r\n\r\n\r\n    AWSTemplateFormatVersion: '2010-09-09'\r\n    Description: |\r\n    \r\n      AWS CloudFormation SA Assignment - WARNING: You will be billed for the\r\n      AWS resources used if you create a stack from this template and consume all your\r\n      promotional credit. \r\n    \r\n      We recommend you create a billing alert. Once you submit your\r\n      answers delete the CloudFormation stack and terminate any other resources launched\r\n      in relation to this exercise. \r\n    \r\n      Feel free to do that as soon as you have submitted\r\n      your document and before your interview.\r\n    \r\n    Parameters:\r\n    \r\n    \r\n      CandidateName:\r\n        Description: 'Please input your first and last name:'\r\n        Type: String\r\n        MaxLength: '50'\r\n        MinLength: '3'\r\n        ConstraintDescription: Please input your full name.\r\n    \r\n    Resources:\r\n    \r\n    \r\n        SAVPC:\r\n          Type: AWS::EC2::VPC\r\n          Properties:\r\n            CidrBlock: 10.0.0.0/16\r\n            InstanceTenancy: default\r\n            EnableDnsSupport: 'true'\r\n            EnableDnsHostnames: 'true'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [SAVPC, !Ref 'CandidateName']]\r\n    \r\n        PublicSubnetA:\r\n          Type: AWS::EC2::Subnet\r\n          Properties:\r\n            CidrBlock: 10.0.0.0/24\r\n            AvailabilityZone: eu-west-1a\r\n            MapPublicIpOnLaunch: 'True'\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [PublicSubnetA, !Ref 'CandidateName']]\r\n    \r\n        PublicSubnetB:\r\n          Type: AWS::EC2::Subnet\r\n          Properties:\r\n            CidrBlock: 10.0.1.0/24\r\n            AvailabilityZone: eu-west-1b\r\n            MapPublicIpOnLaunch: 'True'\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [PublicSubnetB, !Ref 'CandidateName']]\r\n    \r\n        PrivateSubnetA:\r\n          Type: AWS::EC2::Subnet\r\n          Properties:\r\n            CidrBlock: 10.0.2.0/24\r\n            AvailabilityZone: eu-west-1a\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [PrivateSubnetA, !Ref 'CandidateName']]\r\n    \r\n        PrivateSubnetB:\r\n          Type: AWS::EC2::Subnet\r\n          Properties:\r\n            CidrBlock: 10.0.3.0/24\r\n            AvailabilityZone: eu-west-1b\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [PrivateSubnetB, !Ref 'CandidateName']]\r\n    \r\n        SAIGW:\r\n          Type: AWS::EC2::InternetGateway\r\n          Properties:\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [IGW, !Ref 'CandidateName']]\r\n    \r\n        SANetworkACL:\r\n          Type: AWS::EC2::NetworkAcl\r\n          Properties:\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [NACL, !Ref 'CandidateName']]\r\n    \r\n        SARoutePublic:\r\n          Type: AWS::EC2::RouteTable\r\n          Properties:\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [PublicRoute, !Ref 'CandidateName']]\r\n    \r\n        SARoutePrivate:\r\n          Type: AWS::EC2::RouteTable\r\n          Properties:\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [PrivateRoute, !Ref 'CandidateName']]\r\n    \r\n        SAInstance1:\r\n          Type: AWS::EC2::Instance\r\n          Properties:\r\n            DisableApiTermination: 'false'\r\n            InstanceInitiatedShutdownBehavior: stop\r\n            ImageId: ami-047bb4163c506cd98\r\n            InstanceType: t2.micro\r\n            Monitoring: 'false'\r\n            UserData: IyEvYmluL2Jhc2gNCnl1bSB1cGRhdGUgLXkNCnl1bSBpbnN0YWxsIC15IGh0dHBkMjQNCnNlcnZpY2UgaHR0cGQgc3RhcnQNCmNoa2NvbmZpZyBodHRwZCBvbg0KZ3JvdXBhZGQgd3d3DQp1c2VybW9kIC1hIC1HIHd3dyBlYzItdXNlcg0KY2hvd24gLVIgcm9vdDp3d3cgL3Zhci93d3cNCmNobW9kIDI3NzUgL3Zhci93d3cNCmZpbmQgL3Zhci93d3cgLXR5cGUgZCAtZXhlYyBjaG1vZCAyNzc1IHt9ICsNCmZpbmQgL3Zhci93d3cgLXR5cGUgZiAtZXhlYyBjaG1vZCAwNjY0IHt9ICsNCmVjaG8gJzxodG1sPjxoZWFkPjx0aXRsZT5TdWNjZXNzITwvdGl0bGU+PC9oZWFkPjxib2R5PjxpZnJhbWUgd2lkdGg9IjU2MCIgaGVpZ2h0PSIzMTUiIHNyYz0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvSnMyMXhLTUZkd3ciIGZyYW1lYm9yZGVyPSIwIiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+PC9ib2R5PjwvaHRtbD4nID4gL3Zhci93d3cvaHRtbC9kZW1vLmh0bWw=\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [Instance1, !Ref 'CandidateName']]\r\n            NetworkInterfaces:\r\n            - AssociatePublicIpAddress: 'true'\r\n              DeleteOnTermination: 'true'\r\n              Description: Primary network interface\r\n              DeviceIndex: 0\r\n              SubnetId: !Ref 'PublicSubnetA'\r\n              GroupSet: [!Ref 'SASGapp']\r\n              \r\n        SAelb:\r\n          Type: AWS::ElasticLoadBalancing::LoadBalancer\r\n          Properties:\r\n            Subnets: [!Ref 'PublicSubnetB']\r\n            Instances: [!Ref 'SAInstance1']\r\n            SecurityGroups: [!Ref 'SASGELB']\r\n            Listeners:\r\n            - LoadBalancerPort: '80'\r\n              InstancePort: '80'\r\n              Protocol: HTTP\r\n            HealthCheck:\r\n              HealthyThreshold: '2'\r\n              Interval: '15'\r\n              Target: TCP:443\r\n              Timeout: '5'\r\n              UnhealthyThreshold: '2'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [ELB, !Ref 'CandidateName']]\r\n    \r\n        SASGELB:\r\n          Type: AWS::EC2::SecurityGroup\r\n          Properties:\r\n            GroupDescription: SA Assignment - ELB security group\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: ELBSecurityGroup\r\n    \r\n        SASGapp:\r\n          Type: AWS::EC2::SecurityGroup\r\n          Properties:\r\n            GroupDescription: SA Assignment - App server security group\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: AppServerSecurityGroup\r\n    \r\n        SANACLEntry1:\r\n          Type: AWS::EC2::NetworkAclEntry\r\n          Properties:\r\n            CidrBlock: 0.0.0.0/0\r\n            Egress: 'true'\r\n            Protocol: '-1'\r\n            RuleAction: allow\r\n            RuleNumber: '100'\r\n            NetworkAclId: !Ref 'SANetworkACL'\r\n    \r\n        SANACLEntry2:\r\n          Type: AWS::EC2::NetworkAclEntry\r\n          Properties:\r\n            CidrBlock: 0.0.0.0/0\r\n            Protocol: '-1'\r\n            RuleAction: allow\r\n            RuleNumber: '100'\r\n            NetworkAclId: !Ref 'SANetworkACL'\r\n    \r\n        subnetacl1:\r\n          Type: AWS::EC2::SubnetNetworkAclAssociation\r\n          Properties:\r\n            NetworkAclId: !Ref 'SANetworkACL'\r\n            SubnetId: !Ref 'PublicSubnetA'\r\n    \r\n        subnetacl2:\r\n          Type: AWS::EC2::SubnetNetworkAclAssociation\r\n          Properties:\r\n            NetworkAclId: !Ref 'SANetworkACL'\r\n            SubnetId: !Ref 'PublicSubnetB'\r\n    \r\n        subnetacl3:\r\n          Type: AWS::EC2::SubnetNetworkAclAssociation\r\n          Properties:\r\n            NetworkAclId: !Ref 'SANetworkACL'\r\n            SubnetId: !Ref 'PrivateSubnetA'\r\n    \r\n        subnetacl4:\r\n          Type: AWS::EC2::SubnetNetworkAclAssociation\r\n          Properties:\r\n            NetworkAclId: !Ref 'SANetworkACL'\r\n            SubnetId: !Ref 'PrivateSubnetB'\r\n    \r\n        SAIGWAttachment:\r\n          Type: AWS::EC2::VPCGatewayAttachment\r\n          Properties:\r\n            VpcId: !Ref 'SAVPC'\r\n            InternetGatewayId: !Ref 'SAIGW'\r\n    \r\n        subnetRoutePublicA:\r\n          Type: AWS::EC2::SubnetRouteTableAssociation\r\n          Properties:\r\n            RouteTableId: !Ref 'SARoutePublic'\r\n            SubnetId: !Ref 'PublicSubnetA'\r\n    \r\n        subnetRoutePublicB:\r\n          Type: AWS::EC2::SubnetRouteTableAssociation\r\n          Properties:\r\n            RouteTableId: !Ref 'SARoutePublic'\r\n            SubnetId: !Ref 'PublicSubnetB'\r\n    \r\n        subnetRoutePrivateA:\r\n          Type: AWS::EC2::SubnetRouteTableAssociation\r\n          Properties:\r\n            RouteTableId: !Ref 'SARoutePrivate'\r\n            SubnetId: !Ref 'PrivateSubnetA'\r\n    \r\n        subnetRoutePrivateB:\r\n          Type: AWS::EC2::SubnetRouteTableAssociation\r\n          Properties:\r\n            RouteTableId: !Ref 'SARoutePrivate'\r\n            SubnetId: !Ref 'PrivateSubnetB'\r\n    \r\n        publicroute:\r\n          Type: AWS::EC2::Route\r\n          Properties:\r\n            DestinationCidrBlock: 0.0.0.0/0\r\n            RouteTableId: !Ref 'SARoutePublic'\r\n            GatewayId: !Ref 'SAIGW'\r\n          DependsOn: SAIGW\r\n    \r\n        \r\n    Outputs:\r\n    \r\n    \r\n      LoadBalancerDNSName:\r\n        Description: The DNSName of the load balancer\r\n        Value: !GetAtt SAelb.DNSName\r\n\r\nwhat is the problem with this, is ELB configuration all correct?.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "So far your customer has launched an AWS Elastic Load Balancer (ELB) and an Amazon Elastic Compute Cloud (EC2) instance acting as the web server. ", "keywords": ["instance"]}, {"source": "Text", "text": "You will be billed for the AWS resources used if you create a stack from this template and consume all your promotional credit. ", "keywords": ["bill"]}, {"source": "Text", "text": "We recommend you create a billing alert. ", "keywords": ["bill"]}, {"source": "Text", "text": "Parameters: CandidateName: Description: 'Please input your first and last name:' Type: String MaxLength: '50' MinLength: '3' ConstraintDescription: Please input your full name. Resources: SAVPC: Type: AWS::EC2::VPC Properties: CidrBlock: 10.0.0.0/16 InstanceTenancy: default EnableDnsSupport: 'true' EnableDnsHostnames: 'true' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [SAVPC, !Ref 'CandidateName']] PublicSubnetA: Type: AWS::EC2::Subnet Properties: CidrBlock: 10.0.0.0/24 AvailabilityZone: eu-west-1a MapPublicIpOnLaunch: 'True' VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PublicSubnetA, !Ref 'CandidateName']] PublicSubnetB: Type: AWS::EC2::Subnet Properties: CidrBlock: 10.0.1.0/24 AvailabilityZone: eu-west-1b MapPublicIpOnLaunch: 'True' VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PublicSubnetB, !Ref 'CandidateName']] PrivateSubnetA: Type: AWS::EC2::Subnet Properties: CidrBlock: 10.0.2.0/24 AvailabilityZone: eu-west-1a VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PrivateSubnetA, !Ref 'CandidateName']] PrivateSubnetB: Type: AWS::EC2::Subnet Properties: CidrBlock: 10.0.3.0/24 AvailabilityZone: eu-west-1b VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PrivateSubnetB, !Ref 'CandidateName']] SAIGW: Type: AWS::EC2::InternetGateway Properties: Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [IGW, !Ref 'CandidateName']] SANetworkACL: Type: AWS::EC2::NetworkAcl Properties: VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [NACL, !Ref 'CandidateName']] SARoutePublic: Type: AWS::EC2::RouteTable Properties: VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PublicRoute, !Ref 'CandidateName']] SARoutePrivate: Type: AWS::EC2::RouteTable Properties: VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PrivateRoute, !Ref 'CandidateName']] SAInstance1: Type: AWS::EC2::Instance Properties: DisableApiTermination: 'false' InstanceInitiatedShutdownBehavior: stop ImageId: ami-047bb4163c506cd98 InstanceType: t2.micro Monitoring: 'false' UserData: IyEvYmluL2Jhc2gNCnl1bSB1cGRhdGUgLXkNCnl1bSBpbnN0YWxsIC15IGh0dHBkMjQNCnNlcnZpY2UgaHR0cGQgc3RhcnQNCmNoa2NvbmZpZyBodHRwZCBvbg0KZ3JvdXBhZGQgd3d3DQp1c2VybW9kIC1hIC1HIHd3dyBlYzItdXNlcg0KY2hvd24gLVIgcm9vdDp3d3cgL3Zhci93d3cNCmNobW9kIDI3NzUgL3Zhci93d3cNCmZpbmQgL3Zhci93d3cgLXR5cGUgZCAtZXhlYyBjaG1vZCAyNzc1IHt9ICsNCmZpbmQgL3Zhci93d3cgLXR5cGUgZiAtZXhlYyBjaG1vZCAwNjY0IHt9ICsNCmVjaG8gJzxodG1sPjxoZWFkPjx0aXRsZT5TdWNjZXNzITwvdGl0bGU+PC9oZWFkPjxib2R5PjxpZnJhbWUgd2lkdGg9IjU2MCIgaGVpZ2h0PSIzMTUiIHNyYz0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvSnMyMXhLTUZkd3ciIGZyYW1lYm9yZGVyPSIwIiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+PC9ib2R5PjwvaHRtbD4nID4gL3Zhci93d3cvaHRtbC9kZW1vLmh0bWw= Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [Instance1, !Ref 'CandidateName']] NetworkInterfaces: - AssociatePublicIpAddress: 'true' DeleteOnTermination: 'true' Description: Primary network interface DeviceIndex: 0 SubnetId: !Ref 'PublicSubnetA' GroupSet: [!Ref 'SASGapp'] SAelb: Type: AWS::ElasticLoadBalancing::LoadBalancer Properties: Subnets: [!Ref 'PublicSubnetB'] Instances: [!Ref 'SAInstance1'] SecurityGroups: [!Ref 'SASGELB'] Listeners: - LoadBalancerPort: '80' InstancePort: '80' Protocol: HTTP HealthCheck: HealthyThreshold: '2' Interval: '15' Target: TCP:443 Timeout: '5' UnhealthyThreshold: '2' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [ELB, !Ref 'CandidateName']] SASGELB: Type: AWS::EC2::SecurityGroup Properties: GroupDescription: SA Assignment - ELB security group VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: ELBSecurityGroup SASGapp: Type: AWS::EC2::SecurityGroup Properties: GroupDescription: SA Assignment - App server security group VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: AppServerSecurityGroup SANACLEntry1: Type: AWS::EC2::NetworkAclEntry Properties: CidrBlock: 0.0.0.0/0 Egress: 'true' Protocol: '-1' RuleAction: allow RuleNumber: '100' NetworkAclId: !Ref 'SANetworkACL' SANACLEntry2: Type: AWS::EC2::NetworkAclEntry Properties: CidrBlock: 0.0.0.0/0 Protocol: '-1' RuleAction: allow RuleNumber: '100' NetworkAclId: !Ref 'SANetworkACL' subnetacl1: Type: AWS::EC2::SubnetNetworkAclAssociation Properties: NetworkAclId: !Ref 'SANetworkACL' SubnetId: !Ref 'PublicSubnetA' subnetacl2: Type: AWS::EC2::SubnetNetworkAclAssociation Properties: NetworkAclId: !Ref 'SANetworkACL' SubnetId: !Ref 'PublicSubnetB' subnetacl3: Type: AWS::EC2::SubnetNetworkAclAssociation Properties: NetworkAclId: !Ref 'SANetworkACL' SubnetId: !Ref 'PrivateSubnetA' subnetacl4: Type: AWS::EC2::SubnetNetworkAclAssociation Properties: NetworkAclId: !Ref 'SANetworkACL' SubnetId: !Ref 'PrivateSubnetB' SAIGWAttachment: Type: AWS::EC2::VPCGatewayAttachment Properties: VpcId: !Ref 'SAVPC' InternetGatewayId: !Ref 'SAIGW' subnetRoutePublicA: Type: AWS::EC2::SubnetRouteTableAssociation Properties: RouteTableId: !Ref 'SARoutePublic' SubnetId: !Ref 'PublicSubnetA' subnetRoutePublicB: Type: AWS::EC2::SubnetRouteTableAssociation Properties: RouteTableId: !Ref 'SARoutePublic' SubnetId: !Ref 'PublicSubnetB' subnetRoutePrivateA: Type: AWS::EC2::SubnetRouteTableAssociation Properties: RouteTableId: !Ref 'SARoutePrivate' SubnetId: !Ref 'PrivateSubnetA' subnetRoutePrivateB: Type: AWS::EC2::SubnetRouteTableAssociation Properties: RouteTableId: !Ref 'SARoutePrivate' SubnetId: !Ref 'PrivateSubnetB' publicroute: Type: AWS::EC2::Route Properties: DestinationCidrBlock: 0.0.0.0/0 RouteTableId: !Ref 'SARoutePublic' GatewayId: !Ref 'SAIGW' DependsOn: SAIGW Outputs: LoadBalancerDNSName: Description: The DNSName of the load balancer Value: !GetAtt SAelb.DNSName what is the problem with this, is ELB configuration all correct?", "keywords": ["instance"]}]}, {"Id": "224263505", "PostHistoryTypeId": "2", "PostId": "62425263", "RevisionGUID": "355064e6-c843-414c-bc5e-48e4dba3d496", "CreationDate": "2020-06-17T08:59:47.883", "UserId": "13761393", "Text": "I have this AWS exercise scenario, where your customer has not used AWS before, and is encountering issues when trying to launch a web application as a proof of concept.\r\nSo far your customer has launched an AWS Elastic Load Balancer (ELB) and an Amazon Elastic Compute Cloud (EC2) instance acting as the web server. Both are deployed in a Virtual Private Cloud (VPC) on AWS. While your customer's initial deployment aims to present a static web page to its users (demo.html located in the document root of the web server\r\n\r\nBelow id the cloud formation script\r\n\r\n\r\nAWSTemplateFormatVersion: '2010-09-09'\r\nDescription: |\r\n\r\n  AWS CloudFormation SA Assignment - WARNING: You will be billed for the\r\n  AWS resources used if you create a stack from this template and consume all your\r\n  promotional credit. \r\n\r\n  We recommend you create a billing alert. Once you submit your\r\n  answers delete the CloudFormation stack and terminate any other resources launched\r\n  in relation to this exercise. \r\n\r\n  Feel free to do that as soon as you have submitted\r\n  your document and before your interview.\r\n\r\nParameters:\r\n\r\n\r\n  CandidateName:\r\n    Description: 'Please input your first and last name:'\r\n    Type: String\r\n    MaxLength: '50'\r\n    MinLength: '3'\r\n    ConstraintDescription: Please input your full name.\r\n\r\nResources:\r\n\r\n\r\n    SAVPC:\r\n      Type: AWS::EC2::VPC\r\n      Properties:\r\n        CidrBlock: 10.0.0.0/16\r\n        InstanceTenancy: default\r\n        EnableDnsSupport: 'true'\r\n        EnableDnsHostnames: 'true'\r\n        Tags:\r\n          - Key: environment\r\n            Value: sa-assignment\r\n          - Key: Name\r\n            Value: !Join ['-', [SAVPC, !Ref 'CandidateName']]\r\n\r\n    PublicSubnetA:\r\n      Type: AWS::EC2::Subnet\r\n      Properties:\r\n        CidrBlock: 10.0.0.0/24\r\n        AvailabilityZone: eu-west-1a\r\n        MapPublicIpOnLaunch: 'True'\r\n        VpcId: !Ref 'SAVPC'\r\n        Tags:\r\n          - Key: environment\r\n            Value: sa-assignment\r\n          - Key: Name\r\n            Value: !Join ['-', [PublicSubnetA, !Ref 'CandidateName']]\r\n\r\n    PublicSubnetB:\r\n      Type: AWS::EC2::Subnet\r\n      Properties:\r\n        CidrBlock: 10.0.1.0/24\r\n        AvailabilityZone: eu-west-1b\r\n        MapPublicIpOnLaunch: 'True'\r\n        VpcId: !Ref 'SAVPC'\r\n        Tags:\r\n          - Key: environment\r\n            Value: sa-assignment\r\n          - Key: Name\r\n            Value: !Join ['-', [PublicSubnetB, !Ref 'CandidateName']]\r\n\r\n    PrivateSubnetA:\r\n      Type: AWS::EC2::Subnet\r\n      Properties:\r\n        CidrBlock: 10.0.2.0/24\r\n        AvailabilityZone: eu-west-1a\r\n        VpcId: !Ref 'SAVPC'\r\n        Tags:\r\n          - Key: environment\r\n            Value: sa-assignment\r\n          - Key: Name\r\n            Value: !Join ['-', [PrivateSubnetA, !Ref 'CandidateName']]\r\n\r\n    PrivateSubnetB:\r\n      Type: AWS::EC2::Subnet\r\n      Properties:\r\n        CidrBlock: 10.0.3.0/24\r\n        AvailabilityZone: eu-west-1b\r\n        VpcId: !Ref 'SAVPC'\r\n        Tags:\r\n          - Key: environment\r\n            Value: sa-assignment\r\n          - Key: Name\r\n            Value: !Join ['-', [PrivateSubnetB, !Ref 'CandidateName']]\r\n\r\n    SAIGW:\r\n      Type: AWS::EC2::InternetGateway\r\n      Properties:\r\n        Tags:\r\n          - Key: environment\r\n            Value: sa-assignment\r\n          - Key: Name\r\n            Value: !Join ['-', [IGW, !Ref 'CandidateName']]\r\n\r\n    SANetworkACL:\r\n      Type: AWS::EC2::NetworkAcl\r\n      Properties:\r\n        VpcId: !Ref 'SAVPC'\r\n        Tags:\r\n          - Key: environment\r\n            Value: sa-assignment\r\n          - Key: Name\r\n            Value: !Join ['-', [NACL, !Ref 'CandidateName']]\r\n\r\n    SARoutePublic:\r\n      Type: AWS::EC2::RouteTable\r\n      Properties:\r\n        VpcId: !Ref 'SAVPC'\r\n        Tags:\r\n          - Key: environment\r\n            Value: sa-assignment\r\n          - Key: Name\r\n            Value: !Join ['-', [PublicRoute, !Ref 'CandidateName']]\r\n\r\n    SARoutePrivate:\r\n      Type: AWS::EC2::RouteTable\r\n      Properties:\r\n        VpcId: !Ref 'SAVPC'\r\n        Tags:\r\n          - Key: environment\r\n            Value: sa-assignment\r\n          - Key: Name\r\n            Value: !Join ['-', [PrivateRoute, !Ref 'CandidateName']]\r\n\r\n    SAInstance1:\r\n      Type: AWS::EC2::Instance\r\n      Properties:\r\n        DisableApiTermination: 'false'\r\n        InstanceInitiatedShutdownBehavior: stop\r\n        ImageId: ami-047bb4163c506cd98\r\n        InstanceType: t2.micro\r\n        Monitoring: 'false'\r\n        UserData: IyEvYmluL2Jhc2gNCnl1bSB1cGRhdGUgLXkNCnl1bSBpbnN0YWxsIC15IGh0dHBkMjQNCnNlcnZpY2UgaHR0cGQgc3RhcnQNCmNoa2NvbmZpZyBodHRwZCBvbg0KZ3JvdXBhZGQgd3d3DQp1c2VybW9kIC1hIC1HIHd3dyBlYzItdXNlcg0KY2hvd24gLVIgcm9vdDp3d3cgL3Zhci93d3cNCmNobW9kIDI3NzUgL3Zhci93d3cNCmZpbmQgL3Zhci93d3cgLXR5cGUgZCAtZXhlYyBjaG1vZCAyNzc1IHt9ICsNCmZpbmQgL3Zhci93d3cgLXR5cGUgZiAtZXhlYyBjaG1vZCAwNjY0IHt9ICsNCmVjaG8gJzxodG1sPjxoZWFkPjx0aXRsZT5TdWNjZXNzITwvdGl0bGU+PC9oZWFkPjxib2R5PjxpZnJhbWUgd2lkdGg9IjU2MCIgaGVpZ2h0PSIzMTUiIHNyYz0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvSnMyMXhLTUZkd3ciIGZyYW1lYm9yZGVyPSIwIiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+PC9ib2R5PjwvaHRtbD4nID4gL3Zhci93d3cvaHRtbC9kZW1vLmh0bWw=\r\n        Tags:\r\n          - Key: environment\r\n            Value: sa-assignment\r\n          - Key: Name\r\n            Value: !Join ['-', [Instance1, !Ref 'CandidateName']]\r\n        NetworkInterfaces:\r\n        - AssociatePublicIpAddress: 'true'\r\n          DeleteOnTermination: 'true'\r\n          Description: Primary network interface\r\n          DeviceIndex: 0\r\n          SubnetId: !Ref 'PublicSubnetA'\r\n          GroupSet: [!Ref 'SASGapp']\r\n          \r\n    SAelb:\r\n      Type: AWS::ElasticLoadBalancing::LoadBalancer\r\n      Properties:\r\n        Subnets: [!Ref 'PublicSubnetB']\r\n        Instances: [!Ref 'SAInstance1']\r\n        SecurityGroups: [!Ref 'SASGELB']\r\n        Listeners:\r\n        - LoadBalancerPort: '80'\r\n          InstancePort: '80'\r\n          Protocol: HTTP\r\n        HealthCheck:\r\n          HealthyThreshold: '2'\r\n          Interval: '15'\r\n          Target: TCP:443\r\n          Timeout: '5'\r\n          UnhealthyThreshold: '2'\r\n        Tags:\r\n          - Key: environment\r\n            Value: sa-assignment\r\n          - Key: Name\r\n            Value: !Join ['-', [ELB, !Ref 'CandidateName']]\r\n\r\n    SASGELB:\r\n      Type: AWS::EC2::SecurityGroup\r\n      Properties:\r\n        GroupDescription: SA Assignment - ELB security group\r\n        VpcId: !Ref 'SAVPC'\r\n        Tags:\r\n          - Key: environment\r\n            Value: sa-assignment\r\n          - Key: Name\r\n            Value: ELBSecurityGroup\r\n\r\n    SASGapp:\r\n      Type: AWS::EC2::SecurityGroup\r\n      Properties:\r\n        GroupDescription: SA Assignment - App server security group\r\n        VpcId: !Ref 'SAVPC'\r\n        Tags:\r\n          - Key: environment\r\n            Value: sa-assignment\r\n          - Key: Name\r\n            Value: AppServerSecurityGroup\r\n\r\n    SANACLEntry1:\r\n      Type: AWS::EC2::NetworkAclEntry\r\n      Properties:\r\n        CidrBlock: 0.0.0.0/0\r\n        Egress: 'true'\r\n        Protocol: '-1'\r\n        RuleAction: allow\r\n        RuleNumber: '100'\r\n        NetworkAclId: !Ref 'SANetworkACL'\r\n\r\n    SANACLEntry2:\r\n      Type: AWS::EC2::NetworkAclEntry\r\n      Properties:\r\n        CidrBlock: 0.0.0.0/0\r\n        Protocol: '-1'\r\n        RuleAction: allow\r\n        RuleNumber: '100'\r\n        NetworkAclId: !Ref 'SANetworkACL'\r\n\r\n    subnetacl1:\r\n      Type: AWS::EC2::SubnetNetworkAclAssociation\r\n      Properties:\r\n        NetworkAclId: !Ref 'SANetworkACL'\r\n        SubnetId: !Ref 'PublicSubnetA'\r\n\r\n    subnetacl2:\r\n      Type: AWS::EC2::SubnetNetworkAclAssociation\r\n      Properties:\r\n        NetworkAclId: !Ref 'SANetworkACL'\r\n        SubnetId: !Ref 'PublicSubnetB'\r\n\r\n    subnetacl3:\r\n      Type: AWS::EC2::SubnetNetworkAclAssociation\r\n      Properties:\r\n        NetworkAclId: !Ref 'SANetworkACL'\r\n        SubnetId: !Ref 'PrivateSubnetA'\r\n\r\n    subnetacl4:\r\n      Type: AWS::EC2::SubnetNetworkAclAssociation\r\n      Properties:\r\n        NetworkAclId: !Ref 'SANetworkACL'\r\n        SubnetId: !Ref 'PrivateSubnetB'\r\n\r\n    SAIGWAttachment:\r\n      Type: AWS::EC2::VPCGatewayAttachment\r\n      Properties:\r\n        VpcId: !Ref 'SAVPC'\r\n        InternetGatewayId: !Ref 'SAIGW'\r\n\r\n    subnetRoutePublicA:\r\n      Type: AWS::EC2::SubnetRouteTableAssociation\r\n      Properties:\r\n        RouteTableId: !Ref 'SARoutePublic'\r\n        SubnetId: !Ref 'PublicSubnetA'\r\n\r\n    subnetRoutePublicB:\r\n      Type: AWS::EC2::SubnetRouteTableAssociation\r\n      Properties:\r\n        RouteTableId: !Ref 'SARoutePublic'\r\n        SubnetId: !Ref 'PublicSubnetB'\r\n\r\n    subnetRoutePrivateA:\r\n      Type: AWS::EC2::SubnetRouteTableAssociation\r\n      Properties:\r\n        RouteTableId: !Ref 'SARoutePrivate'\r\n        SubnetId: !Ref 'PrivateSubnetA'\r\n\r\n    subnetRoutePrivateB:\r\n      Type: AWS::EC2::SubnetRouteTableAssociation\r\n      Properties:\r\n        RouteTableId: !Ref 'SARoutePrivate'\r\n        SubnetId: !Ref 'PrivateSubnetB'\r\n\r\n    publicroute:\r\n      Type: AWS::EC2::Route\r\n      Properties:\r\n        DestinationCidrBlock: 0.0.0.0/0\r\n        RouteTableId: !Ref 'SARoutePublic'\r\n        GatewayId: !Ref 'SAIGW'\r\n      DependsOn: SAIGW\r\n\r\n    \r\nOutputs:\r\n\r\n\r\n  LoadBalancerDNSName:\r\n    Description: The DNSName of the load balancer\r\n    Value: !GetAtt SAelb.DNSName\r\n\r\nwhat is the problem with this, is ELB configuration all correct?.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "So far your customer has launched an AWS Elastic Load Balancer (ELB) and an Amazon Elastic Compute Cloud (EC2) instance acting as the web server. ", "keywords": ["instance"]}, {"source": "Text", "text": "You will be billed for the AWS resources used if you create a stack from this template and consume all your promotional credit. ", "keywords": ["bill"]}, {"source": "Text", "text": "We recommend you create a billing alert. ", "keywords": ["bill"]}, {"source": "Text", "text": "Parameters: CandidateName: Description: 'Please input your first and last name:' Type: String MaxLength: '50' MinLength: '3' ConstraintDescription: Please input your full name. Resources: SAVPC: Type: AWS::EC2::VPC Properties: CidrBlock: 10.0.0.0/16 InstanceTenancy: default EnableDnsSupport: 'true' EnableDnsHostnames: 'true' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [SAVPC, !Ref 'CandidateName']] PublicSubnetA: Type: AWS::EC2::Subnet Properties: CidrBlock: 10.0.0.0/24 AvailabilityZone: eu-west-1a MapPublicIpOnLaunch: 'True' VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PublicSubnetA, !Ref 'CandidateName']] PublicSubnetB: Type: AWS::EC2::Subnet Properties: CidrBlock: 10.0.1.0/24 AvailabilityZone: eu-west-1b MapPublicIpOnLaunch: 'True' VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PublicSubnetB, !Ref 'CandidateName']] PrivateSubnetA: Type: AWS::EC2::Subnet Properties: CidrBlock: 10.0.2.0/24 AvailabilityZone: eu-west-1a VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PrivateSubnetA, !Ref 'CandidateName']] PrivateSubnetB: Type: AWS::EC2::Subnet Properties: CidrBlock: 10.0.3.0/24 AvailabilityZone: eu-west-1b VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PrivateSubnetB, !Ref 'CandidateName']] SAIGW: Type: AWS::EC2::InternetGateway Properties: Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [IGW, !Ref 'CandidateName']] SANetworkACL: Type: AWS::EC2::NetworkAcl Properties: VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [NACL, !Ref 'CandidateName']] SARoutePublic: Type: AWS::EC2::RouteTable Properties: VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PublicRoute, !Ref 'CandidateName']] SARoutePrivate: Type: AWS::EC2::RouteTable Properties: VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PrivateRoute, !Ref 'CandidateName']] SAInstance1: Type: AWS::EC2::Instance Properties: DisableApiTermination: 'false' InstanceInitiatedShutdownBehavior: stop ImageId: ami-047bb4163c506cd98 InstanceType: t2.micro Monitoring: 'false' UserData: IyEvYmluL2Jhc2gNCnl1bSB1cGRhdGUgLXkNCnl1bSBpbnN0YWxsIC15IGh0dHBkMjQNCnNlcnZpY2UgaHR0cGQgc3RhcnQNCmNoa2NvbmZpZyBodHRwZCBvbg0KZ3JvdXBhZGQgd3d3DQp1c2VybW9kIC1hIC1HIHd3dyBlYzItdXNlcg0KY2hvd24gLVIgcm9vdDp3d3cgL3Zhci93d3cNCmNobW9kIDI3NzUgL3Zhci93d3cNCmZpbmQgL3Zhci93d3cgLXR5cGUgZCAtZXhlYyBjaG1vZCAyNzc1IHt9ICsNCmZpbmQgL3Zhci93d3cgLXR5cGUgZiAtZXhlYyBjaG1vZCAwNjY0IHt9ICsNCmVjaG8gJzxodG1sPjxoZWFkPjx0aXRsZT5TdWNjZXNzITwvdGl0bGU+PC9oZWFkPjxib2R5PjxpZnJhbWUgd2lkdGg9IjU2MCIgaGVpZ2h0PSIzMTUiIHNyYz0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvSnMyMXhLTUZkd3ciIGZyYW1lYm9yZGVyPSIwIiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+PC9ib2R5PjwvaHRtbD4nID4gL3Zhci93d3cvaHRtbC9kZW1vLmh0bWw= Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [Instance1, !Ref 'CandidateName']] NetworkInterfaces: - AssociatePublicIpAddress: 'true' DeleteOnTermination: 'true' Description: Primary network interface DeviceIndex: 0 SubnetId: !Ref 'PublicSubnetA' GroupSet: [!Ref 'SASGapp'] SAelb: Type: AWS::ElasticLoadBalancing::LoadBalancer Properties: Subnets: [!Ref 'PublicSubnetB'] Instances: [!Ref 'SAInstance1'] SecurityGroups: [!Ref 'SASGELB'] Listeners: - LoadBalancerPort: '80' InstancePort: '80' Protocol: HTTP HealthCheck: HealthyThreshold: '2' Interval: '15' Target: TCP:443 Timeout: '5' UnhealthyThreshold: '2' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [ELB, !Ref 'CandidateName']] SASGELB: Type: AWS::EC2::SecurityGroup Properties: GroupDescription: SA Assignment - ELB security group VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: ELBSecurityGroup SASGapp: Type: AWS::EC2::SecurityGroup Properties: GroupDescription: SA Assignment - App server security group VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: AppServerSecurityGroup SANACLEntry1: Type: AWS::EC2::NetworkAclEntry Properties: CidrBlock: 0.0.0.0/0 Egress: 'true' Protocol: '-1' RuleAction: allow RuleNumber: '100' NetworkAclId: !Ref 'SANetworkACL' SANACLEntry2: Type: AWS::EC2::NetworkAclEntry Properties: CidrBlock: 0.0.0.0/0 Protocol: '-1' RuleAction: allow RuleNumber: '100' NetworkAclId: !Ref 'SANetworkACL' subnetacl1: Type: AWS::EC2::SubnetNetworkAclAssociation Properties: NetworkAclId: !Ref 'SANetworkACL' SubnetId: !Ref 'PublicSubnetA' subnetacl2: Type: AWS::EC2::SubnetNetworkAclAssociation Properties: NetworkAclId: !Ref 'SANetworkACL' SubnetId: !Ref 'PublicSubnetB' subnetacl3: Type: AWS::EC2::SubnetNetworkAclAssociation Properties: NetworkAclId: !Ref 'SANetworkACL' SubnetId: !Ref 'PrivateSubnetA' subnetacl4: Type: AWS::EC2::SubnetNetworkAclAssociation Properties: NetworkAclId: !Ref 'SANetworkACL' SubnetId: !Ref 'PrivateSubnetB' SAIGWAttachment: Type: AWS::EC2::VPCGatewayAttachment Properties: VpcId: !Ref 'SAVPC' InternetGatewayId: !Ref 'SAIGW' subnetRoutePublicA: Type: AWS::EC2::SubnetRouteTableAssociation Properties: RouteTableId: !Ref 'SARoutePublic' SubnetId: !Ref 'PublicSubnetA' subnetRoutePublicB: Type: AWS::EC2::SubnetRouteTableAssociation Properties: RouteTableId: !Ref 'SARoutePublic' SubnetId: !Ref 'PublicSubnetB' subnetRoutePrivateA: Type: AWS::EC2::SubnetRouteTableAssociation Properties: RouteTableId: !Ref 'SARoutePrivate' SubnetId: !Ref 'PrivateSubnetA' subnetRoutePrivateB: Type: AWS::EC2::SubnetRouteTableAssociation Properties: RouteTableId: !Ref 'SARoutePrivate' SubnetId: !Ref 'PrivateSubnetB' publicroute: Type: AWS::EC2::Route Properties: DestinationCidrBlock: 0.0.0.0/0 RouteTableId: !Ref 'SARoutePublic' GatewayId: !Ref 'SAIGW' DependsOn: SAIGW Outputs: LoadBalancerDNSName: Description: The DNSName of the load balancer Value: !GetAtt SAelb.DNSName what is the problem with this, is ELB configuration all correct?", "keywords": ["instance"]}]}, {"Id": "224263506", "PostHistoryTypeId": "1", "PostId": "62425263", "RevisionGUID": "355064e6-c843-414c-bc5e-48e4dba3d496", "CreationDate": "2020-06-17T08:59:47.883", "UserId": "13761393", "Text": "Troubleshoot Cloudformation script", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "224263507", "PostHistoryTypeId": "3", "PostId": "62425263", "RevisionGUID": "355064e6-c843-414c-bc5e-48e4dba3d496", "CreationDate": "2020-06-17T08:59:47.883", "UserId": "13761393", "Text": "|amazon-web-services|aws-cloudformation|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "224264178", "PostHistoryTypeId": "5", "PostId": "62425263", "RevisionGUID": "e56a9cda-ae92-4e5b-aff8-2e319df53ab9", "CreationDate": "2020-06-17T09:09:48.657", "UserId": "303810", "Comment": "Code formatting.", "Text": "I have this AWS exercise scenario, where your customer has not used AWS before, and is encountering issues when trying to launch a web application as a proof of concept.\r\nSo far your customer has launched an AWS Elastic Load Balancer (ELB) and an Amazon Elastic Compute Cloud (EC2) instance acting as the web server. Both are deployed in a Virtual Private Cloud (VPC) on AWS. While your customer's initial deployment aims to present a static web page to its users (demo.html located in the document root of the web server\r\n\r\nBelow id the cloud formation script\r\n\r\n\r\n    AWSTemplateFormatVersion: '2010-09-09'\r\n    Description: |\r\n    \r\n      AWS CloudFormation SA Assignment - WARNING: You will be billed for the\r\n      AWS resources used if you create a stack from this template and consume all your\r\n      promotional credit. \r\n    \r\n      We recommend you create a billing alert. Once you submit your\r\n      answers delete the CloudFormation stack and terminate any other resources launched\r\n      in relation to this exercise. \r\n    \r\n      Feel free to do that as soon as you have submitted\r\n      your document and before your interview.\r\n    \r\n    Parameters:\r\n    \r\n    \r\n      CandidateName:\r\n        Description: 'Please input your first and last name:'\r\n        Type: String\r\n        MaxLength: '50'\r\n        MinLength: '3'\r\n        ConstraintDescription: Please input your full name.\r\n    \r\n    Resources:\r\n    \r\n    \r\n        SAVPC:\r\n          Type: AWS::EC2::VPC\r\n          Properties:\r\n            CidrBlock: 10.0.0.0/16\r\n            InstanceTenancy: default\r\n            EnableDnsSupport: 'true'\r\n            EnableDnsHostnames: 'true'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [SAVPC, !Ref 'CandidateName']]\r\n    \r\n        PublicSubnetA:\r\n          Type: AWS::EC2::Subnet\r\n          Properties:\r\n            CidrBlock: 10.0.0.0/24\r\n            AvailabilityZone: eu-west-1a\r\n            MapPublicIpOnLaunch: 'True'\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [PublicSubnetA, !Ref 'CandidateName']]\r\n    \r\n        PublicSubnetB:\r\n          Type: AWS::EC2::Subnet\r\n          Properties:\r\n            CidrBlock: 10.0.1.0/24\r\n            AvailabilityZone: eu-west-1b\r\n            MapPublicIpOnLaunch: 'True'\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [PublicSubnetB, !Ref 'CandidateName']]\r\n    \r\n        PrivateSubnetA:\r\n          Type: AWS::EC2::Subnet\r\n          Properties:\r\n            CidrBlock: 10.0.2.0/24\r\n            AvailabilityZone: eu-west-1a\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [PrivateSubnetA, !Ref 'CandidateName']]\r\n    \r\n        PrivateSubnetB:\r\n          Type: AWS::EC2::Subnet\r\n          Properties:\r\n            CidrBlock: 10.0.3.0/24\r\n            AvailabilityZone: eu-west-1b\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [PrivateSubnetB, !Ref 'CandidateName']]\r\n    \r\n        SAIGW:\r\n          Type: AWS::EC2::InternetGateway\r\n          Properties:\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [IGW, !Ref 'CandidateName']]\r\n    \r\n        SANetworkACL:\r\n          Type: AWS::EC2::NetworkAcl\r\n          Properties:\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [NACL, !Ref 'CandidateName']]\r\n    \r\n        SARoutePublic:\r\n          Type: AWS::EC2::RouteTable\r\n          Properties:\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [PublicRoute, !Ref 'CandidateName']]\r\n    \r\n        SARoutePrivate:\r\n          Type: AWS::EC2::RouteTable\r\n          Properties:\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [PrivateRoute, !Ref 'CandidateName']]\r\n    \r\n        SAInstance1:\r\n          Type: AWS::EC2::Instance\r\n          Properties:\r\n            DisableApiTermination: 'false'\r\n            InstanceInitiatedShutdownBehavior: stop\r\n            ImageId: ami-047bb4163c506cd98\r\n            InstanceType: t2.micro\r\n            Monitoring: 'false'\r\n            UserData: IyEvYmluL2Jhc2gNCnl1bSB1cGRhdGUgLXkNCnl1bSBpbnN0YWxsIC15IGh0dHBkMjQNCnNlcnZpY2UgaHR0cGQgc3RhcnQNCmNoa2NvbmZpZyBodHRwZCBvbg0KZ3JvdXBhZGQgd3d3DQp1c2VybW9kIC1hIC1HIHd3dyBlYzItdXNlcg0KY2hvd24gLVIgcm9vdDp3d3cgL3Zhci93d3cNCmNobW9kIDI3NzUgL3Zhci93d3cNCmZpbmQgL3Zhci93d3cgLXR5cGUgZCAtZXhlYyBjaG1vZCAyNzc1IHt9ICsNCmZpbmQgL3Zhci93d3cgLXR5cGUgZiAtZXhlYyBjaG1vZCAwNjY0IHt9ICsNCmVjaG8gJzxodG1sPjxoZWFkPjx0aXRsZT5TdWNjZXNzITwvdGl0bGU+PC9oZWFkPjxib2R5PjxpZnJhbWUgd2lkdGg9IjU2MCIgaGVpZ2h0PSIzMTUiIHNyYz0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvSnMyMXhLTUZkd3ciIGZyYW1lYm9yZGVyPSIwIiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+PC9ib2R5PjwvaHRtbD4nID4gL3Zhci93d3cvaHRtbC9kZW1vLmh0bWw=\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [Instance1, !Ref 'CandidateName']]\r\n            NetworkInterfaces:\r\n            - AssociatePublicIpAddress: 'true'\r\n              DeleteOnTermination: 'true'\r\n              Description: Primary network interface\r\n              DeviceIndex: 0\r\n              SubnetId: !Ref 'PublicSubnetA'\r\n              GroupSet: [!Ref 'SASGapp']\r\n              \r\n        SAelb:\r\n          Type: AWS::ElasticLoadBalancing::LoadBalancer\r\n          Properties:\r\n            Subnets: [!Ref 'PublicSubnetB']\r\n            Instances: [!Ref 'SAInstance1']\r\n            SecurityGroups: [!Ref 'SASGELB']\r\n            Listeners:\r\n            - LoadBalancerPort: '80'\r\n              InstancePort: '80'\r\n              Protocol: HTTP\r\n            HealthCheck:\r\n              HealthyThreshold: '2'\r\n              Interval: '15'\r\n              Target: TCP:443\r\n              Timeout: '5'\r\n              UnhealthyThreshold: '2'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: !Join ['-', [ELB, !Ref 'CandidateName']]\r\n    \r\n        SASGELB:\r\n          Type: AWS::EC2::SecurityGroup\r\n          Properties:\r\n            GroupDescription: SA Assignment - ELB security group\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: ELBSecurityGroup\r\n    \r\n        SASGapp:\r\n          Type: AWS::EC2::SecurityGroup\r\n          Properties:\r\n            GroupDescription: SA Assignment - App server security group\r\n            VpcId: !Ref 'SAVPC'\r\n            Tags:\r\n              - Key: environment\r\n                Value: sa-assignment\r\n              - Key: Name\r\n                Value: AppServerSecurityGroup\r\n    \r\n        SANACLEntry1:\r\n          Type: AWS::EC2::NetworkAclEntry\r\n          Properties:\r\n            CidrBlock: 0.0.0.0/0\r\n            Egress: 'true'\r\n            Protocol: '-1'\r\n            RuleAction: allow\r\n            RuleNumber: '100'\r\n            NetworkAclId: !Ref 'SANetworkACL'\r\n    \r\n        SANACLEntry2:\r\n          Type: AWS::EC2::NetworkAclEntry\r\n          Properties:\r\n            CidrBlock: 0.0.0.0/0\r\n            Protocol: '-1'\r\n            RuleAction: allow\r\n            RuleNumber: '100'\r\n            NetworkAclId: !Ref 'SANetworkACL'\r\n    \r\n        subnetacl1:\r\n          Type: AWS::EC2::SubnetNetworkAclAssociation\r\n          Properties:\r\n            NetworkAclId: !Ref 'SANetworkACL'\r\n            SubnetId: !Ref 'PublicSubnetA'\r\n    \r\n        subnetacl2:\r\n          Type: AWS::EC2::SubnetNetworkAclAssociation\r\n          Properties:\r\n            NetworkAclId: !Ref 'SANetworkACL'\r\n            SubnetId: !Ref 'PublicSubnetB'\r\n    \r\n        subnetacl3:\r\n          Type: AWS::EC2::SubnetNetworkAclAssociation\r\n          Properties:\r\n            NetworkAclId: !Ref 'SANetworkACL'\r\n            SubnetId: !Ref 'PrivateSubnetA'\r\n    \r\n        subnetacl4:\r\n          Type: AWS::EC2::SubnetNetworkAclAssociation\r\n          Properties:\r\n            NetworkAclId: !Ref 'SANetworkACL'\r\n            SubnetId: !Ref 'PrivateSubnetB'\r\n    \r\n        SAIGWAttachment:\r\n          Type: AWS::EC2::VPCGatewayAttachment\r\n          Properties:\r\n            VpcId: !Ref 'SAVPC'\r\n            InternetGatewayId: !Ref 'SAIGW'\r\n    \r\n        subnetRoutePublicA:\r\n          Type: AWS::EC2::SubnetRouteTableAssociation\r\n          Properties:\r\n            RouteTableId: !Ref 'SARoutePublic'\r\n            SubnetId: !Ref 'PublicSubnetA'\r\n    \r\n        subnetRoutePublicB:\r\n          Type: AWS::EC2::SubnetRouteTableAssociation\r\n          Properties:\r\n            RouteTableId: !Ref 'SARoutePublic'\r\n            SubnetId: !Ref 'PublicSubnetB'\r\n    \r\n        subnetRoutePrivateA:\r\n          Type: AWS::EC2::SubnetRouteTableAssociation\r\n          Properties:\r\n            RouteTableId: !Ref 'SARoutePrivate'\r\n            SubnetId: !Ref 'PrivateSubnetA'\r\n    \r\n        subnetRoutePrivateB:\r\n          Type: AWS::EC2::SubnetRouteTableAssociation\r\n          Properties:\r\n            RouteTableId: !Ref 'SARoutePrivate'\r\n            SubnetId: !Ref 'PrivateSubnetB'\r\n    \r\n        publicroute:\r\n          Type: AWS::EC2::Route\r\n          Properties:\r\n            DestinationCidrBlock: 0.0.0.0/0\r\n            RouteTableId: !Ref 'SARoutePublic'\r\n            GatewayId: !Ref 'SAIGW'\r\n          DependsOn: SAIGW\r\n    \r\n        \r\n    Outputs:\r\n    \r\n    \r\n      LoadBalancerDNSName:\r\n        Description: The DNSName of the load balancer\r\n        Value: !GetAtt SAelb.DNSName\r\n\r\nwhat is the problem with this, is ELB configuration all correct?.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "So far your customer has launched an AWS Elastic Load Balancer (ELB) and an Amazon Elastic Compute Cloud (EC2) instance acting as the web server. ", "keywords": ["instance"]}, {"source": "Text", "text": "You will be billed for the AWS resources used if you create a stack from this template and consume all your promotional credit. ", "keywords": ["bill"]}, {"source": "Text", "text": "We recommend you create a billing alert. ", "keywords": ["bill"]}, {"source": "Text", "text": "Parameters: CandidateName: Description: 'Please input your first and last name:' Type: String MaxLength: '50' MinLength: '3' ConstraintDescription: Please input your full name. Resources: SAVPC: Type: AWS::EC2::VPC Properties: CidrBlock: 10.0.0.0/16 InstanceTenancy: default EnableDnsSupport: 'true' EnableDnsHostnames: 'true' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [SAVPC, !Ref 'CandidateName']] PublicSubnetA: Type: AWS::EC2::Subnet Properties: CidrBlock: 10.0.0.0/24 AvailabilityZone: eu-west-1a MapPublicIpOnLaunch: 'True' VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PublicSubnetA, !Ref 'CandidateName']] PublicSubnetB: Type: AWS::EC2::Subnet Properties: CidrBlock: 10.0.1.0/24 AvailabilityZone: eu-west-1b MapPublicIpOnLaunch: 'True' VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PublicSubnetB, !Ref 'CandidateName']] PrivateSubnetA: Type: AWS::EC2::Subnet Properties: CidrBlock: 10.0.2.0/24 AvailabilityZone: eu-west-1a VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PrivateSubnetA, !Ref 'CandidateName']] PrivateSubnetB: Type: AWS::EC2::Subnet Properties: CidrBlock: 10.0.3.0/24 AvailabilityZone: eu-west-1b VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PrivateSubnetB, !Ref 'CandidateName']] SAIGW: Type: AWS::EC2::InternetGateway Properties: Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [IGW, !Ref 'CandidateName']] SANetworkACL: Type: AWS::EC2::NetworkAcl Properties: VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [NACL, !Ref 'CandidateName']] SARoutePublic: Type: AWS::EC2::RouteTable Properties: VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PublicRoute, !Ref 'CandidateName']] SARoutePrivate: Type: AWS::EC2::RouteTable Properties: VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [PrivateRoute, !Ref 'CandidateName']] SAInstance1: Type: AWS::EC2::Instance Properties: DisableApiTermination: 'false' InstanceInitiatedShutdownBehavior: stop ImageId: ami-047bb4163c506cd98 InstanceType: t2.micro Monitoring: 'false' UserData: IyEvYmluL2Jhc2gNCnl1bSB1cGRhdGUgLXkNCnl1bSBpbnN0YWxsIC15IGh0dHBkMjQNCnNlcnZpY2UgaHR0cGQgc3RhcnQNCmNoa2NvbmZpZyBodHRwZCBvbg0KZ3JvdXBhZGQgd3d3DQp1c2VybW9kIC1hIC1HIHd3dyBlYzItdXNlcg0KY2hvd24gLVIgcm9vdDp3d3cgL3Zhci93d3cNCmNobW9kIDI3NzUgL3Zhci93d3cNCmZpbmQgL3Zhci93d3cgLXR5cGUgZCAtZXhlYyBjaG1vZCAyNzc1IHt9ICsNCmZpbmQgL3Zhci93d3cgLXR5cGUgZiAtZXhlYyBjaG1vZCAwNjY0IHt9ICsNCmVjaG8gJzxodG1sPjxoZWFkPjx0aXRsZT5TdWNjZXNzITwvdGl0bGU+PC9oZWFkPjxib2R5PjxpZnJhbWUgd2lkdGg9IjU2MCIgaGVpZ2h0PSIzMTUiIHNyYz0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvSnMyMXhLTUZkd3ciIGZyYW1lYm9yZGVyPSIwIiBhbGxvd2Z1bGxzY3JlZW4+PC9pZnJhbWU+PC9ib2R5PjwvaHRtbD4nID4gL3Zhci93d3cvaHRtbC9kZW1vLmh0bWw= Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [Instance1, !Ref 'CandidateName']] NetworkInterfaces: - AssociatePublicIpAddress: 'true' DeleteOnTermination: 'true' Description: Primary network interface DeviceIndex: 0 SubnetId: !Ref 'PublicSubnetA' GroupSet: [!Ref 'SASGapp'] SAelb: Type: AWS::ElasticLoadBalancing::LoadBalancer Properties: Subnets: [!Ref 'PublicSubnetB'] Instances: [!Ref 'SAInstance1'] SecurityGroups: [!Ref 'SASGELB'] Listeners: - LoadBalancerPort: '80' InstancePort: '80' Protocol: HTTP HealthCheck: HealthyThreshold: '2' Interval: '15' Target: TCP:443 Timeout: '5' UnhealthyThreshold: '2' Tags: - Key: environment Value: sa-assignment - Key: Name Value: !Join ['-', [ELB, !Ref 'CandidateName']] SASGELB: Type: AWS::EC2::SecurityGroup Properties: GroupDescription: SA Assignment - ELB security group VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: ELBSecurityGroup SASGapp: Type: AWS::EC2::SecurityGroup Properties: GroupDescription: SA Assignment - App server security group VpcId: !Ref 'SAVPC' Tags: - Key: environment Value: sa-assignment - Key: Name Value: AppServerSecurityGroup SANACLEntry1: Type: AWS::EC2::NetworkAclEntry Properties: CidrBlock: 0.0.0.0/0 Egress: 'true' Protocol: '-1' RuleAction: allow RuleNumber: '100' NetworkAclId: !Ref 'SANetworkACL' SANACLEntry2: Type: AWS::EC2::NetworkAclEntry Properties: CidrBlock: 0.0.0.0/0 Protocol: '-1' RuleAction: allow RuleNumber: '100' NetworkAclId: !Ref 'SANetworkACL' subnetacl1: Type: AWS::EC2::SubnetNetworkAclAssociation Properties: NetworkAclId: !Ref 'SANetworkACL' SubnetId: !Ref 'PublicSubnetA' subnetacl2: Type: AWS::EC2::SubnetNetworkAclAssociation Properties: NetworkAclId: !Ref 'SANetworkACL' SubnetId: !Ref 'PublicSubnetB' subnetacl3: Type: AWS::EC2::SubnetNetworkAclAssociation Properties: NetworkAclId: !Ref 'SANetworkACL' SubnetId: !Ref 'PrivateSubnetA' subnetacl4: Type: AWS::EC2::SubnetNetworkAclAssociation Properties: NetworkAclId: !Ref 'SANetworkACL' SubnetId: !Ref 'PrivateSubnetB' SAIGWAttachment: Type: AWS::EC2::VPCGatewayAttachment Properties: VpcId: !Ref 'SAVPC' InternetGatewayId: !Ref 'SAIGW' subnetRoutePublicA: Type: AWS::EC2::SubnetRouteTableAssociation Properties: RouteTableId: !Ref 'SARoutePublic' SubnetId: !Ref 'PublicSubnetA' subnetRoutePublicB: Type: AWS::EC2::SubnetRouteTableAssociation Properties: RouteTableId: !Ref 'SARoutePublic' SubnetId: !Ref 'PublicSubnetB' subnetRoutePrivateA: Type: AWS::EC2::SubnetRouteTableAssociation Properties: RouteTableId: !Ref 'SARoutePrivate' SubnetId: !Ref 'PrivateSubnetA' subnetRoutePrivateB: Type: AWS::EC2::SubnetRouteTableAssociation Properties: RouteTableId: !Ref 'SARoutePrivate' SubnetId: !Ref 'PrivateSubnetB' publicroute: Type: AWS::EC2::Route Properties: DestinationCidrBlock: 0.0.0.0/0 RouteTableId: !Ref 'SARoutePublic' GatewayId: !Ref 'SAIGW' DependsOn: SAIGW Outputs: LoadBalancerDNSName: Description: The DNSName of the load balancer Value: !GetAtt SAelb.DNSName what is the problem with this, is ELB configuration all correct?", "keywords": ["instance"]}]}, {"Id": "275194804", "PostHistoryTypeId": "19", "PostId": "62425263", "RevisionGUID": "c25a4f6a-0f45-4a43-9e2d-89c8f28f64d0", "CreationDate": "2022-07-29T08:10:37.607", "UserId": "5211833", "Text": "{\"Voters\":[{\"Id\":5211833,\"DisplayName\":\"Adriaan\"}]}", "filtered-sentences": []}], "answers": [{"Id": "62425495", "PostTypeId": "2", "ParentId": "62425263", "CreationDate": "2020-06-17T09:13:20.243", "Score": "0", "Body": "<p>I have run your template with <a href=\"https://github.com/aws-cloudformation/cfn-python-lint\" rel=\"nofollow noreferrer\">CloudFormation Linter</a> and got the following warnings:</p>\n\n<pre><code>E3012 Property Resources/SAVPC/Properties/EnableDnsSupport should be of type Boolean\nlogesh.template:33:9\n\nE3012 Property Resources/SAVPC/Properties/EnableDnsHostnames should be of type Boolean\nlogesh.template:34:9\n\nW3010 Don't hardcode eu-west-1a for AvailabilityZones\nlogesh.template:45:9\n\nE3012 Property Resources/PublicSubnetA/Properties/MapPublicIpOnLaunch should be of type Boolean\nlogesh.template:46:9\n\nW3010 Don't hardcode eu-west-1b for AvailabilityZones\nlogesh.template:58:9\n\nE3012 Property Resources/PublicSubnetB/Properties/MapPublicIpOnLaunch should be of type Boolean\nlogesh.template:59:9\n\nW3010 Don't hardcode eu-west-1a for AvailabilityZones\nlogesh.template:71:9\n\nW3010 Don't hardcode eu-west-1b for AvailabilityZones\nlogesh.template:83:9\n\nE3012 Property Resources/SAInstance1/Properties/DisableApiTermination should be of type Boolean\nlogesh.template:133:9\n\nE3012 Property Resources/SAInstance1/Properties/Monitoring should be of type Boolean\nlogesh.template:137:9\n\nE3012 Property Resources/SAInstance1/Properties/NetworkInterfaces/0/AssociatePublicIpAddress should be of type Boolean\nlogesh.template:145:11\n\nE3012 Property Resources/SAInstance1/Properties/NetworkInterfaces/0/DeleteOnTermination should be of type Boolean\nlogesh.template:146:11\n\nE3012 Property Resources/SAInstance1/Properties/NetworkInterfaces/0/DeviceIndex should be of type String\nlogesh.template:148:11\n\nE3012 Property Resources/SANACLEntry1/Properties/Egress should be of type Boolean\nlogesh.template:200:9\n\nE3012 Property Resources/SANACLEntry1/Properties/Protocol should be of type Integer\nlogesh.template:201:9\n\nE3012 Property Resources/SANACLEntry1/Properties/RuleNumber should be of type Integer\nlogesh.template:203:9\n\nE3012 Property Resources/SANACLEntry2/Properties/Protocol should be of type Integer\nlogesh.template:210:9\n\nE3012 Property Resources/SANACLEntry2/Properties/RuleNumber should be of type Integer\nlogesh.template:212:9\n\nW3005 Obsolete DependsOn on resource (SAIGW), dependency already enforced by a \"Ref\" at Resources/publicroute/Properties/GatewayId/Ref\nlogesh.template:275:7\n\n</code></pre>\n\n<p>You might want to correct these problems before proceeding.</p>\n", "OwnerUserId": "303810", "LastActivityDate": "2020-06-17T09:13:20.243", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "110403854", "PostId": "62425495", "Score": "0", "Text": "The script run and creates all the resources as needed. Need to troubleshoot why im not able to access the demo.html page", "CreationDate": "2020-06-17T09:15:08.280", "UserId": "13761393", "filtered-sentences": []}, {"Id": "110404021", "PostId": "62425495", "Score": "0", "Text": "@logesh My guess would be that your security groups do not have ingress rules for accessing port 80 from the internet.", "CreationDate": "2020-06-17T09:20:51.480", "UserId": "303810", "filtered-sentences": []}, {"Id": "110406364", "PostId": "62425495", "Score": "0", "Text": "that is one of the issue", "CreationDate": "2020-06-17T10:43:21.363", "UserId": "13761393", "filtered-sentences": []}], "history": [{"Id": "224264417", "PostHistoryTypeId": "2", "PostId": "62425495", "RevisionGUID": "5dedb01b-4fb1-48ac-9500-0a2f1f0a7f6e", "CreationDate": "2020-06-17T09:13:20.243", "UserId": "303810", "Text": "I have run your template with [CloudFormation Linter](https://github.com/aws-cloudformation/cfn-python-lint) and got the following warnings:\r\n\r\n```\r\nE3012 Property Resources/SAVPC/Properties/EnableDnsSupport should be of type Boolean\r\nlogesh.template:33:9\r\n\r\nE3012 Property Resources/SAVPC/Properties/EnableDnsHostnames should be of type Boolean\r\nlogesh.template:34:9\r\n\r\nW3010 Don't hardcode eu-west-1a for AvailabilityZones\r\nlogesh.template:45:9\r\n\r\nE3012 Property Resources/PublicSubnetA/Properties/MapPublicIpOnLaunch should be of type Boolean\r\nlogesh.template:46:9\r\n\r\nW3010 Don't hardcode eu-west-1b for AvailabilityZones\r\nlogesh.template:58:9\r\n\r\nE3012 Property Resources/PublicSubnetB/Properties/MapPublicIpOnLaunch should be of type Boolean\r\nlogesh.template:59:9\r\n\r\nW3010 Don't hardcode eu-west-1a for AvailabilityZones\r\nlogesh.template:71:9\r\n\r\nW3010 Don't hardcode eu-west-1b for AvailabilityZones\r\nlogesh.template:83:9\r\n\r\nE3012 Property Resources/SAInstance1/Properties/DisableApiTermination should be of type Boolean\r\nlogesh.template:133:9\r\n\r\nE3012 Property Resources/SAInstance1/Properties/Monitoring should be of type Boolean\r\nlogesh.template:137:9\r\n\r\nE3012 Property Resources/SAInstance1/Properties/NetworkInterfaces/0/AssociatePublicIpAddress should be of type Boolean\r\nlogesh.template:145:11\r\n\r\nE3012 Property Resources/SAInstance1/Properties/NetworkInterfaces/0/DeleteOnTermination should be of type Boolean\r\nlogesh.template:146:11\r\n\r\nE3012 Property Resources/SAInstance1/Properties/NetworkInterfaces/0/DeviceIndex should be of type String\r\nlogesh.template:148:11\r\n\r\nE3012 Property Resources/SANACLEntry1/Properties/Egress should be of type Boolean\r\nlogesh.template:200:9\r\n\r\nE3012 Property Resources/SANACLEntry1/Properties/Protocol should be of type Integer\r\nlogesh.template:201:9\r\n\r\nE3012 Property Resources/SANACLEntry1/Properties/RuleNumber should be of type Integer\r\nlogesh.template:203:9\r\n\r\nE3012 Property Resources/SANACLEntry2/Properties/Protocol should be of type Integer\r\nlogesh.template:210:9\r\n\r\nE3012 Property Resources/SANACLEntry2/Properties/RuleNumber should be of type Integer\r\nlogesh.template:212:9\r\n\r\nW3005 Obsolete DependsOn on resource (SAIGW), dependency already enforced by a \"Ref\" at Resources/publicroute/Properties/GatewayId/Ref\r\nlogesh.template:275:7\r\n\r\n```\r\n\r\nYou might want to correct these problems before proceeding.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "73564209", "PostTypeId": "2", "ParentId": "62425263", "CreationDate": "2022-09-01T04:08:31.083", "Score": "0", "Body": "<ol>\n<li>ELB is not configured to receive public internet traffic.</li>\n<li>ELB is not configured for the right availability zone where the EC2 instance is running</li>\n<li>ELB health check is not configured to access HTTP 80 to EC2</li>\n<li>EC2 is not configured to receive traffic from the ELB</li>\n</ol>\n", "OwnerUserId": "5039356", "LastActivityDate": "2022-09-01T04:08:31.083", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "277371330", "PostHistoryTypeId": "2", "PostId": "73564209", "RevisionGUID": "37f1893b-6bc7-4ee6-9f46-43899fea8493", "CreationDate": "2022-09-01T04:08:31.083", "UserId": "5039356", "Text": "1) ELB is not configured to receive public internet traffic. \r\n2) ELB is not configured for the right availability zone where the EC2 instance is running \r\n3) ELB health check is not configured to access HTTP 80 to EC2 \r\n4) EC2 is not configured to receive traffic from the ELB \r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "2) ELB is not configured for the right availability zone where the EC2 instance is running ", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "ELB is not configured for the right availability zone where the EC2 instance is running ELB health check is not configured to access ", "keywords": ["instance"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "So far your customer has launched an AWS Elastic Load Balancer (ELB) and an Amazon Elastic Compute Cloud (EC2) instance acting as the web server. ", "keywords": ["instance"]}]}
{"Id": "45517234", "PostTypeId": "1", "AcceptedAnswerId": "45530470", "CreationDate": "2017-08-05T00:58:05.360", "Score": "1", "ViewCount": "2249", "Body": "<p>I want to use CloudFormation to trigger Lambda when my CloudWatch function is called. I have the below, but it does not work. </p>\n\n<p>CloudWatch rule created fine </p>\n\n<pre><code>\"CloudWatchNewEc2\": {\n  \"Type\": \"AWS::Events::Rule\",\n  \"DependsOn\": [\"LambdaNewEc2\"],\n  \"Properties\": {\n    \"Description\": \"Triggered on new EC2 instances\",\n    \"EventPattern\": {\n      \"source\": [\n        \"aws.ec2\"\n      ],\n      \"detail-type\": [\n        \"AWS API Call via CloudTrail\"\n      ],\n      \"detail\": {\n        \"eventSource\": [\n          \"ec2.amazonaws.com\"\n        ],\n        \"eventName\": [\n          \"RunInstances\"\n        ]\n      }\n    },\n    \"Targets\": [\n      {\n        \"Arn\": {\n          \"Fn::GetAtt\": [\"LambdaNewEc2\", \"Arn\"]\n        },\n        \"Id\": \"NewEc2AutoTag\"\n      }\n    ]\n  }\n},\n</code></pre>\n\n<p>Lambda created but is not triggered</p>\n\n<pre><code>\"LambdaNewEc2\": {\n  \"Type\": \"AWS::Lambda::Function\",\n  \"DependsOn\": [\"S3Lambda\", \"IAMRoleLambda\"],\n  \"Properties\": {\n    \"Code\": {\n      \"S3Bucket\": {\"Ref\": \"LambdaBucketName\"},\n      \"S3Key\": \"skynet-lambda.zip\"\n    },\n    \"Description\": \"When new EC2 instances are created, auto tag them\",\n    \"FunctionName\": \"newEc2AutoTag\",\n    \"Handler\": \"index.newEc2_autoTag\",\n    \"Role\": {\"Fn::GetAtt\": [\"IAMRoleLambda\", \"Arn\"]},\n    \"Runtime\": \"nodejs6.10\",\n    \"Timeout\": \"30\"\n  }\n}\n</code></pre>\n\n<p>},</p>\n\n<p>It seems like CloudWatch Target is not sufficient? </p>\n\n<p><strong>UPDATE (Full CloudFormation template)</strong></p>\n\n<pre><code>{\n  \"Parameters\": {\n    \"Environment\": {\n      \"Type\": \"String\",\n      \"Default\": \"Staging\",\n      \"AllowedValues\": [\n        \"Testing\",\n        \"Staging\",\n        \"Production\"\n      ],\n      \"Description\": \"Environment name\"\n    },\n    \"BucketName\": {\n      \"Type\": \"String\",\n      \"Default\": \"skynet-staging\",\n      \"Description\": \"Bucket Name\"\n    },\n    \"LambdaBucketName\": {\n      \"Type\": \"String\",\n      \"Default\": \"skynet-lambda\",\n      \"Description\": \"Lambda Bucket Name\"\n    },\n    \"Owner\": {\n      \"Type\": \"String\",\n      \"Description\": \"Owner\"\n    }\n  },\n  \"Resources\": {\n    \"S3Web\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"Properties\": {\n        \"BucketName\": {\n          \"Ref\": \"BucketName\"\n        },\n        \"WebsiteConfiguration\": {\n          \"IndexDocument\": \"index.html\",\n          \"RoutingRules\": [\n            {\n              \"RedirectRule\": {\n                \"ReplaceKeyPrefixWith\": \"#\"\n              },\n              \"RoutingRuleCondition\": {\n                \"HttpErrorCodeReturnedEquals\": \"404\"\n              }\n            }\n          ]\n        },\n        \"AccessControl\": \"PublicRead\",\n        \"Tags\": [\n          {\n            \"Key\": \"Cost Center\",\n            \"Value\": \"Skynet\"\n          },\n          {\n            \"Key\": \"Environment\",\n            \"Value\": {\n              \"Ref\": \"Environment\"\n            }\n          },\n          {\n            \"Key\": \"Owner\",\n            \"Value\": {\n              \"Ref\": \"Owner\"\n            }\n          }\n        ]\n      }\n    },\n    \"S3Lambda\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"Properties\": {\n        \"BucketName\": {\n          \"Ref\": \"LambdaBucketName\"\n        },\n        \"VersioningConfiguration\": {\n          \"Status\": \"Enabled\"\n        },\n        \"Tags\": [\n          {\n            \"Key\": \"Cost Center\",\n            \"Value\": \"Skynet\"\n          },\n          {\n            \"Key\": \"Owner\",\n            \"Value\": {\n              \"Ref\": \"Owner\"\n            }\n          }\n        ]\n      }\n    },\n    \"CloudWatchNewEc2\": {\n      \"Type\": \"AWS::Events::Rule\",\n      \"DependsOn\": [\"LambdaNewEc2\"],\n      \"Properties\": {\n        \"Description\": \"Triggered on new EC2 instances\",\n        \"EventPattern\": {\n          \"source\": [\n            \"aws.ec2\"\n          ],\n          \"detail-type\": [\n            \"AWS API Call via CloudTrail\"\n          ],\n          \"detail\": {\n            \"eventSource\": [\n              \"ec2.amazonaws.com\"\n            ],\n            \"eventName\": [\n              \"RunInstances\"\n            ]\n          }\n        },\n        \"Targets\": [\n          {\n            \"Arn\": {\n              \"Fn::GetAtt\": [\"LambdaNewEc2\", \"Arn\"]\n            },\n            \"Id\": \"NewEc2AutoTag\"\n          }\n        ]\n      }\n    },\n    \"IAMRoleLambda\": {\n      \"Type\": \"AWS::IAM::Role\",\n      \"Properties\": {\n        \"RoleName\": \"skynet-lambda-role\",\n        \"AssumeRolePolicyDocument\": {\n          \"Version\" : \"2012-10-17\",\n          \"Statement\": [\n            {\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                  \"Service\": [ \"lambda.amazonaws.com\" ]\n              },\n              \"Action\": [ \"sts:AssumeRole\" ]\n            }\n          ]\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/AmazonEC2FullAccess\",\n          \"arn:aws:iam::aws:policy/AWSLambdaFullAccess\",\n          \"arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess\",\n          \"arn:aws:iam::aws:policy/CloudWatchLogsFullAccess\"\n        ]\n      }\n    },\n    \"LambdaNewEc2\": {\n      \"Type\": \"AWS::Lambda::Function\",\n      \"DependsOn\": [\"S3Lambda\", \"IAMRoleLambda\"],\n      \"Properties\": {\n        \"Code\": {\n          \"S3Bucket\": {\"Ref\": \"LambdaBucketName\"},\n          \"S3Key\": \"skynet-lambda.zip\"\n        },\n        \"Description\": \"When new EC2 instances are created, auto tag them\",\n        \"FunctionName\": \"newEc2AutoTag\",\n        \"Handler\": \"index.newEc2_autoTag\",\n        \"Role\": {\"Fn::GetAtt\": [\"IAMRoleLambda\", \"Arn\"]},\n        \"Runtime\": \"nodejs6.10\",\n        \"Timeout\": \"30\"\n      }\n    }\n  },\n  \"Outputs\": {\n    \"WebUrl\": {\n      \"Value\": {\n        \"Fn::GetAtt\": [\n          \"S3Web\",\n          \"WebsiteURL\"\n        ]\n      },\n      \"Description\": \"S3 bucket for web files\"\n    }\n  }\n}\n</code></pre>\n", "OwnerUserId": "292291", "LastEditorUserId": "174777", "LastEditDate": "2018-09-10T09:28:43.483", "LastActivityDate": "2018-09-10T09:28:43.483", "Title": "Setup Lambda to trigger from CloudWatch using CloudFormation", "Tags": "|amazon-web-services|aws-lambda|aws-cloudformation|", "AnswerCount": "1", "CommentCount": "8", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "77996207", "PostId": "45517234", "Score": "0", "Text": "Are the resources all in the same CloudFormation template? It would be helpful to see the whole template to understand what is happening better.", "CreationDate": "2017-08-05T01:46:32.643", "UserId": "400262", "filtered-sentences": []}, {"Id": "77996701", "PostId": "45517234", "Score": "0", "Text": "@BryceH updated post with full template source", "CreationDate": "2017-08-05T03:00:51.027", "UserId": "292291", "filtered-sentences": []}, {"Id": "77997315", "PostId": "45517234", "Score": "0", "Text": "Once the stack is created, did you look at the resources through the management console to debug the configuration? Firstly, was the CloudWatch Events rule correctly created? Does the Lambda function execute correctly within a Test? When you say \"it does not work\", what exactly is \"it\" and what have you investigated?", "CreationDate": "2017-08-05T04:16:01.913", "UserId": "174777", "filtered-sentences": [{"source": "Text", "text": "Does the Lambda function execute correctly within a Test? ", "keywords": ["test"]}]}, {"Id": "78005914", "PostId": "45517234", "Score": "0", "Text": "@JohnRotenstein the event is created correctly with target as specified in cloudformation. I thought that should trigger the lambda function but it does not. I think I need to create a trigger on the lambda function but cannot find a way to do it in CloudFormation.", "CreationDate": "2017-08-05T14:15:09.040", "UserId": "292291", "filtered-sentences": []}, {"Id": "78016668", "PostId": "45517234", "Score": "0", "Text": "I'm confused -- do you wish to trigger the Lambda function when an instance is run (started), or do you wish to trigger it when the CloudFormation stack is created? If the latter, then use a [AWS Lambda-backed Custom Resource](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources-lambda.html).", "CreationDate": "2017-08-06T03:08:26.273", "UserId": "174777", "filtered-sentences": [{"source": "Text", "text": "I'm confused -- do you wish to trigger the Lambda function when an instance is run (started), or do you wish to trigger it when the CloudFormation stack is created? ", "keywords": ["instance"]}]}, {"Id": "78016777", "PostId": "45517234", "Score": "0", "Text": "@JohnRotenstein I want to trigger lambda when instance is run/started.", "CreationDate": "2017-08-06T03:19:24.670", "UserId": "292291", "filtered-sentences": [{"source": "Text", "text": "@JohnRotenstein I want to trigger lambda when instance is run/started.", "keywords": ["instance"]}]}, {"Id": "78016879", "PostId": "45517234", "Score": "0", "Text": "Your CloudFormation template is creating two new buckets (S3Web and S3Lambda). It is creating a Lambda function where the source code for the Lambda function is in an object called `skynet-lambda.zip` in the newly-created S3Lambda bucket. The deployment fails, saying `Error occurred while GetObject. S3 Error Code: NoSuchKey. S3 Error Message: The specified key does not exist.`. This is because there is no such zip file because it is a new bucket. Where is the Lambda code you wish to execute within the Lambda definition?", "CreationDate": "2017-08-06T03:30:01.060", "UserId": "174777", "filtered-sentences": []}, {"Id": "78017297", "PostId": "45517234", "Score": "0", "Text": "@JohnRotenstein. I actually created the S3 bucket first, uploaded the zip then extended the CloudFormation template with the lambda parts. But am interested in knowing whats the proper way to do this", "CreationDate": "2017-08-06T04:16:42.640", "UserId": "292291", "filtered-sentences": []}], "history": [{"Id": "153275423", "PostHistoryTypeId": "5", "PostId": "45517234", "RevisionGUID": "37782574-6fc5-4564-a926-5dc26728b395", "CreationDate": "2017-08-05T03:00:33.327", "UserId": "292291", "Comment": "added 5097 characters in body", "Text": "I want to use CloudFormation to trigger Lambda when my CloudWatch function is called. I have the below, but it does not work. \r\n\r\nCloudWatch rule created fine \r\n\r\n    \"CloudWatchNewEc2\": {\r\n      \"Type\": \"AWS::Events::Rule\",\r\n      \"DependsOn\": [\"LambdaNewEc2\"],\r\n      \"Properties\": {\r\n        \"Description\": \"Triggered on new EC2 instances\",\r\n        \"EventPattern\": {\r\n          \"source\": [\r\n            \"aws.ec2\"\r\n          ],\r\n          \"detail-type\": [\r\n            \"AWS API Call via CloudTrail\"\r\n          ],\r\n          \"detail\": {\r\n            \"eventSource\": [\r\n              \"ec2.amazonaws.com\"\r\n            ],\r\n            \"eventName\": [\r\n              \"RunInstances\"\r\n            ]\r\n          }\r\n        },\r\n        \"Targets\": [\r\n          {\r\n            \"Arn\": {\r\n              \"Fn::GetAtt\": [\"LambdaNewEc2\", \"Arn\"]\r\n            },\r\n            \"Id\": \"NewEc2AutoTag\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n\r\nLambda created but is not triggered\r\n\r\n    \"LambdaNewEc2\": {\r\n      \"Type\": \"AWS::Lambda::Function\",\r\n      \"DependsOn\": [\"S3Lambda\", \"IAMRoleLambda\"],\r\n      \"Properties\": {\r\n        \"Code\": {\r\n          \"S3Bucket\": {\"Ref\": \"LambdaBucketName\"},\r\n          \"S3Key\": \"skynet-lambda.zip\"\r\n        },\r\n        \"Description\": \"When new EC2 instances are created, auto tag them\",\r\n        \"FunctionName\": \"newEc2AutoTag\",\r\n        \"Handler\": \"index.newEc2_autoTag\",\r\n        \"Role\": {\"Fn::GetAtt\": [\"IAMRoleLambda\", \"Arn\"]},\r\n        \"Runtime\": \"nodejs6.10\",\r\n        \"Timeout\": \"30\"\r\n      }\r\n    }\r\n  },\r\n\r\nIt seems like CloudWatch Target is not sufficient? \r\n\r\n**UPDATE (Full CloudFormation template)**\r\n\r\n    {\r\n      \"Parameters\": {\r\n        \"Environment\": {\r\n          \"Type\": \"String\",\r\n          \"Default\": \"Staging\",\r\n          \"AllowedValues\": [\r\n            \"Testing\",\r\n            \"Staging\",\r\n            \"Production\"\r\n          ],\r\n          \"Description\": \"Environment name\"\r\n        },\r\n        \"BucketName\": {\r\n          \"Type\": \"String\",\r\n          \"Default\": \"skynet-staging\",\r\n          \"Description\": \"Bucket Name\"\r\n        },\r\n        \"LambdaBucketName\": {\r\n          \"Type\": \"String\",\r\n          \"Default\": \"skynet-lambda\",\r\n          \"Description\": \"Lambda Bucket Name\"\r\n        },\r\n        \"Owner\": {\r\n          \"Type\": \"String\",\r\n          \"Description\": \"Owner\"\r\n        }\r\n      },\r\n      \"Resources\": {\r\n        \"S3Web\": {\r\n          \"Type\": \"AWS::S3::Bucket\",\r\n          \"Properties\": {\r\n            \"BucketName\": {\r\n              \"Ref\": \"BucketName\"\r\n            },\r\n            \"WebsiteConfiguration\": {\r\n              \"IndexDocument\": \"index.html\",\r\n              \"RoutingRules\": [\r\n                {\r\n                  \"RedirectRule\": {\r\n                    \"ReplaceKeyPrefixWith\": \"#\"\r\n                  },\r\n                  \"RoutingRuleCondition\": {\r\n                    \"HttpErrorCodeReturnedEquals\": \"404\"\r\n                  }\r\n                }\r\n              ]\r\n            },\r\n            \"AccessControl\": \"PublicRead\",\r\n            \"Tags\": [\r\n              {\r\n                \"Key\": \"Cost Center\",\r\n                \"Value\": \"Skynet\"\r\n              },\r\n              {\r\n                \"Key\": \"Environment\",\r\n                \"Value\": {\r\n                  \"Ref\": \"Environment\"\r\n                }\r\n              },\r\n              {\r\n                \"Key\": \"Owner\",\r\n                \"Value\": {\r\n                  \"Ref\": \"Owner\"\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"S3Lambda\": {\r\n          \"Type\": \"AWS::S3::Bucket\",\r\n          \"Properties\": {\r\n            \"BucketName\": {\r\n              \"Ref\": \"LambdaBucketName\"\r\n            },\r\n            \"VersioningConfiguration\": {\r\n              \"Status\": \"Enabled\"\r\n            },\r\n            \"Tags\": [\r\n              {\r\n                \"Key\": \"Cost Center\",\r\n                \"Value\": \"Skynet\"\r\n              },\r\n              {\r\n                \"Key\": \"Owner\",\r\n                \"Value\": {\r\n                  \"Ref\": \"Owner\"\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"CloudWatchNewEc2\": {\r\n          \"Type\": \"AWS::Events::Rule\",\r\n          \"DependsOn\": [\"LambdaNewEc2\"],\r\n          \"Properties\": {\r\n            \"Description\": \"Triggered on new EC2 instances\",\r\n            \"EventPattern\": {\r\n              \"source\": [\r\n                \"aws.ec2\"\r\n              ],\r\n              \"detail-type\": [\r\n                \"AWS API Call via CloudTrail\"\r\n              ],\r\n              \"detail\": {\r\n                \"eventSource\": [\r\n                  \"ec2.amazonaws.com\"\r\n                ],\r\n                \"eventName\": [\r\n                  \"RunInstances\"\r\n                ]\r\n              }\r\n            },\r\n            \"Targets\": [\r\n              {\r\n                \"Arn\": {\r\n                  \"Fn::GetAtt\": [\"LambdaNewEc2\", \"Arn\"]\r\n                },\r\n                \"Id\": \"NewEc2AutoTag\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"IAMRoleLambda\": {\r\n          \"Type\": \"AWS::IAM::Role\",\r\n          \"Properties\": {\r\n            \"RoleName\": \"skynet-lambda-role\",\r\n            \"AssumeRolePolicyDocument\": {\r\n              \"Version\" : \"2012-10-17\",\r\n              \"Statement\": [\r\n                {\r\n                  \"Effect\": \"Allow\",\r\n                  \"Principal\": {\r\n                      \"Service\": [ \"lambda.amazonaws.com\" ]\r\n                  },\r\n                  \"Action\": [ \"sts:AssumeRole\" ]\r\n                }\r\n              ]\r\n            },\r\n            \"ManagedPolicyArns\": [\r\n              \"arn:aws:iam::aws:policy/AmazonEC2FullAccess\",\r\n              \"arn:aws:iam::aws:policy/AWSLambdaFullAccess\",\r\n              \"arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess\",\r\n              \"arn:aws:iam::aws:policy/CloudWatchLogsFullAccess\"\r\n            ]\r\n          }\r\n        },\r\n        \"LambdaNewEc2\": {\r\n          \"Type\": \"AWS::Lambda::Function\",\r\n          \"DependsOn\": [\"S3Lambda\", \"IAMRoleLambda\"],\r\n          \"Properties\": {\r\n            \"Code\": {\r\n              \"S3Bucket\": {\"Ref\": \"LambdaBucketName\"},\r\n              \"S3Key\": \"skynet-lambda.zip\"\r\n            },\r\n            \"Description\": \"When new EC2 instances are created, auto tag them\",\r\n            \"FunctionName\": \"newEc2AutoTag\",\r\n            \"Handler\": \"index.newEc2_autoTag\",\r\n            \"Role\": {\"Fn::GetAtt\": [\"IAMRoleLambda\", \"Arn\"]},\r\n            \"Runtime\": \"nodejs6.10\",\r\n            \"Timeout\": \"30\"\r\n          }\r\n        }\r\n      },\r\n      \"Outputs\": {\r\n        \"WebUrl\": {\r\n          \"Value\": {\r\n            \"Fn::GetAtt\": [\r\n              \"S3Web\",\r\n              \"WebsiteURL\"\r\n            ]\r\n          },\r\n          \"Description\": \"S3 bucket for web files\"\r\n        }\r\n      }\r\n    }\r\n\r\n", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "CloudWatch rule created fine \"CloudWatchNewEc2\": { \"Type\": \"AWS::Events::Rule\", \"DependsOn\": [\"LambdaNewEc2\"], \"Properties\": { \"Description\": \"Triggered on new EC2 instances\", \"EventPattern\": { \"source\": [ \"aws.ec2\" ], \"detail-type\": [ \"AWS API Call via CloudTrail\" ], \"detail\": { \"eventSource\": [ \"ec2.amazonaws.com\" ], \"eventName\": [ \"RunInstances\" ] } }, \"Targets\": [ { \"Arn\": { \"Fn::GetAtt\": [\"LambdaNewEc2\", \"Arn\"] }, \"Id\": \"NewEc2AutoTag\" } ] } }, Lambda created but is not triggered \"LambdaNewEc2\": { \"Type\": \"AWS::Lambda::Function\", \"DependsOn\": [\"S3Lambda\", \"IAMRoleLambda\"], \"Properties\": { \"Code\": { \"S3Bucket\": {\"Ref\": \"LambdaBucketName\"}, \"S3Key\": \"skynet-lambda.zip\" }, \"Description\": \"When new EC2 instances are created, auto tag them\", \"FunctionName\": \"newEc2AutoTag\", \"Handler\": \"index.newEc2_autoTag\", \"Role\": {\"Fn::GetAtt\": [\"IAMRoleLambda\", \"Arn\"]}, \"Runtime\": \"nodejs6.10\", \"Timeout\": \"30\" } } }, It seems like CloudWatch Target is not sufficient? **UPDATE (Full CloudFormation template)** { \"Parameters\": { \"Environment\": { \"Type\": \"String\", \"Default\": \"Staging\", \"AllowedValues\": [ \"Testing\", \"Staging\", \"Production\" ], \"Description\": \"Environment name\" }, \"BucketName\": { \"Type\": \"String\", \"Default\": \"skynet-staging\", \"Description\": \"Bucket Name\" }, \"LambdaBucketName\": { \"Type\": \"String\", \"Default\": \"skynet-lambda\", \"Description\": \"Lambda Bucket Name\" }, \"Owner\": { \"Type\": \"String\", \"Description\": \"Owner\" } }, \"Resources\": { \"S3Web\": { \"Type\": \"AWS::S3::Bucket\", \"Properties\": { \"BucketName\": { \"Ref\": \"BucketName\" }, \"WebsiteConfiguration\": { \"IndexDocument\": \"index.html\", \"RoutingRules\": [ { \"RedirectRule\": { \"ReplaceKeyPrefixWith\": \"#\" }, \"RoutingRuleCondition\": { \"HttpErrorCodeReturnedEquals\": \"404\" } } ] }, \"AccessControl\": \"PublicRead\", \"Tags\": [ { \"Key\": \"Cost Center\", \"Value\": \"Skynet\" ", "keywords": ["cost", "test"]}, {"source": "Text", "text": "}, \"Tags\": [ { \"Key\": \"Cost Center\", \"Value\": \"Skynet\" ", "keywords": ["cost"]}, {"source": "Text", "text": "}, { \"Key\": \"Owner\", \"Value\": { \"Ref\": \"Owner\" } } ] } }, \"CloudWatchNewEc2\": { \"Type\": \"AWS::Events::Rule\", \"DependsOn\": [\"LambdaNewEc2\"], \"Properties\": { \"Description\": \"Triggered on new EC2 instances\", \"EventPattern\": { \"source\": [ \"aws.ec2\" ], \"detail-type\": [ \"AWS API Call via CloudTrail\" ], \"detail\": { \"eventSource\": [ \"ec2.amazonaws.com\" ], \"eventName\": [ \"RunInstances\" ] } }, \"Targets\": [ { \"Arn\": { \"Fn::GetAtt\": [\"LambdaNewEc2\", \"Arn\"] }, \"Id\": \"NewEc2AutoTag\" } ] } }, \"IAMRoleLambda\": { \"Type\": \"AWS::IAM::Role\", \"Properties\": { \"RoleName\": \"skynet-lambda-role\", \"AssumeRolePolicyDocument\": { \"Version\" : \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"Service\": [ \"lambda.amazonaws.com\" ] }, \"Action\": [ \"sts:AssumeRole\" ] } ] }, \"ManagedPolicyArns\": [ \"arn:aws:iam::aws:policy/AmazonEC2FullAccess\", \"arn:aws:iam::aws:policy/AWSLambdaFullAccess\", \"arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess\", \"arn:aws:iam::aws:policy/CloudWatchLogsFullAccess\" ] } }, \"LambdaNewEc2\": { \"Type\": \"AWS::Lambda::Function\", \"DependsOn\": [\"S3Lambda\", \"IAMRoleLambda\"], \"Properties\": { \"Code\": { \"S3Bucket\": {\"Ref\": \"LambdaBucketName\"}, \"S3Key\": \"skynet-lambda.zip\" }, \"Description\": \"When new EC2 instances are created, auto tag them\", \"FunctionName\": \"newEc2AutoTag\", \"Handler\": \"index.newEc2_autoTag\", \"Role\": {\"Fn::GetAtt\": [\"IAMRoleLambda\", \"Arn\"]}, \"Runtime\": \"nodejs6.10\", \"Timeout\": \"30\" } } }, \"Outputs\": { \"WebUrl\": { \"Value\": { \"Fn::GetAtt\": [ \"S3Web\", \"WebsiteURL\" ] }, \"Description\": \"S3 bucket for web files\" ", "keywords": ["policy"]}]}, {"Id": "153273320", "PostHistoryTypeId": "2", "PostId": "45517234", "RevisionGUID": "ddff70cf-2b1b-4f72-b8f2-b352fafc7a7e", "CreationDate": "2017-08-05T00:58:05.360", "UserId": "292291", "Text": "I want to use CloudFormation to trigger Lambda when my CloudWatch function is called. I have the below, but it does not work. \r\n\r\nCloudWatch rule created fine \r\n\r\n    \"CloudWatchNewEc2\": {\r\n      \"Type\": \"AWS::Events::Rule\",\r\n      \"DependsOn\": [\"LambdaNewEc2\"],\r\n      \"Properties\": {\r\n        \"Description\": \"Triggered on new EC2 instances\",\r\n        \"EventPattern\": {\r\n          \"source\": [\r\n            \"aws.ec2\"\r\n          ],\r\n          \"detail-type\": [\r\n            \"AWS API Call via CloudTrail\"\r\n          ],\r\n          \"detail\": {\r\n            \"eventSource\": [\r\n              \"ec2.amazonaws.com\"\r\n            ],\r\n            \"eventName\": [\r\n              \"RunInstances\"\r\n            ]\r\n          }\r\n        },\r\n        \"Targets\": [\r\n          {\r\n            \"Arn\": {\r\n              \"Fn::GetAtt\": [\"LambdaNewEc2\", \"Arn\"]\r\n            },\r\n            \"Id\": \"NewEc2AutoTag\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n\r\nLambda created but is not triggered\r\n\r\n    \"LambdaNewEc2\": {\r\n      \"Type\": \"AWS::Lambda::Function\",\r\n      \"DependsOn\": [\"S3Lambda\", \"IAMRoleLambda\"],\r\n      \"Properties\": {\r\n        \"Code\": {\r\n          \"S3Bucket\": {\"Ref\": \"LambdaBucketName\"},\r\n          \"S3Key\": \"skynet-lambda.zip\"\r\n        },\r\n        \"Description\": \"When new EC2 instances are created, auto tag them\",\r\n        \"FunctionName\": \"newEc2AutoTag\",\r\n        \"Handler\": \"index.newEc2_autoTag\",\r\n        \"Role\": {\"Fn::GetAtt\": [\"IAMRoleLambda\", \"Arn\"]},\r\n        \"Runtime\": \"nodejs6.10\",\r\n        \"Timeout\": \"30\"\r\n      }\r\n    }\r\n  },\r\n\r\nIt seems like CloudWatch Target is not sufficient? ", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "153273321", "PostHistoryTypeId": "1", "PostId": "45517234", "RevisionGUID": "ddff70cf-2b1b-4f72-b8f2-b352fafc7a7e", "CreationDate": "2017-08-05T00:58:05.360", "UserId": "292291", "Text": "Setup Lambda to trigger from CloudWatch using CloudFormation", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "153273322", "PostHistoryTypeId": "3", "PostId": "45517234", "RevisionGUID": "ddff70cf-2b1b-4f72-b8f2-b352fafc7a7e", "CreationDate": "2017-08-05T00:58:05.360", "UserId": "292291", "Text": "|amazon-web-services|lambda|aws-cloudformation|", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "181456950", "PostHistoryTypeId": "6", "PostId": "45517234", "RevisionGUID": "7bf80845-faa6-440c-86a2-27709c1f6125", "CreationDate": "2018-09-10T09:28:43.483", "UserId": "174777", "Comment": "edited tags", "Text": "|amazon-web-services|aws-lambda|aws-cloudformation|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "45530470", "PostTypeId": "2", "ParentId": "45517234", "CreationDate": "2017-08-06T09:13:33.100", "Score": "2", "Body": "<p>I managed to deploy your template into a CloudFormation stack (by removing the LambdaBucket and pointing to my own zip file). It seems to create all resource correctly.</p>\n\n<p>It took about 10 minutes for the <code>RunInstances</code> event to appear in CloudTrail. It then successfully triggered the Rule, but the CloudWatch metrics for my rule showed a failed invocation because I faked a Lambda function for your template.</p>\n\n<p>Once I edited the rule to point to a better function and re-tested, it worked fine.</p>\n\n<p><strong>Bottom line:</strong> Seems to work!</p>\n", "OwnerUserId": "174777", "LastActivityDate": "2017-08-06T09:13:33.100", "CommentCount": "2", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "78024774", "PostId": "45530470", "Score": "0", "Text": "10 mins. Maybe thats why! I didnt wait that long... didnt expect it to take so long. But in the meantime, I found that its easier to use [AWS SAM](https://github.com/awslabs/serverless-application-model). It extends CloudFormation to allow me to create Serverless/Lambda a little more easily", "CreationDate": "2017-08-06T13:19:00.110", "UserId": "292291", "filtered-sentences": []}, {"Id": "91456193", "PostId": "45530470", "Score": "0", "Text": "Is there any issue in cloud watch ?", "CreationDate": "2018-09-10T09:05:43.267", "UserId": "6492094", "filtered-sentences": []}], "history": [{"Id": "153327694", "PostHistoryTypeId": "2", "PostId": "45530470", "RevisionGUID": "097c40c4-64d6-4fee-a58a-b57ea8fe938a", "CreationDate": "2017-08-06T09:13:33.100", "UserId": "174777", "Text": "I managed to deploy your template into a CloudFormation stack (by removing the LambdaBucket and pointing to my own zip file). It seems to create all resource correctly.\r\n\r\nIt took about 10 minutes for the `RunInstances` event to appear in CloudTrail. It then successfully triggered the Rule, but the CloudWatch metrics for my rule showed a failed invocation because I faked a Lambda function for your template.\r\n\r\nOnce I edited the rule to point to a better function and re-tested, it worked fine.\r\n\r\n**Bottom line:** Seems to work!", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "Once I edited the rule to point to a better function and re-tested, it worked fine. ", "keywords": ["test"]}]}], "filtered-sentences": [{"source": "Body", "text": "Once I edited the rule to point to a better function and re-tested, it worked fine. ", "keywords": ["test"]}]}], "contains-topic": true, "filtered-sentences": []}
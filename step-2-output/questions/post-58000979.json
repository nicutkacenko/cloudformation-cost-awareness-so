{"Id": "58000979", "PostTypeId": "1", "CreationDate": "2019-09-18T21:31:53.143", "Score": "1", "ViewCount": "1578", "Body": "<p>I have a website with CloudFront on top. Example uvwxyz.com. How can I prevent access to any request path that looks like so /no-please?\nuvwxyz.com/mypage/no-please or uvwxyz.com/no-please.\nHow can I achieve this by using CloudFront by setting a template with CloudFormation.</p>\n", "OwnerUserId": "10619997", "LastEditorUserId": "3141903", "LastEditDate": "2019-09-20T19:23:47.560", "LastActivityDate": "2019-09-20T19:23:47.560", "Title": "How to prevent access to path in Aws CloudFront", "Tags": "|amazon-web-services|aws-cloudformation|amazon-cloudfront|", "AnswerCount": "1", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "102410908", "PostId": "58000979", "Score": "0", "Text": "if you want to serve 403 etc when someone accesses uvwxyz.com/mypage/no-please , there are two ways, one way is to use WAF on cloudfront and block if URI contains the path or you can write a lambda@edge function to serve custom html page with 4xx response if uri matches the path, waf would be cheap.", "CreationDate": "2019-09-19T01:58:09.227", "UserId": "11097368", "filtered-sentences": [{"source": "Text", "text": "if you want to serve 403 etc when someone accesses uvwxyz.com/mypage/no-please , there are two ways, one way is to use WAF on cloudfront and block if URI contains the path or you can write a lambda@edge function to serve custom html page with 4xx response if uri matches the path, waf would be cheap.", "keywords": ["cheap"]}]}], "history": [{"Id": "205619120", "PostHistoryTypeId": "2", "PostId": "58000979", "RevisionGUID": "9f10d079-1c25-4cf8-90be-81f154a95cdd", "CreationDate": "2019-09-18T21:31:53.143", "UserId": "10619997", "Text": "I have a website with cloudfront on top. example uvwxyz.com How can I prevent access to any request path that looks like so /no-please?\r\nuvwxyz.com/mypage/no-please or uvwxyz.com/no-please\r\nHow can I achieve this using cloudfront by setting a template with cloudformation.\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "205619121", "PostHistoryTypeId": "1", "PostId": "58000979", "RevisionGUID": "9f10d079-1c25-4cf8-90be-81f154a95cdd", "CreationDate": "2019-09-18T21:31:53.143", "UserId": "10619997", "Text": "How to Prevent access to path in Aws CloudFront", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "205619122", "PostHistoryTypeId": "3", "PostId": "58000979", "RevisionGUID": "9f10d079-1c25-4cf8-90be-81f154a95cdd", "CreationDate": "2019-09-18T21:31:53.143", "UserId": "10619997", "Text": "|amazon-web-services|aws-cloudformation|amazon-cloudfront|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "205753189", "PostHistoryTypeId": "5", "PostId": "58000979", "RevisionGUID": "abeab506-351e-4f1a-8bdb-cffbf2258947", "CreationDate": "2019-09-20T19:23:47.560", "UserId": "3141903", "Comment": "Increased readability. Minor changes.", "Text": "I have a website with CloudFront on top. Example uvwxyz.com. How can I prevent access to any request path that looks like so /no-please?\r\nuvwxyz.com/mypage/no-please or uvwxyz.com/no-please.\r\nHow can I achieve this by using CloudFront by setting a template with CloudFormation.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Comment", "text": "Minor changes.", "keywords": ["change"]}]}, {"Id": "205753190", "PostHistoryTypeId": "4", "PostId": "58000979", "RevisionGUID": "abeab506-351e-4f1a-8bdb-cffbf2258947", "CreationDate": "2019-09-20T19:23:47.560", "UserId": "3141903", "Comment": "Increased readability. Minor changes.", "Text": "How to prevent access to path in Aws CloudFront", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Comment", "text": "Minor changes.", "keywords": ["change"]}]}, {"Id": "205753191", "PostHistoryTypeId": "24", "PostId": "58000979", "RevisionGUID": "abeab506-351e-4f1a-8bdb-cffbf2258947", "CreationDate": "2019-09-20T19:23:47.560", "Comment": "Proposed by 3141903 approved by 7758804, 1145196 edit id of 4490854", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "58001752", "PostTypeId": "2", "ParentId": "58000979", "CreationDate": "2019-09-18T23:06:46.300", "Score": "0", "Body": "<p>You can restrict the access using Signed URLs or signed cookies.</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html\" rel=\"nofollow noreferrer\">Serving Private Content with Signed URLs and Signed Cookies</a></p>\n\n<blockquote>\n  <p>Many companies that distribute content over the internet want to\n  restrict access to documents, business data, media streams, or content\n  that is intended for selected users, for example, users who have paid\n  a fee. To securely serve this private content by using CloudFront, you\n  can do the following:</p>\n</blockquote>\n\n<ul>\n<li><blockquote>\n  <p>Require that your users access your private content by using special\n  CloudFront signed URLs or signed cookies.</p>\n</blockquote></li>\n<li><blockquote>\n  <p>Require that your users access your content by using CloudFront URLs,\n  not URLs that access content directly on the origin server (for\n  example, Amazon S3 or a private HTTP server). Requiring CloudFront\n  URLs isn't necessary, but we recommend it to prevent users from\n  bypassing the restrictions that you specify in signed URLs or signed\n  cookies.</p>\n</blockquote></li>\n</ul>\n", "OwnerUserId": "2314073", "LastEditorUserId": "2314073", "LastEditDate": "2019-09-18T23:12:27.157", "LastActivityDate": "2019-09-18T23:12:27.157", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "205622347", "PostHistoryTypeId": "2", "PostId": "58001752", "RevisionGUID": "9cd94c65-76ee-42a8-8021-62e00b3b7524", "CreationDate": "2019-09-18T23:06:46.300", "UserId": "2314073", "Text": "You can restrict the access using Signed URLs or signed cookies.\r\n\r\n\r\n> Many companies that distribute content over the internet want to\r\n> restrict access to documents, business data, media streams, or content\r\n> that is intended for selected users, for example, users who have paid\r\n> a fee. To securely serve this private content by using CloudFront, you\r\n> can do the following:\r\n> \r\n\r\n - > Require that your users access your private content by using special\r\n   > CloudFront signed URLs or signed cookies.\r\n   > \r\n - > Require that your users access your content by using CloudFront URLs,\r\n      > not URLs that access content directly on the origin server (for\r\n      > example, Amazon S3 or a private HTTP server). Requiring CloudFront\r\n      > URLs isn't necessary, but we recommend it to prevent users from\r\n      > bypassing the restrictions that you specify in signed URLs or signed\r\n      > cookies.\r\n\r\n\r\nResource : https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "205622504", "PostHistoryTypeId": "5", "PostId": "58001752", "RevisionGUID": "cde10c90-366b-4e26-80ea-624baa19a5a3", "CreationDate": "2019-09-18T23:12:27.157", "UserId": "2314073", "Comment": "added 64 characters in body", "Text": "You can restrict the access using Signed URLs or signed cookies.\r\n\r\n[Serving Private Content with Signed URLs and Signed Cookies][1]\r\n\r\n> Many companies that distribute content over the internet want to\r\n> restrict access to documents, business data, media streams, or content\r\n> that is intended for selected users, for example, users who have paid\r\n> a fee. To securely serve this private content by using CloudFront, you\r\n> can do the following:\r\n> \r\n\r\n - > Require that your users access your private content by using special\r\n   > CloudFront signed URLs or signed cookies.\r\n   > \r\n - > Require that your users access your content by using CloudFront URLs,\r\n      > not URLs that access content directly on the origin server (for\r\n      > example, Amazon S3 or a private HTTP server). Requiring CloudFront\r\n      > URLs isn't necessary, but we recommend it to prevent users from\r\n      > bypassing the restrictions that you specify in signed URLs or signed\r\n      > cookies.\r\n\r\n\r\n\r\n  [1]: https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}
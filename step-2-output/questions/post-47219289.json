{"Id": "47219289", "PostTypeId": "1", "CreationDate": "2017-11-10T09:16:03.750", "Score": "0", "ViewCount": "2567", "Body": "<p>I have a free tier account and I create stacks to learn how AWS works. Sometimes I forget to delete the stack and it stays on active for days, using up my free tier hours.</p>\n\n<p>Can I make it so every stack I create will be deleted after a certain period of time, for example 1 day? I assume it would be either by adding something to the template or by adding some tag.</p>\n", "OwnerUserId": "492336", "LastActivityDate": "2017-11-14T16:42:51.137", "Title": "Automatically delete CloudFormation Stack after a timeout", "Tags": "|amazon-web-services|aws-cloudformation|", "AnswerCount": "2", "CommentCount": "1", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "81390212", "PostId": "47219289", "Score": "0", "Text": "see this link https://cloud.netapp.com/blog/automate-ebs-volumes-cost-efficiency alter the script to look for CF stacks instead of ec2.volumes", "CreationDate": "2017-11-10T10:15:25.117", "UserId": "1153938", "filtered-sentences": [{"source": "Text", "text": "see this link https://cloud.netapp.com/blog/automate-ebs-volumes-cost-efficiency alter the script to look for CF stacks instead of ec2.volumes", "keywords": ["cost"]}]}], "history": [{"Id": "160296287", "PostHistoryTypeId": "2", "PostId": "47219289", "RevisionGUID": "e2d169ab-8f07-4ca0-baa0-5c4a4f668b75", "CreationDate": "2017-11-10T09:16:03.750", "UserId": "492336", "Text": "I have a free tier account and I create stacks to learn how AWS works. Sometimes I forget to delete the stack and it stays on active for days, using up my free tier hours.\r\n\r\nCan I make it so every stack I create will be deleted after a certain period of time, for example 1 day? I assume it would be either by adding something to the template or by adding some tag.\r\n", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "160296288", "PostHistoryTypeId": "1", "PostId": "47219289", "RevisionGUID": "e2d169ab-8f07-4ca0-baa0-5c4a4f668b75", "CreationDate": "2017-11-10T09:16:03.750", "UserId": "492336", "Text": "Automatically delete CloudFormation Stack after a timeout", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "160296289", "PostHistoryTypeId": "3", "PostId": "47219289", "RevisionGUID": "e2d169ab-8f07-4ca0-baa0-5c4a4f668b75", "CreationDate": "2017-11-10T09:16:03.750", "UserId": "492336", "Text": "|amazon-web-services|aws-cloudformation|", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "answers": [{"Id": "47290886", "PostTypeId": "2", "ParentId": "47219289", "CreationDate": "2017-11-14T16:37:41.293", "Score": "3", "Body": "<p>TheeCodeDragon seems to have posted an answer with a self-deleting stack which addresses your problem. Here are some other solutions.</p>\n\n<p><strong>Scheduled AutoScaling</strong></p>\n\n<p>If your primary resources are EC2 instances, if you configure them in an autoscaling group and set a schedule for your group to scale to 0. We've done this to make instances vanish on the weekends, after 6:00 PM in our dev environment then scale back up Monday morning so we don't waste money in the dev environment. <a href=\"http://docs.aws.amazon.com/autoscaling/latest/userguide/schedule_time.html#create-sch-actions\" rel=\"nofollow noreferrer\">http://docs.aws.amazon.com/autoscaling/latest/userguide/schedule_time.html#create-sch-actions</a></p>\n\n<p><strong>Lambda (The Cron of the Cloud)</strong></p>\n\n<p>When management functionality doesn't exist out of the box, 9 out of 10 times you can write a lambda function to run on a schedule to take care of it. You can write a lambda function that runs every 'X' interval or time period and executes a delete-stack on the stack you've configured. Lambda can be set-up via CloudFormation.</p>\n\n<p><strong>Deployment Notes:</strong></p>\n\n<p>I saw your comment about the CLI not being installed by default. Even for dev I use AWS codebuild. A self-managed serverless build tool comparable to Jenkins. If you use it to run your templates the CLI is already installed. The caveat is you need to have it pull your project from source control or s3. I use codecommit because the setup is easy.</p>\n", "OwnerUserId": "975649", "LastEditorUserId": "975649", "LastEditDate": "2017-11-14T16:42:51.137", "LastActivityDate": "2017-11-14T16:42:51.137", "CommentCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "160600917", "PostHistoryTypeId": "2", "PostId": "47290886", "RevisionGUID": "f6c94ecd-477a-4fc8-bb50-4998569cb9fd", "CreationDate": "2017-11-14T16:37:41.293", "UserId": "975649", "Text": "TheeCodeDragon seems to have posted an answer with a self-deleting stack which addresses your problem. Here are some other solutions.\r\n\r\n**Scheduled AutoScaling**\r\n\r\nIf your primary resources are EC2 instances, if you configure them in an autoscaling group and set a schedule for your group to scale to 0. We've done this to make instances vanish on the weekends, after 6:00 PM in our dev environment then scale back up Monday morning so we don't waste money in the dev environment. http://docs.aws.amazon.com/autoscaling/latest/userguide/schedule_time.html#create-sch-actions\r\n\r\n**Lambda (The Cron of the Cloud)**\r\n\r\nWhen management functionality doesn't exist out of the box, 9 out of 10 times you can write a lambda function to run on a schedule to take care of it. You can write a lambda function that runs every 'X' interval or time period and executes a delete-stack on the stack you've configured. Lambda can be set-up via CloudFormation.\r\n\r\n", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "160601318", "PostHistoryTypeId": "5", "PostId": "47290886", "RevisionGUID": "1ac9904e-b642-4b44-9d16-a9bef0241aeb", "CreationDate": "2017-11-14T16:42:51.137", "UserId": "975649", "Comment": "added notes about deployment and CLI", "Text": "TheeCodeDragon seems to have posted an answer with a self-deleting stack which addresses your problem. Here are some other solutions.\r\n\r\n**Scheduled AutoScaling**\r\n\r\nIf your primary resources are EC2 instances, if you configure them in an autoscaling group and set a schedule for your group to scale to 0. We've done this to make instances vanish on the weekends, after 6:00 PM in our dev environment then scale back up Monday morning so we don't waste money in the dev environment. http://docs.aws.amazon.com/autoscaling/latest/userguide/schedule_time.html#create-sch-actions\r\n\r\n**Lambda (The Cron of the Cloud)**\r\n\r\nWhen management functionality doesn't exist out of the box, 9 out of 10 times you can write a lambda function to run on a schedule to take care of it. You can write a lambda function that runs every 'X' interval or time period and executes a delete-stack on the stack you've configured. Lambda can be set-up via CloudFormation.\r\n\r\n**Deployment Notes:**\r\n\r\nI saw your comment about the CLI not being installed by default. Even for dev I use AWS codebuild. A self-managed serverless build tool comparable to Jenkins. If you use it to run your templates the CLI is already installed. The caveat is you need to have it pull your project from source control or s3. I use codecommit because the setup is easy.", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "47224746", "PostTypeId": "2", "ParentId": "47219289", "CreationDate": "2017-11-10T14:15:12.070", "Score": "2", "Body": "<p>I would do this if I go the CF way of auto deleting resources after a period of time specified.</p>\n\n<p><a href=\"https://aws-cfn-examples.s3.amazonaws.com/Stack_TTL.template\" rel=\"nofollow noreferrer\">AWS Cloud formation TTL template with auto stack deletion</a></p>\n\n<p>but honestly, I do this in various other ways now, use a bot which has a schedule to scan my resources everyday and clean it up, because 5 years down the line, I have no more free tier credits :)</p>\n\n<p>All the best!</p>\n", "OwnerUserId": "8493648", "LastActivityDate": "2017-11-10T14:15:12.070", "CommentCount": "2", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "81399683", "PostId": "47224746", "Score": "0", "Text": "My EC2 instance is on Windows, however. I could easily changed deletestack.sh to a bat file, but the problem is on windows you don't have aws cli installed by default. For Linux it would work, though. Actually, it would be easier to just do a cron job from my own computer, now that I think about it. Maybe check stack creation date and delete it if older than a day.", "CreationDate": "2017-11-10T14:23:38.000", "UserId": "492336", "filtered-sentences": [{"source": "Text", "text": "My EC2 instance is on Windows, however. ", "keywords": ["instance"]}, {"source": "Text", "text": "I could easily changed deletestack.sh to a bat file, but the problem is on windows you don't have aws cli installed by default. ", "keywords": ["change"]}]}, {"Id": "81399769", "PostId": "47224746", "Score": "0", "Text": "yup, user data should do the magic haven't tried this but would use something like this:\n\n'Invoke-WebRequest -Uri https://s3.amazonaws.com/aws-cli/AWSCLI64.msi -Outfile Z:\\AWSCLI64.msi'\n\n&\n\n'Start-Process \"Z:\\AWSCLI64.msi\" /qn -Wait'", "CreationDate": "2017-11-10T14:25:47.900", "UserId": "8493648", "filtered-sentences": []}], "history": [{"Id": "160318263", "PostHistoryTypeId": "2", "PostId": "47224746", "RevisionGUID": "935e710d-71d1-4a3c-88c1-c845cb1c4f43", "CreationDate": "2017-11-10T14:15:12.070", "UserId": "8493648", "Text": "I would do this if I go the CF way of auto deleting resources after a period of time specified.\r\n\r\n[AWS Cloud formation TTL template with auto stack deletion][1]\r\n\r\n\r\n  [1]: https://aws-cfn-examples.s3.amazonaws.com/Stack_TTL.template\r\n\r\nbut honestly, I do this in various other ways now, use a bot which has a schedule to scan my resources everyday and clean it up, because 5 years down the line, I have no more free tier credits :)\r\n\r\nAll the best!", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}
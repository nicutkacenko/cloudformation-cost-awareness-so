{"Id": "37164643", "PostTypeId": "1", "CreationDate": "2016-05-11T13:47:51.233", "Score": "2", "ViewCount": "13720", "Body": "<p>I would like to create a CloudFormation template whose instance type is \"t2.micro\". However, i couldn't find any example about this instance type. Ec2 whose type is \"t2.micro\" needs VPC, etc.</p>\n\n<p>Thanks.</p>\n", "OwnerUserId": "1445116", "LastActivityDate": "2020-02-14T12:46:07.763", "Title": "Create Aws Cloudformation Ec2 t2.micro Template", "Tags": "|aws-cloudformation|amazon-ec2|", "AnswerCount": "3", "CommentCount": "0", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "117829416", "PostHistoryTypeId": "2", "PostId": "37164643", "RevisionGUID": "cbf558f0-9904-42f4-ba38-a7ada4c8ae7f", "CreationDate": "2016-05-11T13:47:51.233", "UserId": "1445116", "Text": "I would like to create a CloudFormation template whose instance type is \"t2.micro\". However, i couldn't find any example about this instance type. Ec2 whose type is \"t2.micro\" needs VPC, etc.\r\n\r\nThanks.", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "I would like to create a CloudFormation template whose instance type is \"t2.micro\". ", "keywords": ["instance"]}, {"source": "Text", "text": "However, i couldn't find any example about this instance type. ", "keywords": ["instance"]}]}, {"Id": "117829417", "PostHistoryTypeId": "1", "PostId": "37164643", "RevisionGUID": "cbf558f0-9904-42f4-ba38-a7ada4c8ae7f", "CreationDate": "2016-05-11T13:47:51.233", "UserId": "1445116", "Text": "Create Aws Cloudformation Ec2 t2.micro Template", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "117829418", "PostHistoryTypeId": "3", "PostId": "37164643", "RevisionGUID": "cbf558f0-9904-42f4-ba38-a7ada4c8ae7f", "CreationDate": "2016-05-11T13:47:51.233", "UserId": "1445116", "Text": "|aws-cloudformation|amazon-ec2|", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "answers": [{"Id": "55026414", "PostTypeId": "2", "ParentId": "37164643", "CreationDate": "2019-03-06T15:16:22.967", "Score": "1", "Body": "<p>Below stack allows to create EC2 instance, just specify parameters like VPC id,Subnet Id, SG id, instance type, also ami id , for instance type u can define in this it is t2,micro by default. This Is sucessfully tested and running w/o errors.kindly comment if you have any queries.######Created by MARK Machines \n So is this,:</p>\n\n<pre><code>    {\"Description\": \"CloudFormation template for creating an ec2 instance\",\n\"Parameters\": {\n    \"KeyName\": {\n        \"Description\": \"Key Pair name\",\n        \"Type\": \"AWS::EC2::KeyPair::KeyName\",\n        \"Default\": \"xxx-xxx\"\n    },\n    \"VPC\": {\n        \"Type\": \"AWS::EC2::VPC::Id\",\n        \"Default\":\"givevpcid\"\n    },\n    \"Subnet\":{\n        \"Type\": \"AWS::EC2::Subnet::Id\",\n        \"Default\": \"givesubnetid\"\n    },\n    \"InstanceType\": {\n        \"Description\": \"Select one of the possible instance types\",\n        \"Type\": \"String\",\n        \"Default\": \"t2.micro\",\n        \"AllowedValues\": [\"t2.micro\", \"t2.small\", \"t2.medium\"]\n    },\n    \"SecurityGroup\":{\n         \"Type\": \"AWS::EC2::SecurityGroup::Id\",\n         \"Default\" : \"givesecuritygroupid\",\n         \"AllowedValues\": [\"sg-xxxxx\", \"sg-yyy\", \"sg-zzz\"]\n    } \n},\n\"Resources\":{\n    \"Server\": {\n        \"Type\": \"AWS::EC2::Instance\",\n        \"Properties\": {\n            \"ImageId\": \"ami-098789xxxxxxxxx\",\n            \"InstanceType\": {\"Ref\": \"InstanceType\"},\n            \"KeyName\": {\"Ref\": \"KeyName\"},\n            \"SecurityGroupIds\": [{\"Ref\": \"SecurityGroup\"}],\n            \"SubnetId\": {\"Ref\": \"Subnet\"}\n        }\n    }\n},\n\"Outputs\": {\n    \"PublicName\": {\n        \"Value\": {\"Fn::GetAtt\": [\"Server\", \"PublicDnsName\"]},\n        \"Description\": \"Public name (connect via SSH)\"\n    }   \n}\n</code></pre>\n\n<p>}</p>\n", "OwnerUserId": "9677754", "LastEditorUserId": "9677754", "LastEditDate": "2019-03-07T10:04:03.990", "LastActivityDate": "2019-03-07T10:04:03.990", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "193040040", "PostHistoryTypeId": "2", "PostId": "55026414", "RevisionGUID": "b7be4689-5054-48d2-abf8-0ee5be723068", "CreationDate": "2019-03-06T15:16:22.967", "UserId": "9677754", "Text": " Below stack allows to create EC2 instance, just specify parameters like VPC id,Subnet Id, SG id, instance type, also ami id , for instance type u can define in this it is t2,micro by default######Created by MARK Machines \r\n So is this,:\r\n \r\n        {\"Description\": \"CloudFormation template for creating an ec2 instance\",\r\n    \"Parameters\": {\r\n        \"KeyName\": {\r\n            \"Description\": \"Key Pair name\",\r\n            \"Type\": \"AWS::EC2::KeyPair::KeyName\",\r\n            \"Default\": \"xxx-xxx\"\r\n        },\r\n        \"VPC\": {\r\n            \"Type\": \"AWS::EC2::VPC::Id\",\r\n            \"Default\":\"givevpcid\"\r\n        },\r\n        \"Subnet\":{\r\n            \"Type\": \"AWS::EC2::Subnet::Id\",\r\n            \"Default\": \"givesubnetid\"\r\n        },\r\n        \"InstanceType\": {\r\n            \"Description\": \"Select one of the possible instance types\",\r\n            \"Type\": \"String\",\r\n            \"Default\": \"t2.micro\",\r\n            \"AllowedValues\": [\"t2.micro\", \"t2.small\", \"t2.medium\"]\r\n        },\r\n  \"SecurityGroup\":{\r\n       \"Type\": \"AWS::EC2::SecurityGroup::Id\",\r\n    \"Default\" : \"givesecuritygroupid\",\r\n    \"AllowedValues\": [\"sg-xxxxx\", \"sg-yyy\", \"sg-zzz\"]\r\n        } \r\n    },\r\n    \"Resources\":{\r\n        \"Server\": {\r\n            \"Type\": \"AWS::EC2::Instance\",\r\n            \"Properties\": {\r\n                \"ImageId\": \"ami-098789xxxxxxxxx\",\r\n                \"InstanceType\": {\"Ref\": \"InstanceType\"},\r\n                \"KeyName\": {\"Ref\": \"KeyName\"},\r\n                \"SecurityGroupIds\": [{\"Ref\": \"SecurityGroup\"}],\r\n                \"SubnetId\": {\"Ref\": \"Subnet\"}\r\n            }\r\n        }\r\n    },\r\n    \"Outputs\": {\r\n        \"PublicName\": {\r\n            \"Value\": {\"Fn::GetAtt\": [\"Server\", \"PublicDnsName\"]},\r\n            \"Description\": \"Public name (connect via SSH)\"\r\n        }   \r\n    }\r\n}", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Below stack allows to create EC2 instance, just specify parameters like VPC id,Subnet Id, SG id, instance type, also ami id , for instance type u can define in this it is t2,micro by default######Created by MARK Machines ", "keywords": ["instance"]}, {"source": "Text", "text": "So is this,: {\"Description\": \"CloudFormation template for creating an ec2 instance\", \"Parameters\": { \"KeyName\": { \"Description\": \"Key Pair name\", \"Type\": \"AWS::EC2::KeyPair::KeyName\", \"Default\": \"xxx-xxx\" }, \"VPC\": { \"Type\": \"AWS::EC2::VPC::Id\", \"Default\":\"givevpcid\" }, \"Subnet\":{ \"Type\": \"AWS::EC2::Subnet::Id\", \"Default\": \"givesubnetid\" }, \"InstanceType\": { \"Description\": \"Select one of the possible instance types\", \"Type\": \"String\", \"Default\": \"t2.micro\", \"AllowedValues\": [\"t2.micro\", \"t2.small\", \"t2.medium\"] }, \"SecurityGroup\":{ \"Type\": \"AWS::EC2::SecurityGroup::Id\", \"Default\" : \"givesecuritygroupid\", \"AllowedValues\": [\"sg-xxxxx\", \"sg-yyy\", \"sg-zzz\"] } }, \"Resources\":{ \"Server\": { \"Type\": \"AWS::EC2::Instance\", \"Properties\": { \"ImageId\": \"ami-098789xxxxxxxxx\", \"InstanceType\": {\"Ref\": \"InstanceType\"}, \"KeyName\": {\"Ref\": \"KeyName\"}, \"SecurityGroupIds\": [{\"Ref\": \"SecurityGroup\"}], \"SubnetId\": {\"Ref\": \"Subnet\"} } } }, \"Outputs\": { \"PublicName\": { \"Value\": {\"Fn::GetAtt\": [\"Server\", \"PublicDnsName\"]}, \"Description\": \"Public name (connect via SSH)\" ", "keywords": ["instance"]}]}, {"Id": "193100342", "PostHistoryTypeId": "5", "PostId": "55026414", "RevisionGUID": "68ec631a-cc72-4420-82f2-9a43a793b144", "CreationDate": "2019-03-07T10:04:03.990", "UserId": "9677754", "Comment": "added 91 characters in body", "Text": " Below stack allows to create EC2 instance, just specify parameters like VPC id,Subnet Id, SG id, instance type, also ami id , for instance type u can define in this it is t2,micro by default. This Is sucessfully tested and running w/o errors.kindly comment if you have any queries.######Created by MARK Machines \r\n So is this,:\r\n \r\n        {\"Description\": \"CloudFormation template for creating an ec2 instance\",\r\n    \"Parameters\": {\r\n        \"KeyName\": {\r\n            \"Description\": \"Key Pair name\",\r\n            \"Type\": \"AWS::EC2::KeyPair::KeyName\",\r\n            \"Default\": \"xxx-xxx\"\r\n        },\r\n        \"VPC\": {\r\n            \"Type\": \"AWS::EC2::VPC::Id\",\r\n            \"Default\":\"givevpcid\"\r\n        },\r\n        \"Subnet\":{\r\n            \"Type\": \"AWS::EC2::Subnet::Id\",\r\n            \"Default\": \"givesubnetid\"\r\n        },\r\n        \"InstanceType\": {\r\n            \"Description\": \"Select one of the possible instance types\",\r\n            \"Type\": \"String\",\r\n            \"Default\": \"t2.micro\",\r\n            \"AllowedValues\": [\"t2.micro\", \"t2.small\", \"t2.medium\"]\r\n        },\r\n  \"SecurityGroup\":{\r\n       \"Type\": \"AWS::EC2::SecurityGroup::Id\",\r\n    \"Default\" : \"givesecuritygroupid\",\r\n    \"AllowedValues\": [\"sg-xxxxx\", \"sg-yyy\", \"sg-zzz\"]\r\n        } \r\n    },\r\n    \"Resources\":{\r\n        \"Server\": {\r\n            \"Type\": \"AWS::EC2::Instance\",\r\n            \"Properties\": {\r\n                \"ImageId\": \"ami-098789xxxxxxxxx\",\r\n                \"InstanceType\": {\"Ref\": \"InstanceType\"},\r\n                \"KeyName\": {\"Ref\": \"KeyName\"},\r\n                \"SecurityGroupIds\": [{\"Ref\": \"SecurityGroup\"}],\r\n                \"SubnetId\": {\"Ref\": \"Subnet\"}\r\n            }\r\n        }\r\n    },\r\n    \"Outputs\": {\r\n        \"PublicName\": {\r\n            \"Value\": {\"Fn::GetAtt\": [\"Server\", \"PublicDnsName\"]},\r\n            \"Description\": \"Public name (connect via SSH)\"\r\n        }   \r\n    }\r\n}", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Below stack allows to create EC2 instance, just specify parameters like VPC id,Subnet Id, SG id, instance type, also ami id , for instance type u can define in this it is t2,micro by default. ", "keywords": ["instance"]}, {"source": "Text", "text": "This Is sucessfully tested and running w/o errors.kindly comment if you have any queries.######Created by MARK Machines ", "keywords": ["test"]}, {"source": "Text", "text": "So is this,: {\"Description\": \"CloudFormation template for creating an ec2 instance\", \"Parameters\": { \"KeyName\": { \"Description\": \"Key Pair name\", \"Type\": \"AWS::EC2::KeyPair::KeyName\", \"Default\": \"xxx-xxx\" }, \"VPC\": { \"Type\": \"AWS::EC2::VPC::Id\", \"Default\":\"givevpcid\" }, \"Subnet\":{ \"Type\": \"AWS::EC2::Subnet::Id\", \"Default\": \"givesubnetid\" }, \"InstanceType\": { \"Description\": \"Select one of the possible instance types\", \"Type\": \"String\", \"Default\": \"t2.micro\", \"AllowedValues\": [\"t2.micro\", \"t2.small\", \"t2.medium\"] }, \"SecurityGroup\":{ \"Type\": \"AWS::EC2::SecurityGroup::Id\", \"Default\" : \"givesecuritygroupid\", \"AllowedValues\": [\"sg-xxxxx\", \"sg-yyy\", \"sg-zzz\"] } }, \"Resources\":{ \"Server\": { \"Type\": \"AWS::EC2::Instance\", \"Properties\": { \"ImageId\": \"ami-098789xxxxxxxxx\", \"InstanceType\": {\"Ref\": \"InstanceType\"}, \"KeyName\": {\"Ref\": \"KeyName\"}, \"SecurityGroupIds\": [{\"Ref\": \"SecurityGroup\"}], \"SubnetId\": {\"Ref\": \"Subnet\"} } } }, \"Outputs\": { \"PublicName\": { \"Value\": {\"Fn::GetAtt\": [\"Server\", \"PublicDnsName\"]}, \"Description\": \"Public name (connect via SSH)\" ", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "Below stack allows to create EC2 instance, just specify parameters like VPC id,Subnet Id, SG id, instance type, also ami id , for instance type u can define in this it is t2,micro by default. ", "keywords": ["instance"]}, {"source": "Body", "text": "This Is sucessfully tested and running w/o errors.kindly comment if you have any queries.######Created by MARK Machines ", "keywords": ["test"]}]}, {"Id": "37165604", "PostTypeId": "2", "ParentId": "37164643", "CreationDate": "2016-05-11T14:25:17.800", "Score": "2", "Body": "<p>You can make use the following template snippet.<br> \nIt will output the EC2 instance Public DNS name.</p>\n\n<p><strong>Note:</strong> I haven't tested this template!</p>\n\n<pre><code>{\n    \"AWSTemplateFormatVersion\": \"2010-09-09\",\n    \"Description\": \"CloudFormation template for creating an ec2 instance\",\n    \"Parameters\": {\n        \"KeyName\": {\n            \"Description\": \"Key Pair name\",\n            \"Type\": \"AWS::EC2::KeyPair::KeyName\",\n            \"Default\": \"my_keypair_name\"\n        },\n        \"VPC\": {\n            \"Type\": \"AWS::EC2::VPC\",\n            \"Properties\":{\n                \"CidrBlock\": \"10.0.0.0/16\",\n                \"EnableDnsHostnames\": \"true\"\n            }\n        },\n        \"Subnet\":{\n            \"Type\": \"AWS::EC2::Subnet\",\n            \"Properties\": {\n                \"VpcId\": {\"Ref\": \"VPC\"},\n                \"CidrBlock\": \"10.0.0.0/24\",\n                \"AvailabilityZone\": \"us-east-1a\"\n            }\n        },\n        \"InstanceType\": {\n            \"Description\": \"Select one of the possible instance types\",\n            \"Type\": \"String\",\n            \"Default\": \"t2.micro\",\n            \"AllowedValues\": [\"t2.micro\", \"t2.small\", \"t2.medium\"]\n        }\n    },\n    \"Resources\":{\n        \"SecurityGroup\":{\n            \"Type\": \"AWS::EC2::SecurityGroup\",\n            \"Properties\": {\n                \"GroupDescription\": \"My security group\",\n                \"VpcId\": {\"Ref\": \"VPC\"},\n                \"SecurityGroupIngress\": [{\n                    \"CidrIp\": \"0.0.0.0/0\",\n                    \"FromPort\": 22,\n                    \"IpProtocol\": \"tcp\",\n                    \"ToPort\": 22\n                }]\n            }\n        },\n        \"Server\": {\n            \"Type\": \"AWS::EC2::Instance\",\n            \"Properties\": {\n                \"ImageId\": \"ami-123456\",\n                \"InstanceType\": {\"Ref\": \"InstanceType\"},\n                \"KeyName\": {\"Ref\": \"KeyName\"},\n                \"SecurityGroupIds\": [{\"Ref\": \"SecurityGroup\"}],\n                \"SubnetId\": {\"Ref\": \"Subnet\"}\n            }\n        }\n    },\n    \"Outputs\": {\n        \"PublicName\": {\n            \"Value\": {\"Fn::GetAtt\": [\"Server\", \"PublicDnsName\"]},\n            \"Description\": \"Public name (connect via SSH)\"\n        }   \n    }\n}\n</code></pre>\n\n<p>For more information see: <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\" rel=\"nofollow\">http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html</a></p>\n", "OwnerUserId": "1280320", "LastEditorUserId": "1280320", "LastEditDate": "2016-05-11T14:30:19.670", "LastActivityDate": "2016-05-11T14:30:19.670", "CommentCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "117833078", "PostHistoryTypeId": "2", "PostId": "37165604", "RevisionGUID": "41e3beb0-a7b9-43d3-9bb0-2b27d85b31b1", "CreationDate": "2016-05-11T14:25:17.800", "UserId": "1280320", "Text": "You can make use the following template snippet.<br> \r\n**Note:** I haven't tested this template!\r\n\r\n    {\r\n        \"AWSTemplateFormatVersion\": \"2010-09-09\",\r\n        \"Description\": \"CloudFormation template for creating an ec2 instance\",\r\n        \"Parameters\": {\r\n            \"KeyName\": {\r\n                \"Description\": \"Key Pair name\",\r\n                \"Type\": \"AWS::EC2::KeyPair::KeyName\",\r\n                \"Default\": \"my_keypair_name\"\r\n            },\r\n            \"VPC\": {\r\n                \"Type\": \"AWS::EC2::VPC\",\r\n                \"Properties\":{\r\n                    \"CidrBlock\": \"10.0.0.0/16\",\r\n                    \"EnableDnsHostnames\": \"true\"\r\n                }\r\n            },\r\n            \"Subnet\":{\r\n                \"Type\": \"AWS::EC2::Subnet\",\r\n                \"Properties\": {\r\n                    \"VpcId\": {\"Ref\": \"VPC\"},\r\n                    \"CidrBlock\": \"10.0.0.0/24\",\r\n                    \"AvailabilityZone\": \"us-east-1a\"\r\n                }\r\n            },\r\n            \"InstanceType\": {\r\n                \"Description\": \"Select one of the possible instance types\",\r\n                \"Type\": \"String\",\r\n                \"Default\": \"t2.micro\",\r\n                \"AllowedValues\": [\"t2.micro\", \"t2.small\", \"t2.medium\"]\r\n            }\r\n        },\r\n        \"Resources\":{\r\n            \"SecurityGroup\":{\r\n                \"Type\": \"AWS::EC2::SecurityGroup\",\r\n                \"Properties\": {\r\n                    \"GroupDescription\": \"Allow http\",\r\n                    \"VpcId\" : {\"Ref\" : \"VPC\"},\r\n                    \"SecurityGroupIngress\" : [{\r\n                        \"IpProtocol\" : \"tcp\",\r\n                        \"FromPort\" : \"80\",\r\n                        \"ToPort\" : \"80\",\r\n                        \"CidrIp\" : \"0.0.0.0/0\"\r\n                    }],\r\n                    \"SecurityGroupEgress\" : [{\r\n                        \"IpProtocol\" : \"tcp\",\r\n                        \"FromPort\" : \"80\",\r\n                        \"ToPort\" : \"80\",\r\n                        \"CidrIp\" : \"0.0.0.0/0\"\r\n                    }]\r\n                }\r\n            },\r\n            \"Server\": {\r\n                \"Type\": \"AWS::EC2::Instance\",\r\n                \"Properties\": {\r\n                    \"ImageId\": \"ami-123456\",\r\n                    \"InstanceType\": {\"Ref\": \"InstanceType\"},\r\n                    \"KeyName\": {\"Ref\": \"KeyName\"},\r\n                    \"SecurityGroupIds\": [{\"Ref\": \"SecurityGroup\"}],\r\n                    \"SubnetId\": {\"Ref\": \"Subnet\"}\r\n                }\r\n            }\r\n        },\r\n        \"Outputs\": {\r\n            \"PublicName\": {\r\n                \"Value\": {\"Fn::GetAtt\": [\"Server\", \"PublicDnsName\"]},\r\n                \"Description\": \"Public name (connect via SSH)\"\r\n            }   \r\n        }\r\n    }\r\n\r\nFor more information see: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "**Note:** I haven't tested this template! { \"AWSTemplateFormatVersion\": \"2010-09-09\", \"Description\": \"CloudFormation template for creating an ec2 instance\", \"Parameters\": { \"KeyName\": { \"Description\": \"Key Pair name\", \"Type\": \"AWS::EC2::KeyPair::KeyName\", \"Default\": \"my_keypair_name\" }, \"VPC\": { \"Type\": \"AWS::EC2::VPC\", \"Properties\":{ \"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": \"true\" } }, \"Subnet\":{ \"Type\": \"AWS::EC2::Subnet\", \"Properties\": { \"VpcId\": {\"Ref\": \"VPC\"}, \"CidrBlock\": \"10.0.0.0/24\", \"AvailabilityZone\": \"us-east-1a\" } }, \"InstanceType\": { \"Description\": \"Select one of the possible instance types\", \"Type\": \"String\", \"Default\": \"t2.micro\", \"AllowedValues\": [\"t2.micro\", \"t2.small\", \"t2.medium\"] } }, \"Resources\":{ \"SecurityGroup\":{ \"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": { \"GroupDescription\": \"Allow http\", \"VpcId\" : {\"Ref\" : \"VPC\"}, \"SecurityGroupIngress\" : [{ \"IpProtocol\" : \"tcp\", \"FromPort\" : \"80\", \"ToPort\" : \"80\", \"CidrIp\" : \"0.0.0.0/0\" ", "keywords": ["instance", "test"]}, {"source": "Text", "text": "}] } }, \"Server\": { \"Type\": \"AWS::EC2::Instance\", \"Properties\": { \"ImageId\": \"ami-123456\", \"InstanceType\": {\"Ref\": \"InstanceType\"}, \"KeyName\": {\"Ref\": \"KeyName\"}, \"SecurityGroupIds\": [{\"Ref\": \"SecurityGroup\"}], \"SubnetId\": {\"Ref\": \"Subnet\"} } } }, \"Outputs\": { \"PublicName\": { \"Value\": {\"Fn::GetAtt\": [\"Server\", \"PublicDnsName\"]}, \"Description\": \"Public name (connect via SSH)\" ", "keywords": ["instance"]}]}, {"Id": "117833557", "PostHistoryTypeId": "5", "PostId": "37165604", "RevisionGUID": "42ea9771-674e-48c4-9f99-58daa33ae8d1", "CreationDate": "2016-05-11T14:30:19.670", "UserId": "1280320", "Comment": "deleted 332 characters in body", "Text": "You can make use the following template snippet.<br> \r\nIt will output the EC2 instance Public DNS name.\r\n\r\n**Note:** I haven't tested this template!\r\n\r\n    {\r\n        \"AWSTemplateFormatVersion\": \"2010-09-09\",\r\n        \"Description\": \"CloudFormation template for creating an ec2 instance\",\r\n        \"Parameters\": {\r\n            \"KeyName\": {\r\n                \"Description\": \"Key Pair name\",\r\n                \"Type\": \"AWS::EC2::KeyPair::KeyName\",\r\n                \"Default\": \"my_keypair_name\"\r\n            },\r\n            \"VPC\": {\r\n                \"Type\": \"AWS::EC2::VPC\",\r\n                \"Properties\":{\r\n                    \"CidrBlock\": \"10.0.0.0/16\",\r\n                    \"EnableDnsHostnames\": \"true\"\r\n                }\r\n            },\r\n            \"Subnet\":{\r\n                \"Type\": \"AWS::EC2::Subnet\",\r\n                \"Properties\": {\r\n                    \"VpcId\": {\"Ref\": \"VPC\"},\r\n                    \"CidrBlock\": \"10.0.0.0/24\",\r\n                    \"AvailabilityZone\": \"us-east-1a\"\r\n                }\r\n            },\r\n            \"InstanceType\": {\r\n                \"Description\": \"Select one of the possible instance types\",\r\n                \"Type\": \"String\",\r\n                \"Default\": \"t2.micro\",\r\n                \"AllowedValues\": [\"t2.micro\", \"t2.small\", \"t2.medium\"]\r\n            }\r\n        },\r\n        \"Resources\":{\r\n            \"SecurityGroup\":{\r\n                \"Type\": \"AWS::EC2::SecurityGroup\",\r\n       \"Properties\": {\r\n        \"GroupDescription\": \"My security group\",\r\n        \"VpcId\": {\"Ref\": \"VPC\"},\r\n        \"SecurityGroupIngress\": [{\r\n         \"CidrIp\": \"0.0.0.0/0\",\r\n         \"FromPort\": 22,\r\n         \"IpProtocol\": \"tcp\",\r\n         \"ToPort\": 22\r\n        }]\r\n       }\r\n            },\r\n            \"Server\": {\r\n                \"Type\": \"AWS::EC2::Instance\",\r\n                \"Properties\": {\r\n                    \"ImageId\": \"ami-123456\",\r\n                    \"InstanceType\": {\"Ref\": \"InstanceType\"},\r\n                    \"KeyName\": {\"Ref\": \"KeyName\"},\r\n                    \"SecurityGroupIds\": [{\"Ref\": \"SecurityGroup\"}],\r\n                    \"SubnetId\": {\"Ref\": \"Subnet\"}\r\n                }\r\n            }\r\n        },\r\n        \"Outputs\": {\r\n            \"PublicName\": {\r\n                \"Value\": {\"Fn::GetAtt\": [\"Server\", \"PublicDnsName\"]},\r\n                \"Description\": \"Public name (connect via SSH)\"\r\n            }   \r\n        }\r\n    }\r\n\r\nFor more information see: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "It will output the EC2 instance Public DNS name. ", "keywords": ["instance"]}, {"source": "Text", "text": "**Note:** I haven't tested this template! { \"AWSTemplateFormatVersion\": \"2010-09-09\", \"Description\": \"CloudFormation template for creating an ec2 instance\", \"Parameters\": { \"KeyName\": { \"Description\": \"Key Pair name\", \"Type\": \"AWS::EC2::KeyPair::KeyName\", \"Default\": \"my_keypair_name\" }, \"VPC\": { \"Type\": \"AWS::EC2::VPC\", \"Properties\":{ \"CidrBlock\": \"10.0.0.0/16\", \"EnableDnsHostnames\": \"true\" } }, \"Subnet\":{ \"Type\": \"AWS::EC2::Subnet\", \"Properties\": { \"VpcId\": {\"Ref\": \"VPC\"}, \"CidrBlock\": \"10.0.0.0/24\", \"AvailabilityZone\": \"us-east-1a\" } }, \"InstanceType\": { \"Description\": \"Select one of the possible instance types\", \"Type\": \"String\", \"Default\": \"t2.micro\", \"AllowedValues\": [\"t2.micro\", \"t2.small\", \"t2.medium\"] } }, \"Resources\":{ \"SecurityGroup\":{ \"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": { \"GroupDescription\": \"My security group\", \"VpcId\": {\"Ref\": \"VPC\"}, \"SecurityGroupIngress\": [{ \"CidrIp\": \"0.0.0.0/0\", \"FromPort\": 22, \"IpProtocol\": \"tcp\", \"ToPort\": 22 }] } }, \"Server\": { \"Type\": \"AWS::EC2::Instance\", \"Properties\": { \"ImageId\": \"ami-123456\", \"InstanceType\": {\"Ref\": \"InstanceType\"}, \"KeyName\": {\"Ref\": \"KeyName\"}, \"SecurityGroupIds\": [{\"Ref\": \"SecurityGroup\"}], \"SubnetId\": {\"Ref\": \"Subnet\"} } } }, \"Outputs\": { \"PublicName\": { \"Value\": {\"Fn::GetAtt\": [\"Server\", \"PublicDnsName\"]}, \"Description\": \"Public name (connect via SSH)\" ", "keywords": ["instance", "test"]}]}], "filtered-sentences": [{"source": "Body", "text": "It will output the EC2 instance Public DNS name. ", "keywords": ["instance"]}, {"source": "Body", "text": "Note: I haven't tested this template! ", "keywords": ["test"]}]}, {"Id": "56108202", "PostTypeId": "2", "ParentId": "37164643", "CreationDate": "2019-05-13T08:12:57.150", "Score": "1", "Body": "<p>You can use my following template which works fine.</p>\n\n<p>single-instance.yml</p>\n\n<pre><code>AWSTemplateFormatVersion: 2010-09-09\nDescription: &gt;-\n  AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create\n  an Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based\n  on the region in which the stack is run. This example creates an EC2 security\n  group for the instance to give you SSH access. **WARNING** This template\n  creates an Amazon EC2 instance. You will be billed for the AWS resources used\n  if you create a stack from this template.\nParameters:\n  KeyName:\n    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance\n    Type: 'AWS::EC2::KeyPair::KeyName'\n    ConstraintDescription: must be the name of an existing EC2 KeyPair.\n  InstanceType:\n    Description: WebServer EC2 instance type\n    Type: String\n    Default: t2.micro\n    ConstraintDescription: must be a valid EC2 instance type.\n  SSHLocation:\n    Description: The IP address range that can be used to SSH to the EC2 instances\n    Type: String\n    MinLength: '9'\n    MaxLength: '18'\n    Default: 0.0.0.0/0\n    AllowedPattern: '(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})'\n    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.\nMappings:\n  AWSInstanceType2Arch:\n    t2.micro:\n      Arch: HVM64\n  AWSInstanceType2NATArch:\n    t2.micro:\n      Arch: NATHVM64\n  AWSRegionArch2AMI:\n    us-east-1:\n      HVM64: ami-0080e4c5bc078760e\n      HVMG2: ami-0aeb704d503081ea6\nResources:\n  EC2Instance:\n    Type: 'AWS::EC2::Instance'\n    Properties:\n      InstanceType: !Ref InstanceType\n      SecurityGroups:\n        - !Ref InstanceSecurityGroup\n      KeyName: !Ref KeyName\n      ImageId: !FindInMap \n        - AWSRegionArch2AMI\n        - !Ref 'AWS::Region'\n        - !FindInMap \n          - AWSInstanceType2Arch\n          - !Ref InstanceType\n          - Arch\n  InstanceSecurityGroup:\n    Type: 'AWS::EC2::SecurityGroup'\n    Properties:\n      GroupDescription: Enable SSH access via port 22\n      SecurityGroupIngress:\n        - IpProtocol: tcp\n          FromPort: '22'\n          ToPort: '22'\n          CidrIp: !Ref SSHLocation\nOutputs:\n  InstanceId:\n    Description: InstanceId of the newly created EC2 instance\n    Value: !Ref EC2Instance\n  AZ:\n    Description: Availability Zone of the newly created EC2 instance\n    Value: !GetAtt \n      - EC2Instance\n      - AvailabilityZone\n  PublicDNS:\n    Description: Public DNSName of the newly created EC2 instance\n    Value: !GetAtt \n      - EC2Instance\n      - PublicDnsName\n  PublicIP:\n    Description: Public IP address of the newly created EC2 instance\n    Value: !GetAtt \n      - EC2Instance\n      - PublicIp \n</code></pre>\n\n<p>Then Run Following Command:</p>\n\n<pre><code>aws cloudformation create-stack --template-body file://single-instance.yml --stack-name single-instance --parameters ParameterKey=KeyName,ParameterValue=sample ParameterKey=InstanceType,ParameterValue=t2.micro\n</code></pre>\n", "OwnerUserId": "10512327", "LastActivityDate": "2019-05-13T08:12:57.150", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "100049105", "PostId": "56108202", "Score": "0", "Text": "for the imageid, aws maintained the recommended ids in parameter stores entries, e.g. `aws ssm get-parameters --name /aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id  --query 'Parameters[0].Value' --output text`", "CreationDate": "2019-06-24T23:46:53.850", "UserId": "2919913", "filtered-sentences": []}], "history": [{"Id": "197611653", "PostHistoryTypeId": "2", "PostId": "56108202", "RevisionGUID": "26e10bed-c844-4274-8a5a-bee0e6d27496", "CreationDate": "2019-05-13T08:12:57.150", "UserId": "10512327", "Text": "You can use my following template which works fine.\r\n\r\nsingle-instance.yml\r\n\r\n```\r\nAWSTemplateFormatVersion: 2010-09-09\r\nDescription: >-\r\n  AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create\r\n  an Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based\r\n  on the region in which the stack is run. This example creates an EC2 security\r\n  group for the instance to give you SSH access. **WARNING** This template\r\n  creates an Amazon EC2 instance. You will be billed for the AWS resources used\r\n  if you create a stack from this template.\r\nParameters:\r\n  KeyName:\r\n    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance\r\n    Type: 'AWS::EC2::KeyPair::KeyName'\r\n    ConstraintDescription: must be the name of an existing EC2 KeyPair.\r\n  InstanceType:\r\n    Description: WebServer EC2 instance type\r\n    Type: String\r\n    Default: t2.micro\r\n    ConstraintDescription: must be a valid EC2 instance type.\r\n  SSHLocation:\r\n    Description: The IP address range that can be used to SSH to the EC2 instances\r\n    Type: String\r\n    MinLength: '9'\r\n    MaxLength: '18'\r\n    Default: 0.0.0.0/0\r\n    AllowedPattern: '(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})'\r\n    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.\r\nMappings:\r\n  AWSInstanceType2Arch:\r\n    t2.micro:\r\n      Arch: HVM64\r\n  AWSInstanceType2NATArch:\r\n    t2.micro:\r\n      Arch: NATHVM64\r\n  AWSRegionArch2AMI:\r\n    us-east-1:\r\n      HVM64: ami-0080e4c5bc078760e\r\n      HVMG2: ami-0aeb704d503081ea6\r\nResources:\r\n  EC2Instance:\r\n    Type: 'AWS::EC2::Instance'\r\n    Properties:\r\n      InstanceType: !Ref InstanceType\r\n      SecurityGroups:\r\n        - !Ref InstanceSecurityGroup\r\n      KeyName: !Ref KeyName\r\n      ImageId: !FindInMap \r\n        - AWSRegionArch2AMI\r\n        - !Ref 'AWS::Region'\r\n        - !FindInMap \r\n          - AWSInstanceType2Arch\r\n          - !Ref InstanceType\r\n          - Arch\r\n  InstanceSecurityGroup:\r\n    Type: 'AWS::EC2::SecurityGroup'\r\n    Properties:\r\n      GroupDescription: Enable SSH access via port 22\r\n      SecurityGroupIngress:\r\n        - IpProtocol: tcp\r\n          FromPort: '22'\r\n          ToPort: '22'\r\n          CidrIp: !Ref SSHLocation\r\nOutputs:\r\n  InstanceId:\r\n    Description: InstanceId of the newly created EC2 instance\r\n    Value: !Ref EC2Instance\r\n  AZ:\r\n    Description: Availability Zone of the newly created EC2 instance\r\n    Value: !GetAtt \r\n      - EC2Instance\r\n      - AvailabilityZone\r\n  PublicDNS:\r\n    Description: Public DNSName of the newly created EC2 instance\r\n    Value: !GetAtt \r\n      - EC2Instance\r\n      - PublicDnsName\r\n  PublicIP:\r\n    Description: Public IP address of the newly created EC2 instance\r\n    Value: !GetAtt \r\n      - EC2Instance\r\n      - PublicIp \r\n```\r\n\r\nThen Run Following Command:\r\n```\r\naws cloudformation create-stack --template-body file://single-instance.yml --stack-name single-instance --parameters ParameterKey=KeyName,ParameterValue=sample ParameterKey=InstanceType,ParameterValue=t2.micro\r\n```", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "You can use my following template which works fine. single-instance.yml ``` ", "keywords": ["instance"]}, {"source": "Text", "text": "AWSTemplateFormatVersion: 2010-09-09 Description: >- AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create an Amazon EC2 instance running the Amazon Linux AMI. ", "keywords": ["instance"]}, {"source": "Text", "text": "This example creates an EC2 security group for the instance to give you SSH access. ", "keywords": ["instance"]}, {"source": "Text", "text": "This template creates an Amazon EC2 instance. ", "keywords": ["instance"]}, {"source": "Text", "text": "You will be billed for the AWS resources used if you create a stack from this template. ", "keywords": ["bill"]}, {"source": "Text", "text": "Parameters: KeyName: Description: Name of an existing EC2 KeyPair to enable SSH access to the instance Type: 'AWS::EC2::KeyPair::KeyName' ConstraintDescription: must be the name of an existing EC2 KeyPair. ", "keywords": ["instance"]}, {"source": "Text", "text": "InstanceType: Description: WebServer EC2 instance type Type: String Default: t2.micro ConstraintDescription: must be a valid EC2 instance type. SSHLocation: Description: The IP address range that can be used to SSH to the EC2 instances Type: String MinLength: '9' MaxLength: '18' Default: 0.0.0.0/0 AllowedPattern: '(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})' ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x. ", "keywords": ["instance"]}, {"source": "Text", "text": "Mappings: AWSInstanceType2Arch: t2.micro: Arch: HVM64 AWSInstanceType2NATArch: t2.micro: Arch: NATHVM64 AWSRegionArch2AMI: us-east-1: HVM64: ami-0080e4c5bc078760e HVMG2: ami-0aeb704d503081ea6 Resources: EC2Instance: Type: 'AWS::EC2::Instance' Properties: InstanceType: !Ref InstanceType SecurityGroups: - !Ref InstanceSecurityGroup KeyName: !Ref KeyName ImageId: !FindInMap - AWSRegionArch2AMI - !Ref 'AWS::Region' - !FindInMap - AWSInstanceType2Arch - !Ref InstanceType - Arch InstanceSecurityGroup: Type: 'AWS::EC2::SecurityGroup' Properties: GroupDescription: Enable SSH access via port 22 SecurityGroupIngress: - IpProtocol: tcp FromPort: '22' ToPort: '22' CidrIp: !Ref SSHLocation Outputs: InstanceId: Description: InstanceId of the newly created EC2 instance Value: !Ref EC2Instance AZ: Description: Availability Zone of the newly created EC2 instance Value: !GetAtt - EC2Instance - AvailabilityZone PublicDNS: Description: Public DNSName of the newly created EC2 instance Value: !GetAtt - EC2Instance - PublicDnsName PublicIP: Description: Public IP address of the newly created EC2 instance Value: !GetAtt - EC2Instance - PublicIp ``` Then Run Following Command: ``` aws cloudformation create-stack --template-body file://single-instance.yml --stack-name single-instance --parameters ParameterKey=KeyName,ParameterValue=sample ParameterKey=InstanceType,ParameterValue=t2.micro ```", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "You can use my following template which works fine. single-instance.yml ", "keywords": ["instance"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I would like to create a CloudFormation template whose instance type is \"t2.micro\". ", "keywords": ["instance"]}, {"source": "Body", "text": "However, i couldn't find any example about this instance type. ", "keywords": ["instance"]}]}
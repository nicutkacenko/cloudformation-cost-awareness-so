{"Id": "43409159", "PostTypeId": "1", "AcceptedAnswerId": "43410801", "CreationDate": "2017-04-14T09:49:36.453", "Score": "0", "ViewCount": "284", "Body": "<p>I have a VPC setup to that my lambda function can talk to my RDS server. This is working. I also need my lambda functions to have access to the internet. To this end I'm trying to setup an internet gateway and the routes to allow it. I'm failing.</p>\n\n<p>The VPC routes and gateway are created as the following</p>\n\n<pre><code>\"VPC\": {\n  \"Type\": \"AWS::EC2::VPC\",\n  \"Properties\": {\n    \"CidrBlock\": \"10.0.0.0/16\",\n    \"EnableDnsSupport\": \"true\",\n    \"EnableDnsHostnames\": \"true\",\n    \"InstanceTenancy\": \"default\",\n    \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }]\n  }\n},\n\n\"VPCRouteTable\" : {\n   \"Type\" : \"AWS::EC2::RouteTable\",\n   \"Properties\" : {\n      \"VpcId\" : { \"Ref\" : \"VPC\" },\n      \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }]\n   }\n},\n\n\"InternetGateway\" : {\n   \"Type\" : \"AWS::EC2::InternetGateway\",\n   \"Properties\" : {\n   \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }]\n   }\n},\n\n\"AttachGateway\": {\n   \"Type\" : \"AWS::EC2::VPCGatewayAttachment\",\n   \"Properties\" : {\n      \"VpcId\" : { \"Ref\" : \"VPC\" },\n      \"InternetGatewayId\" : { \"Ref\" : \"InternetGateway\" }\n   }\n},\n\n\"InternetRoute\" : {\n   \"Type\" : \"AWS::EC2::Route\",\n   \"DependsOn\" : \"InternetGateway\",\n   \"Properties\" : {\n      \"RouteTableId\" : { \"Ref\" : \"VPCRouteTable\" },\n      \"DestinationCidrBlock\" : \"0.0.0.0/0\",\n      \"GatewayId\" : { \"Ref\" : \"InternetGateway\" }\n   }\n},\n</code></pre>\n\n<p>I create the subnets and associate them with the route table</p>\n\n<pre><code>\"SubnetA\": {\n  \"Type\": \"AWS::EC2::Subnet\",\n  \"Properties\": {\n    \"VpcId\": { \"Ref\": \"VPC\" },\n    \"CidrBlock\": \"10.0.0.0/24\",\n    \"AvailabilityZone\": { \"Fn::Select\": [ \"0\", { \"Fn::GetAZs\": { \"Ref\": \"AWS::Region\" } }]},\n    \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }]\n  }\n},\n\n\"SubnetB\": {\n  \"Type\": \"AWS::EC2::Subnet\",\n  \"Properties\": {\n    \"VpcId\": { \"Ref\": \"VPC\" },\n    \"CidrBlock\": \"10.0.1.0/24\",\n    \"AvailabilityZone\": { \"Fn::Select\": [ \"1\", { \"Fn::GetAZs\": { \"Ref\": \"AWS::Region\" } }]},\n    \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }]\n  }\n},\n\n\"SubnetARouteTableAssociation\" : {\n   \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\n   \"Properties\" : {\n      \"SubnetId\" : { \"Ref\" : \"SubnetA\" },\n      \"RouteTableId\" : { \"Ref\" : \"VPCRouteTable\" }\n   }\n},\n\n\"SubnetBRouteTableAssociation\" : {\n   \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\n   \"Properties\" : {\n      \"SubnetId\" : { \"Ref\" : \"SubnetB\" },\n      \"RouteTableId\" : { \"Ref\" : \"VPCRouteTable\" }\n   }\n},\n</code></pre>\n\n<p>I have the database security groups</p>\n\n<pre><code>\"DBSubnetGroup\": {\n  \"Type\": \"AWS::RDS::DBSubnetGroup\",\n  \"Properties\": {\n    \"DBSubnetGroupDescription\": \"Database Access\",\n    \"SubnetIds\" : [{ \"Ref\": \"SubnetA\" }, { \"Ref\": \"SubnetB\" }],\n    \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }]\n  }\n},\n\n\"DBEC2SecurityGroup\": {\n  \"Type\": \"AWS::EC2::SecurityGroup\",\n  \"Properties\": {\n    \"GroupDescription\": \"Security group for RDS DB Instance\",\n    \"VpcId\": {\"Ref\": \"VPC\"},\n    \"SecurityGroupIngress\" : [{\n      \"IpProtocol\": \"tcp\",\n      \"FromPort\": \"3306\",\n      \"ToPort\": \"3306\",\n      \"CidrIp\": \"10.0.0.0/16\"\n    }],\n    \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }]\n  }\n},\n</code></pre>\n\n<p>and the lambda security group</p>\n\n<pre><code>\"LambdaSecurityGroup\": {\n  \"Type\": \"AWS::EC2::SecurityGroup\",\n  \"Properties\": {\n    \"GroupDescription\": \"Security group for Lambda\",\n    \"VpcId\": {\"Ref\": \"VPC\"},\n    \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }]\n  }\n},\n</code></pre>\n\n<p>So As it stands now, my lambda's can talk to the database just fine. but they can't reach the internet. What am I missing?</p>\n", "OwnerUserId": "308079", "LastActivityDate": "2017-04-14T11:40:05.177", "Title": "How can I let my VPC have access to the internet via cloudformation?", "Tags": "|amazon-web-services|aws-cloudformation|amazon-vpc|", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "143125337", "PostHistoryTypeId": "2", "PostId": "43409159", "RevisionGUID": "def9862d-01ef-4210-830c-84c558d6f18c", "CreationDate": "2017-04-14T09:49:36.453", "UserId": "308079", "Text": "I have a VPC setup to that my lambda function can talk to my RDS server. This is working. I also need my lambda functions to have access to the internet. To this end I'm trying to setup an internet gateway and the routes to allow it. I'm failing.\r\n\r\nThe VPC routes and gateway are created as the following\r\n\r\n    \"VPC\": {\r\n      \"Type\": \"AWS::EC2::VPC\",\r\n      \"Properties\": {\r\n        \"CidrBlock\": \"10.0.0.0/16\",\r\n        \"EnableDnsSupport\": \"true\",\r\n        \"EnableDnsHostnames\": \"true\",\r\n        \"InstanceTenancy\": \"default\",\r\n        \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }]\r\n      }\r\n    },\r\n\r\n    \"VPCRouteTable\" : {\r\n       \"Type\" : \"AWS::EC2::RouteTable\",\r\n       \"Properties\" : {\r\n          \"VpcId\" : { \"Ref\" : \"VPC\" },\r\n          \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }]\r\n       }\r\n    },\r\n\r\n    \"InternetGateway\" : {\r\n       \"Type\" : \"AWS::EC2::InternetGateway\",\r\n       \"Properties\" : {\r\n       \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }]\r\n       }\r\n    },\r\n\r\n    \"AttachGateway\": {\r\n       \"Type\" : \"AWS::EC2::VPCGatewayAttachment\",\r\n       \"Properties\" : {\r\n          \"VpcId\" : { \"Ref\" : \"VPC\" },\r\n          \"InternetGatewayId\" : { \"Ref\" : \"InternetGateway\" }\r\n       }\r\n    },\r\n\r\n    \"InternetRoute\" : {\r\n       \"Type\" : \"AWS::EC2::Route\",\r\n       \"DependsOn\" : \"InternetGateway\",\r\n       \"Properties\" : {\r\n          \"RouteTableId\" : { \"Ref\" : \"VPCRouteTable\" },\r\n          \"DestinationCidrBlock\" : \"0.0.0.0/0\",\r\n          \"GatewayId\" : { \"Ref\" : \"InternetGateway\" }\r\n       }\r\n    },\r\n\r\nI create the subnets and associate them with the route table\r\n\r\n    \"SubnetA\": {\r\n      \"Type\": \"AWS::EC2::Subnet\",\r\n      \"Properties\": {\r\n        \"VpcId\": { \"Ref\": \"VPC\" },\r\n        \"CidrBlock\": \"10.0.0.0/24\",\r\n        \"AvailabilityZone\": { \"Fn::Select\": [ \"0\", { \"Fn::GetAZs\": { \"Ref\": \"AWS::Region\" } }]},\r\n        \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }]\r\n      }\r\n    },\r\n\r\n    \"SubnetB\": {\r\n      \"Type\": \"AWS::EC2::Subnet\",\r\n      \"Properties\": {\r\n        \"VpcId\": { \"Ref\": \"VPC\" },\r\n        \"CidrBlock\": \"10.0.1.0/24\",\r\n        \"AvailabilityZone\": { \"Fn::Select\": [ \"1\", { \"Fn::GetAZs\": { \"Ref\": \"AWS::Region\" } }]},\r\n        \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }]\r\n      }\r\n    },\r\n\r\n    \"SubnetARouteTableAssociation\" : {\r\n       \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\r\n       \"Properties\" : {\r\n          \"SubnetId\" : { \"Ref\" : \"SubnetA\" },\r\n          \"RouteTableId\" : { \"Ref\" : \"VPCRouteTable\" }\r\n       }\r\n    },\r\n\r\n    \"SubnetBRouteTableAssociation\" : {\r\n       \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\",\r\n       \"Properties\" : {\r\n          \"SubnetId\" : { \"Ref\" : \"SubnetB\" },\r\n          \"RouteTableId\" : { \"Ref\" : \"VPCRouteTable\" }\r\n       }\r\n    },\r\n\r\nI have the database security groups\r\n\r\n    \"DBSubnetGroup\": {\r\n      \"Type\": \"AWS::RDS::DBSubnetGroup\",\r\n      \"Properties\": {\r\n        \"DBSubnetGroupDescription\": \"Database Access\",\r\n        \"SubnetIds\" : [{ \"Ref\": \"SubnetA\" }, { \"Ref\": \"SubnetB\" }],\r\n        \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }]\r\n      }\r\n    },\r\n\r\n    \"DBEC2SecurityGroup\": {\r\n      \"Type\": \"AWS::EC2::SecurityGroup\",\r\n      \"Properties\": {\r\n        \"GroupDescription\": \"Security group for RDS DB Instance\",\r\n        \"VpcId\": {\"Ref\": \"VPC\"},\r\n        \"SecurityGroupIngress\" : [{\r\n          \"IpProtocol\": \"tcp\",\r\n          \"FromPort\": \"3306\",\r\n          \"ToPort\": \"3306\",\r\n          \"CidrIp\": \"10.0.0.0/16\"\r\n        }],\r\n        \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }]\r\n      }\r\n    },\r\n\r\nand the lambda security group\r\n\r\n    \"LambdaSecurityGroup\": {\r\n      \"Type\": \"AWS::EC2::SecurityGroup\",\r\n      \"Properties\": {\r\n        \"GroupDescription\": \"Security group for Lambda\",\r\n        \"VpcId\": {\"Ref\": \"VPC\"},\r\n        \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }]\r\n      }\r\n    },\r\n\r\nSo As it stands now, my lambda's can talk to the database just fine. but they can't reach the internet. What am I missing?\r\n", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "}], \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }] } }, \"DBEC2SecurityGroup\": { \"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": { \"GroupDescription\": \"Security group for RDS DB Instance\", \"VpcId\": {\"Ref\": \"VPC\"}, \"SecurityGroupIngress\" : [{ \"IpProtocol\": \"tcp\", \"FromPort\": \"3306\", \"ToPort\": \"3306\", \"CidrIp\": \"10.0.0.0/16\" }], \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" } }] } }, and the lambda security group \"LambdaSecurityGroup\": { \"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": { \"GroupDescription\": \"Security group for Lambda\", \"VpcId\": {\"Ref\": \"VPC\"}, \"Tags\" : [{ \"Key\": \"Name\", \"Value\": { \"Ref\": \"DomainName\" ", "keywords": ["instance"]}]}, {"Id": "143125338", "PostHistoryTypeId": "1", "PostId": "43409159", "RevisionGUID": "def9862d-01ef-4210-830c-84c558d6f18c", "CreationDate": "2017-04-14T09:49:36.453", "UserId": "308079", "Text": "How can I let my VPC have access to the internet via cloudformation?", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "143125339", "PostHistoryTypeId": "3", "PostId": "43409159", "RevisionGUID": "def9862d-01ef-4210-830c-84c558d6f18c", "CreationDate": "2017-04-14T09:49:36.453", "UserId": "308079", "Text": "|amazon-web-services|aws-cloudformation|amazon-vpc|", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "answers": [{"Id": "43410801", "PostTypeId": "2", "ParentId": "43409159", "CreationDate": "2017-04-14T11:40:05.177", "Score": "1", "Body": "<p>If your lambda function needs to have access to both your VPC resources and Internet, then create 2 subnets: public and private.  Put your lambda in private subnet and configure NAT in public subnet.</p>\n\n<p>From <a href=\"http://docs.aws.amazon.com/lambda/latest/dg/vpc.html\" rel=\"nofollow noreferrer\">http://docs.aws.amazon.com/lambda/latest/dg/vpc.html</a></p>\n\n<blockquote>\n  <p>Therefore, if your Lambda function requires Internet access (for\n  example, to access AWS services that don't have VPC endpoints, such as\n  Amazon Kinesis), you can configure a NAT instance inside your VPC or\n  you can use the Amazon VPC NAT gateway. For more information, see NAT\n  Gateways in the Amazon VPC User Guide.</p>\n</blockquote>\n", "OwnerUserId": "1516286", "LastActivityDate": "2017-04-14T11:40:05.177", "CommentCount": "2", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "73880965", "PostId": "43410801", "Score": "0", "Text": "My understanding is I don't need an expensive ec2 running a NAT any more 24/7. AWS made the internet gateway for this reason.  I have no desire to run and ec2 instances.", "CreationDate": "2017-04-14T12:00:51.433", "UserId": "308079", "filtered-sentences": [{"source": "Text", "text": "My understanding is I don't need an expensive ec2 running a NAT any more 24/7. ", "keywords": ["expense", "nat"]}]}, {"Id": "73883627", "PostId": "43410801", "Score": "0", "Text": "@Justin808 your understanding is incorrect.  The Internet Gateway is used only by entities on public subnets which also have an associated public IP address.  To access the Internet from any entity without a public IP address, including Lambda containers, either a NAT Gateway (which does not run on an EC2 instance) or a NAT instance (which is of course an EC2 instance) **is required**.  You can use a t2.nano as a perfectly good NAT instance, for ~$5/mo.", "CreationDate": "2017-04-14T13:27:45.483", "UserId": "1695906", "filtered-sentences": [{"source": "Text", "text": "To access the Internet from any entity without a public IP address, including Lambda containers, either a NAT Gateway (which does not run on an EC2 instance) or a NAT instance (which is of course an EC2 instance) **is required**. ", "keywords": ["nat", "instance"]}, {"source": "Text", "text": "You can use a t2.nano as a perfectly good NAT instance, for ~$5/mo.", "keywords": ["nat", "instance"]}]}], "history": [{"Id": "143131711", "PostHistoryTypeId": "2", "PostId": "43410801", "RevisionGUID": "f7d11db4-902a-4b9c-8574-948fb8280f39", "CreationDate": "2017-04-14T11:40:05.177", "UserId": "1516286", "Text": "If your lambda function needs to have access to both your VPC resources and Internet, then create 2 subnets: public and private.  Put your lambda in private subnet and configure NAT in public subnet.\r\n\r\nFrom http://docs.aws.amazon.com/lambda/latest/dg/vpc.html\r\n> Therefore, if your Lambda function requires Internet access (for\r\n> example, to access AWS services that don't have VPC endpoints, such as\r\n> Amazon Kinesis), you can configure a NAT instance inside your VPC or\r\n> you can use the Amazon VPC NAT gateway. For more information, see NAT\r\n> Gateways in the Amazon VPC User Guide.", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "Put your lambda in private subnet and configure NAT in public subnet. ", "keywords": ["nat"]}, {"source": "Text", "text": "From http://docs.aws.amazon.com/lambda/latest/dg/vpc.html > Therefore, if your Lambda function requires Internet access (for > example, to access AWS services that don't have VPC endpoints, such as > Amazon Kinesis), you can configure a NAT instance inside your VPC or > you can use the Amazon VPC NAT gateway. ", "keywords": ["nat", "instance"]}, {"source": "Text", "text": "For more information, see NAT > Gateways in the Amazon VPC User Guide.", "keywords": ["nat"]}]}], "filtered-sentences": [{"source": "Body", "text": "Put your lambda in private subnet and configure NAT in public subnet. ", "keywords": ["nat"]}, {"source": "Body", "text": "From http://docs.aws.amazon.com/lambda/latest/dg/vpc.html Therefore, if your Lambda function requires Internet access (for example, to access AWS services that don't have VPC endpoints, such as Amazon Kinesis), you can configure a NAT instance inside your VPC or you can use the Amazon VPC NAT gateway. ", "keywords": ["nat", "instance"]}, {"source": "Body", "text": "For more information, see NAT Gateways in the Amazon VPC User Guide.", "keywords": ["nat"]}]}], "contains-topic": true, "filtered-sentences": []}
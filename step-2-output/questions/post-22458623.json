{"Id": "22458623", "PostTypeId": "1", "AcceptedAnswerId": "50417783", "CreationDate": "2014-03-17T15:35:47.937", "Score": "4", "ViewCount": "2523", "Body": "<p>CloudFormation stacks are great for automation, however the problem I see with them is how easily they can be deleted, and in turn cascading delete other resources. </p>\n\n<p>I've already found solution to latter problem, it's possible to protect each of resources by modifying it's deletion policy. But how about the stack as a whole? Can it be protected?</p>\n", "OwnerUserId": "60711", "LastEditorUserId": "60711", "LastEditDate": "2014-03-17T16:39:01.813", "LastActivityDate": "2018-05-18T19:04:45.437", "Title": "How to prevent CloudFormation stack from being deleted (accidentally)?", "Tags": "|amazon-web-services|aws-cloudformation|", "AnswerCount": "4", "CommentCount": "0", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "60594780", "PostHistoryTypeId": "5", "PostId": "22458623", "RevisionGUID": "c80b75e2-77ce-4600-add4-6d45f4bccb53", "CreationDate": "2014-03-17T16:39:01.813", "UserId": "60711", "Comment": "added 5 characters in body", "Text": "CloudFormation stacks are great for automation, however the problem I see with them is how easily they can be deleted, and in turn cascading delete other resources. \r\n\r\nI've already found solution to latter problem, it's possible to protect each of resources by modifying it's deletion policy. But how about the stack as a whole? Can it be protected?", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "I've already found solution to latter problem, it's possible to protect each of resources by modifying it's deletion policy. ", "keywords": ["policy"]}]}, {"Id": "60589223", "PostHistoryTypeId": "2", "PostId": "22458623", "RevisionGUID": "6d0eda4a-64fc-47b7-8694-c7027772af51", "CreationDate": "2014-03-17T15:35:47.937", "UserId": "60711", "Text": "CloudFormation stacks are great for automation, however the problem I see with them is how easily they can be deleted, and in turn cascading delete other resources. \r\n\r\nI've already found solution to latter problem, it's possible to protect any resource by modifying it's deletion policy. But how about the stack as a whole? Can it be protected?", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "I've already found solution to latter problem, it's possible to protect any resource by modifying it's deletion policy. ", "keywords": ["policy"]}]}, {"Id": "60589224", "PostHistoryTypeId": "1", "PostId": "22458623", "RevisionGUID": "6d0eda4a-64fc-47b7-8694-c7027772af51", "CreationDate": "2014-03-17T15:35:47.937", "UserId": "60711", "Text": "How to prevent CloudFormation stack from being deleted (accidentally)?", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "60589225", "PostHistoryTypeId": "3", "PostId": "22458623", "RevisionGUID": "6d0eda4a-64fc-47b7-8694-c7027772af51", "CreationDate": "2014-03-17T15:35:47.937", "UserId": "60711", "Text": "|amazon-web-services|aws-cloudformation|", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "answers": [{"Id": "22460080", "PostTypeId": "2", "ParentId": "22458623", "CreationDate": "2014-03-17T16:37:11.810", "Score": "1", "Body": "<p>AFAIK there is no deletion protection available for the stack itself. The best you can do is to use <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html\" rel=\"nofollow\">\"DeletionPolicy\" : \"Retain\"</a> on a per resource level.</p>\n", "OwnerUserId": "2430241", "LastActivityDate": "2014-03-17T16:37:11.810", "CommentCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "60594618", "PostHistoryTypeId": "2", "PostId": "22460080", "RevisionGUID": "7ed2ebc4-6b7f-4796-9f79-f00e15d70c0e", "CreationDate": "2014-03-17T16:37:11.810", "UserId": "2430241", "Text": "AFAIK there is no deletion protection available for the stack itself. The best you can do is to use [\"DeletionPolicy\" : \"Retain\"](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html) on a per resource level.", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "50417783", "PostTypeId": "2", "ParentId": "22458623", "CreationDate": "2018-05-18T19:04:45.437", "Score": "3", "Body": "<p>They <a href=\"https://aws.amazon.com/about-aws/whats-new/2017/09/aws-cloudformation-provides-stack-termination-protection/\" rel=\"nofollow noreferrer\">added \"Termination Protection\"</a> in Sept 2017. You can enable it through the <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html\" rel=\"nofollow noreferrer\">console</a> or through the <a href=\"https://docs.aws.amazon.com/cli/latest/reference/cloudformation/update-termination-protection.html\" rel=\"nofollow noreferrer\">aws-cli</a>. You can also control if a role can set it or not with the \"cloudformation:UpdateTerminationProtection\" permission.</p>\n", "OwnerUserId": "127316", "LastActivityDate": "2018-05-18T19:04:45.437", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "173726725", "PostHistoryTypeId": "2", "PostId": "50417783", "RevisionGUID": "4ad5f8e1-dbc4-43f2-bddb-9b7d12347592", "CreationDate": "2018-05-18T19:04:45.437", "UserId": "127316", "Text": "They [added \"Termination Protection\"][1] in Sept 2017. You can enable it through the [console][2] or through the [aws-cli][3]. You can also control if a role can set it or not with the \"cloudformation:UpdateTerminationProtection\" permission.\r\n\r\n[1]: https://aws.amazon.com/about-aws/whats-new/2017/09/aws-cloudformation-provides-stack-termination-protection/\r\n\r\n[2]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-protect-stacks.html\r\n\r\n\r\n[3]: https://docs.aws.amazon.com/cli/latest/reference/cloudformation/update-termination-protection.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "22462758", "PostTypeId": "2", "ParentId": "22458623", "CreationDate": "2014-03-17T18:46:05.950", "Score": "4", "Body": "<p>I think the only way is to restrict the permission on the IAM Users you use.  You can remove the Delete Stack permission from all relevant users.</p>\n", "OwnerUserId": "1791624", "LastActivityDate": "2014-03-17T18:46:05.950", "CommentCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "60604841", "PostHistoryTypeId": "2", "PostId": "22462758", "RevisionGUID": "a94ddeb4-a316-4338-b6a4-fea9b6d406f8", "CreationDate": "2014-03-17T18:46:05.950", "UserId": "1791624", "Text": "I think the only way is to restrict the permission on the IAM Users you use.  You can remove the Delete Stack permission from all relevant users.", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "22469905", "PostTypeId": "2", "ParentId": "22458623", "CreationDate": "2014-03-18T03:39:13.643", "Score": "0", "Body": "<p>Another way to protect it is to create a wrapper application that manages your stacks and then creates a protection policy around CloudFormation.  For example, your wrapper app can have a database model for a <code>stack</code> like this:</p>\n\n<pre><code>String: name -- name of the stack\nString: template -- JSON template for the stack\nString: createdby -- name of the user that created the stack\nBoolean: protected -- true if protected.\n</code></pre>\n\n<p>This would require all your users to use this application to create/delete a stack and it's a lot of more work to implement than AWS IAM but for some people it may fit the bill.</p>\n\n<p>Hope it helps.</p>\n", "OwnerUserId": "2989261", "LastActivityDate": "2014-03-18T03:39:13.643", "CommentCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "60631912", "PostHistoryTypeId": "2", "PostId": "22469905", "RevisionGUID": "19080c60-145e-4158-9096-c3fed4ebe4d7", "CreationDate": "2014-03-18T03:39:13.643", "UserId": "2989261", "Text": "Another way to protect it is to create a wrapper application that manages your stacks and then creates a protection policy around CloudFormation.  For example, your wrapper app can have a database model for a `stack` like this:\r\n\r\n    String: name -- name of the stack\r\n    String: template -- JSON template for the stack\r\n    String: createdby -- name of the user that created the stack\r\n    Boolean: protected -- true if protected.\r\n\r\nThis would require all your users to use this application to create/delete a stack and it's a lot of more work to implement than AWS IAM but for some people it may fit the bill.\r\n\r\nHope it helps.", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "Another way to protect it is to create a wrapper application that manages your stacks and then creates a protection policy around CloudFormation. ", "keywords": ["policy"]}, {"source": "Text", "text": "This would require all your users to use this application to create/delete a stack and it's a lot of more work to implement than AWS IAM but for some people it may fit the bill. ", "keywords": ["bill"]}]}], "filtered-sentences": [{"source": "Body", "text": "Another way to protect it is to create a wrapper application that manages your stacks and then creates a protection policy around CloudFormation. ", "keywords": ["policy"]}, {"source": "Body", "text": "This would require all your users to use this application to create/delete a stack and it's a lot of more work to implement than AWS IAM but for some people it may fit the bill. ", "keywords": ["bill"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I've already found solution to latter problem, it's possible to protect each of resources by modifying it's deletion policy. ", "keywords": ["policy"]}]}
{"Id": "44196080", "PostTypeId": "1", "CreationDate": "2017-05-26T07:33:23.847", "Score": "12", "ViewCount": "6740", "Body": "<p>I am trying to create a nested stack using AWS CloudFormation. \nI need to specify the 'Stack Name' of the nested stack. \nI tried using the 'Tags' property with Key: 'Stack Name'. But that didn't help.\nIs there any way to provide the Stack Name as an input while creating nested stack?</p>\n", "OwnerUserId": "7051337", "LastActivityDate": "2020-01-28T20:38:43.283", "Title": "Is there a way to configure the 'Stack Name' of nested stacks in AWS cloudformation ?", "Tags": "|amazon-web-services|aws-cloudformation|", "AnswerCount": "2", "CommentCount": "1", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "106034545", "PostId": "44196080", "Score": "1", "Text": "Why do you \"need to specify the 'Stack Name' of the nested stack\"? Understanding that may help us find the best solution to your problem.", "CreationDate": "2020-01-28T22:20:07.897", "UserId": "2860032", "filtered-sentences": []}], "history": [{"Id": "147951511", "PostHistoryTypeId": "2", "PostId": "44196080", "RevisionGUID": "324d3f6a-b0a3-45f3-b143-efc8c34aaa85", "CreationDate": "2017-05-26T07:33:23.847", "UserId": "7051337", "Text": "I am trying to create a nested stack using AWS CloudFormation. \r\nI need to specify the 'Stack Name' of the nested stack. \r\nI tried using the 'Tags' property with Key: 'Stack Name'. But that didn't help.\r\nIs there any way to provide the Stack Name as an input while creating nested stack?", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "147951512", "PostHistoryTypeId": "1", "PostId": "44196080", "RevisionGUID": "324d3f6a-b0a3-45f3-b143-efc8c34aaa85", "CreationDate": "2017-05-26T07:33:23.847", "UserId": "7051337", "Text": "Is there a way to configure the 'Stack Name' of nested stacks in AWS cloudformation ?", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "147951513", "PostHistoryTypeId": "3", "PostId": "44196080", "RevisionGUID": "324d3f6a-b0a3-45f3-b143-efc8c34aaa85", "CreationDate": "2017-05-26T07:33:23.847", "UserId": "7051337", "Text": "|amazon-web-services|aws-cloudformation|", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "answers": [{"Id": "59777675", "PostTypeId": "2", "ParentId": "44196080", "CreationDate": "2020-01-16T20:55:08.667", "Score": "1", "Body": "<p>In a given template, you have access to the pseudo-parameters stackId and stackName. Those can be marked for export, then referenced in another stack. Joined, they give you the child stack's name.</p>\n\n<p>I found the following video quite useful despite its age: <a href=\"https://youtu.be/6R44BADNJA8\" rel=\"nofollow noreferrer\">https://youtu.be/6R44BADNJA8</a></p>\n\n<p>This sample template may also be helpful in understanding how these work: <a href=\"https://s3.amazonaws.com/cloudformation-examples/user-guide/cross-stack/SampleNetworkCrossStack.template\" rel=\"nofollow noreferrer\">https://s3.amazonaws.com/cloudformation-examples/user-guide/cross-stack/SampleNetworkCrossStack.template</a></p>\n\n<pre><code>{ \"AWSTemplateFormatVersion\" : \"2010-09-09\", \"Description\" : \"AWS CloudFormation Sample Template VPC_with_PublicIPs_And_DNS: Sample template that creates a VPC with DNS and public IPs enabled. Note that you are billed for the AWS resources that you use when you create a stack from this template.\", \"Resources\" : { \"VPC\" : { \"Type\" : \"AWS::EC2::VPC\", \"Properties\" : { \"EnableDnsSupport\" : \"true\", \"EnableDnsHostnames\" : \"true\", \"CidrBlock\" : \"10.0.0.0/16\" } }, \"PublicSubnet\" : { \"Type\" : \"AWS::EC2::Subnet\", \"Properties\" : { \"VpcId\" : { \"Ref\" : \"VPC\" }, \"CidrBlock\" : \"10.0.0.0/24\" } }, \"InternetGateway\" : { \"Type\" : \"AWS::EC2::InternetGateway\" }, \"VPCGatewayAttachment\" : { \"Type\" : \"AWS::EC2::VPCGatewayAttachment\", \"Properties\" : { \"VpcId\" : { \"Ref\" : \"VPC\" }, \"InternetGatewayId\" : { \"Ref\" : \"InternetGateway\" } } }, \"PublicRouteTable\" : { \"Type\" : \"AWS::EC2::RouteTable\", \"Properties\" : { \"VpcId\" : { \"Ref\" : \"VPC\" } } }, \"PublicRoute\" : { \"Type\" : \"AWS::EC2::Route\", \"DependsOn\" : \"VPCGatewayAttachment\", \"Properties\" : { \"RouteTableId\" : { \"Ref\" : \"PublicRouteTable\" }, \"DestinationCidrBlock\" : \"0.0.0.0/0\", \"GatewayId\" : { \"Ref\" : \"InternetGateway\" } } }, \"PublicSubnetRouteTableAssociation\" : { \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\" : { \"SubnetId\" : { \"Ref\" : \"PublicSubnet\" }, \"RouteTableId\" : { \"Ref\" : \"PublicRouteTable\" } } }, \"PublicSubnetNetworkAclAssociation\" : { \"Type\" : \"AWS::EC2::SubnetNetworkAclAssociation\", \"Properties\" : { \"SubnetId\" : { \"Ref\" : \"PublicSubnet\" }, \"NetworkAclId\" : { \"Fn::GetAtt\" : [\"VPC\", \"DefaultNetworkAcl\"] } } }, \"WebServerSecurityGroup\" : { \"Type\" : \"AWS::EC2::SecurityGroup\", \"Properties\" : { \"GroupDescription\" : \"Enable HTTP ingress\", \"VpcId\" : { \"Ref\" : \"VPC\" }, \"SecurityGroupIngress\" : [ { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"80\", \"ToPort\" : \"80\", \"CidrIp\" : \"0.0.0.0/0\" } ] } } }, \"Outputs\" : { \"VPCId\" : { \"Description\" : \"VPC ID\", \"Value\" : { \"Ref\" : \"VPC\" }, \"Export\" : { \"Name\" : {\"Fn::Sub\": \"${AWS::StackName}-VPCID\" }} }, \"PublicSubnet\" : { \"Description\" : \"The subnet ID to use for public web servers\", \"Value\" : { \"Ref\" : \"PublicSubnet\" }, \"Export\" : { \"Name\" : {\"Fn::Sub\": \"${AWS::StackName}-SubnetID\" }} }, \"WebServerSecurityGroup\" : { \"Description\" : \"The security group ID to use for public web servers\", \"Value\" : { \"Fn::GetAtt\" : [\"WebServerSecurityGroup\", \"GroupId\"] }, \"Export\" : { \"Name\" : {\"Fn::Sub\": \"${AWS::StackName}-SecurityGroupID\" }} } } }\n</code></pre>\n", "OwnerUserId": "901899", "LastEditorUserId": "901899", "LastEditDate": "2020-01-16T21:18:06.123", "LastActivityDate": "2020-01-16T21:18:06.123", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "213100102", "PostHistoryTypeId": "5", "PostId": "59777675", "RevisionGUID": "4d4e32d9-52b7-45b4-8356-e158604615b9", "CreationDate": "2020-01-16T21:18:06.123", "UserId": "901899", "Comment": "added 180 characters in body; added 2449 characters in body", "Text": "In a given template, you have access to the pseudo-parameters stackId and stackName. Those can be marked for export, then referenced in another stack. Joined, they give you the child stack's name.\n\nI found the following video quite useful despite its age: https://youtu.be/6R44BADNJA8\n\nThis sample template may also be helpful in understanding how these work: https://s3.amazonaws.com/cloudformation-examples/user-guide/cross-stack/SampleNetworkCrossStack.template\n\n    { \"AWSTemplateFormatVersion\" : \"2010-09-09\", \"Description\" : \"AWS CloudFormation Sample Template VPC_with_PublicIPs_And_DNS: Sample template that creates a VPC with DNS and public IPs enabled. Note that you are billed for the AWS resources that you use when you create a stack from this template.\", \"Resources\" : { \"VPC\" : { \"Type\" : \"AWS::EC2::VPC\", \"Properties\" : { \"EnableDnsSupport\" : \"true\", \"EnableDnsHostnames\" : \"true\", \"CidrBlock\" : \"10.0.0.0/16\" } }, \"PublicSubnet\" : { \"Type\" : \"AWS::EC2::Subnet\", \"Properties\" : { \"VpcId\" : { \"Ref\" : \"VPC\" }, \"CidrBlock\" : \"10.0.0.0/24\" } }, \"InternetGateway\" : { \"Type\" : \"AWS::EC2::InternetGateway\" }, \"VPCGatewayAttachment\" : { \"Type\" : \"AWS::EC2::VPCGatewayAttachment\", \"Properties\" : { \"VpcId\" : { \"Ref\" : \"VPC\" }, \"InternetGatewayId\" : { \"Ref\" : \"InternetGateway\" } } }, \"PublicRouteTable\" : { \"Type\" : \"AWS::EC2::RouteTable\", \"Properties\" : { \"VpcId\" : { \"Ref\" : \"VPC\" } } }, \"PublicRoute\" : { \"Type\" : \"AWS::EC2::Route\", \"DependsOn\" : \"VPCGatewayAttachment\", \"Properties\" : { \"RouteTableId\" : { \"Ref\" : \"PublicRouteTable\" }, \"DestinationCidrBlock\" : \"0.0.0.0/0\", \"GatewayId\" : { \"Ref\" : \"InternetGateway\" } } }, \"PublicSubnetRouteTableAssociation\" : { \"Type\" : \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\" : { \"SubnetId\" : { \"Ref\" : \"PublicSubnet\" }, \"RouteTableId\" : { \"Ref\" : \"PublicRouteTable\" } } }, \"PublicSubnetNetworkAclAssociation\" : { \"Type\" : \"AWS::EC2::SubnetNetworkAclAssociation\", \"Properties\" : { \"SubnetId\" : { \"Ref\" : \"PublicSubnet\" }, \"NetworkAclId\" : { \"Fn::GetAtt\" : [\"VPC\", \"DefaultNetworkAcl\"] } } }, \"WebServerSecurityGroup\" : { \"Type\" : \"AWS::EC2::SecurityGroup\", \"Properties\" : { \"GroupDescription\" : \"Enable HTTP ingress\", \"VpcId\" : { \"Ref\" : \"VPC\" }, \"SecurityGroupIngress\" : [ { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"80\", \"ToPort\" : \"80\", \"CidrIp\" : \"0.0.0.0/0\" } ] } } }, \"Outputs\" : { \"VPCId\" : { \"Description\" : \"VPC ID\", \"Value\" : { \"Ref\" : \"VPC\" }, \"Export\" : { \"Name\" : {\"Fn::Sub\": \"${AWS::StackName}-VPCID\" }} }, \"PublicSubnet\" : { \"Description\" : \"The subnet ID to use for public web servers\", \"Value\" : { \"Ref\" : \"PublicSubnet\" }, \"Export\" : { \"Name\" : {\"Fn::Sub\": \"${AWS::StackName}-SubnetID\" }} }, \"WebServerSecurityGroup\" : { \"Description\" : \"The security group ID to use for public web servers\", \"Value\" : { \"Fn::GetAtt\" : [\"WebServerSecurityGroup\", \"GroupId\"] }, \"Export\" : { \"Name\" : {\"Fn::Sub\": \"${AWS::StackName}-SecurityGroupID\" }} } } }", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Note that you are billed for the AWS resources that you use when you create a stack from this template.\", \"Resources\" : { \"VPC\" : { \"Type\" : \"AWS::EC2::VPC\", \"Properties\" : { \"EnableDnsSupport\" : \"true\", \"EnableDnsHostnames\" : \"true\", \"CidrBlock\" : \"10.0.0.0/16\" } }, \"PublicSubnet\" : { \"Type\" : \"AWS::EC2::Subnet\", \"Properties\" : { \"VpcId\" : { \"Ref\" : \"VPC\" ", "keywords": ["bill"]}]}, {"Id": "213099085", "PostHistoryTypeId": "2", "PostId": "59777675", "RevisionGUID": "d121c0fd-ffbe-4d25-adc7-87aac4633ce0", "CreationDate": "2020-01-16T20:55:08.667", "UserId": "901899", "Text": "In a given template, you have access to the pseudo-parameters stackId and stackName. Those can be marked for export, then referenced in another stack. Joined, they give you the child stack's name.\n\nI found the following video quite useful despite its age: https://youtu.be/6R44BADNJA8", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "44196482", "PostTypeId": "2", "ParentId": "44196080", "CreationDate": "2017-05-26T07:57:29.523", "Score": "0", "Body": "<p>As commented below, the answer is no for now.</p>\n\n<p>Original:Yes, it's the resource name that gets taken as the stack name. Below you'd get a stack called myStackName</p>\n\n<p>YAML</p>\n\n<pre><code>AWSTemplateFormatVersion: \"2010-09-09\"\nResources: \n  myStackName: \nType: \"AWS::CloudFormation::Stack\"\nProperties: \n  TemplateURL: \"https://s3.amazonaws.com/cloudformation-templates-us-east-1/EC2ChooseAMI.template\"\n  Parameters: \n    InstanceType: \"t1.micro\"\n    KeyName: \"mykey\"\n</code></pre>\n\n<p>JSON</p>\n\n<pre><code>{\n\"AWSTemplateFormatVersion\" : \"2010-09-09\",\n   \"Resources\" : {\n  \"myStackName\" : {\n     \"Type\" : \"AWS::CloudFormation::Stack\",\n     \"Properties\" : {\n        \"TemplateURL\" : \"https://s3.amazonaws.com/cloudformation-templates-us-east-1/EC2ChooseAMI.template\",\n        \"Parameters\" : {\n           \"InstanceType\" : \"t1.micro\",\n           \"KeyName\" : \"mykey\"\n        }\n     }\n  }\n}\n}\n</code></pre>\n", "OwnerUserId": "5677853", "LastEditorUserId": "5677853", "LastEditDate": "2020-01-28T20:38:43.283", "LastActivityDate": "2020-01-28T20:38:43.283", "CommentCount": "3", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "75406180", "PostId": "44196482", "Score": "1", "Text": "I tried this way. But the child stack's name is generated like `ParentStackName-ResourceName-UniqueID` and not just the Resource name. For example, if the parent stack name is My-Service and the resource name is my-resource, the nested stack's name is like `My-Service-my-resource-IHTJ**JKT`", "CreationDate": "2017-05-26T08:02:40.310", "UserId": "7051337", "filtered-sentences": []}, {"Id": "75412969", "PostId": "44196482", "Score": "5", "Text": "@Neethu I'm afraid that is the way AWS have made it work at the moment and there isn't an alternative I'm aware of. A lot of CF resource names are derived in that way including ECS clusters and ALB targets, they don't have their own name parameter. Hopefully that will change.", "CreationDate": "2017-05-26T11:14:59.930", "UserId": "5677853", "filtered-sentences": [{"source": "Text", "text": "Hopefully that will change.", "keywords": ["change"]}]}, {"Id": "99518496", "PostId": "44196482", "Score": "4", "Text": "So the answer is \"No\", for now.", "CreationDate": "2019-06-05T15:21:25.487", "UserId": "3935325", "filtered-sentences": []}], "history": [{"Id": "147953057", "PostHistoryTypeId": "2", "PostId": "44196482", "RevisionGUID": "b858fd14-be05-41a4-b5ea-d68b1826ddf6", "CreationDate": "2017-05-26T07:57:29.523", "UserId": "5677853", "Text": "Yes, it's the resource name that gets taken as the stack name. Below you'd get a stack called myStackName\n\nYAML\n\n    AWSTemplateFormatVersion: \"2010-09-09\"\n    Resources: \n      myStackName: \n    Type: \"AWS::CloudFormation::Stack\"\n    Properties: \n      TemplateURL: \"https://s3.amazonaws.com/cloudformation-templates-us-east-1/EC2ChooseAMI.template\"\n      Parameters: \n        InstanceType: \"t1.micro\"\n        KeyName: \"mykey\"\n\nJSON\n\n    {\n    \"AWSTemplateFormatVersion\" : \"2010-09-09\",\n       \"Resources\" : {\n      \"myStackName\" : {\n         \"Type\" : \"AWS::CloudFormation::Stack\",\n         \"Properties\" : {\n            \"TemplateURL\" : \"https://s3.amazonaws.com/cloudformation-templates-us-east-1/EC2ChooseAMI.template\",\n            \"Parameters\" : {\n               \"InstanceType\" : \"t1.micro\",\n               \"KeyName\" : \"mykey\"\n            }\n         }\n      }\n    }\n    }", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "213853912", "PostHistoryTypeId": "5", "PostId": "44196482", "RevisionGUID": "8b523a69-3f53-44ba-8b8f-33c9329c7685", "CreationDate": "2020-01-28T20:38:43.283", "UserId": "5677853", "Comment": "added 56 characters in body", "Text": "As commented below, the answer is no for now.\n\nOriginal:Yes, it's the resource name that gets taken as the stack name. Below you'd get a stack called myStackName\n\nYAML\n\n    AWSTemplateFormatVersion: \"2010-09-09\"\n    Resources: \n      myStackName: \n    Type: \"AWS::CloudFormation::Stack\"\n    Properties: \n      TemplateURL: \"https://s3.amazonaws.com/cloudformation-templates-us-east-1/EC2ChooseAMI.template\"\n      Parameters: \n        InstanceType: \"t1.micro\"\n        KeyName: \"mykey\"\n\nJSON\n\n    {\n    \"AWSTemplateFormatVersion\" : \"2010-09-09\",\n       \"Resources\" : {\n      \"myStackName\" : {\n         \"Type\" : \"AWS::CloudFormation::Stack\",\n         \"Properties\" : {\n            \"TemplateURL\" : \"https://s3.amazonaws.com/cloudformation-templates-us-east-1/EC2ChooseAMI.template\",\n            \"Parameters\" : {\n               \"InstanceType\" : \"t1.micro\",\n               \"KeyName\" : \"mykey\"\n            }\n         }\n      }\n    }\n    }", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": true, "filtered-sentences": []}
{"Id": "49802146", "PostTypeId": "1", "AcceptedAnswerId": "49802609", "CreationDate": "2018-04-12T16:54:59.660", "Score": "7", "ViewCount": "8065", "Body": "<p>I have created an aws Cloudformation script and it launches but when i look at the logs its showing the following error: </p>\n\n<blockquote>\n  <p>ValidationError: Stack stackarn is in CREATE_COMPLETE state and cannot be signaled</p>\n</blockquote>\n\n<p>I have looked at other posts regarding this error that have suggested the issue is with the instance id being derived from the first instance or the autoscaling group not having a desired capacity set neither of which is true for me. </p>\n\n<p>Here is my cloud formation template</p>\n\n<pre><code>{\n\"AWSTemplateFormatVersion\": \"2010-09-09\",\n\"Metadata\": {\n    \"AWS::CloudFormation::Designer\": {\n        \"90d29d54-61c0-4b64-8f16-bab58c2da737\": {\n            \"size\": {\n                \"width\": 510,\n                \"height\": 330\n            },\n            \"position\": {\n                \"x\": 650,\n                \"y\": 200\n            },\n            \"z\": 0,\n            \"embeds\": [\n                \"9da7a6f1-462f-45c1-bc0c-10fe6a297ea0\",\n                \"791e1b81-a4ed-4b9a-a1b6-e37f92201579\",\n                \"d4706141-a8d6-4d08-b092-cabedf2d351f\",\n                \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\"\n            ]\n        },\n        \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\": {\n            \"size\": {\n                \"width\": 250,\n                \"height\": 110\n            },\n            \"position\": {\n                \"x\": 850,\n                \"y\": 250\n            },\n            \"z\": 1,\n            \"parent\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\",\n            \"embeds\": [\n                \"9eb6713b-7a7f-46a2-8a53-76738c2069e7\",\n                \"ee1affdf-e6fe-453f-b754-cf2de003f1d8\",\n                \"e8849c27-1095-4667-906a-6f194c39e5bb\"\n            ]\n        },\n        \"791e1b81-a4ed-4b9a-a1b6-e37f92201579\": {\n            \"size\": {\n                \"width\": 60,\n                \"height\": 60\n            },\n            \"position\": {\n                \"x\": 940,\n                \"y\": 450\n            },\n            \"z\": 1,\n            \"parent\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\",\n            \"embeds\": []\n        },\n        \"11d6e6db-f8bf-4162-83f4-3b4cdd3ecd9c\": {\n            \"size\": {\n                \"width\": 60,\n                \"height\": 60\n            },\n            \"position\": {\n                \"x\": 280,\n                \"y\": 340\n            },\n            \"z\": 0,\n            \"embeds\": []\n        },\n        \"75f9474e-7e06-4879-8e2e-42f9063117bf\": {\n            \"source\": {\n                \"id\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\"\n            },\n            \"target\": {\n                \"id\": \"11d6e6db-f8bf-4162-83f4-3b4cdd3ecd9c\"\n            },\n            \"z\": 0\n        },\n        \"9da7a6f1-462f-45c1-bc0c-10fe6a297ea0\": {\n            \"size\": {\n                \"width\": 120,\n                \"height\": 120\n            },\n            \"position\": {\n                \"x\": 700,\n                \"y\": 270\n            },\n            \"z\": 1,\n            \"parent\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\",\n            \"embeds\": [\n                \"93a62438-214b-4c30-906d-c45d73f0a288\"\n            ]\n        },\n        \"93a62438-214b-4c30-906d-c45d73f0a288\": {\n            \"size\": {\n                \"width\": 60,\n                \"height\": 60\n            },\n            \"position\": {\n                \"x\": 730,\n                \"y\": 310\n            },\n            \"z\": 2,\n            \"parent\": \"9da7a6f1-462f-45c1-bc0c-10fe6a297ea0\",\n            \"embeds\": [],\n            \"isassociatedwith\": [\n                \"11d6e6db-f8bf-4162-83f4-3b4cdd3ecd9c\"\n            ]\n            \"dependson\": [\n                \"75f9474e-7e06-4879-8e2e-42f9063117bf\"\n            ]\n        },\n        \"e9956922-4cfe-4d1a-a4c9-814613d2517e\": {\n            \"source\": {\n                \"id\": \"9da7a6f1-462f-45c1-bc0c-10fe6a297ea0\"\n            },\n            \"target\": {\n                \"id\": \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\"\n            },\n            \"z\": 1\n        },\n        \"e8849c27-1095-4667-906a-6f194c39e5bb\": {\n            \"size\": {\n                \"width\": 60,\n                \"height\": 60\n            },\n            \"position\": {\n                \"x\": 870,\n                \"y\": 280\n            },\n            \"z\": 2,\n            \"parent\": \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\",\n            \"embeds\": [],\n            \"isassociatedwith\": [\n                \"ee1affdf-e6fe-453f-b754-cf2de003f1d8\",\n                \"9eb6713b-7a7f-46a2-8a53-76738c2069e7\"\n            ]\n            \"dependson\": [\n                \"93a62438-214b-4c30-906d-c45d73f0a288\"\n            ]\n        },\n        \"9eb6713b-7a7f-46a2-8a53-76738c2069e7\": {\n            \"size\": {\n                \"width\": 60,\n                \"height\": 60\n            },\n            \"position\": {\n                \"x\": 940,\n                \"y\": 280\n            },\n            \"z\": 2,\n            \"parent\": \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\",\n            \"embeds\": [],\n            \"isassociatedwith\": [\n                \"d4706141-a8d6-4d08-b092-cabedf2d351f\"\n            ]\n        },\n        \"ee1affdf-e6fe-453f-b754-cf2de003f1d8\": {\n            \"size\": {\n                \"width\": 60,\n                \"height\": 60\n            },\n            \"position\": {\n                \"x\": 1020,\n                \"y\": 280\n            },\n            \"z\": 2,\n            \"parent\": \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\",\n            \"embeds\": [],\n            \"isassociatedwith\": [\n                \"791e1b81-a4ed-4b9a-a1b6-e37f92201579\"\n            ]\n        },\n        \"d4706141-a8d6-4d08-b092-cabedf2d351f\": {\n            \"size\": {\n                \"width\": 60,\n                \"height\": 60\n            },\n            \"position\": {\n                \"x\": 802.9767066348955,\n                \"y\": 452.6381721949601\n            },\n            \"z\": 1,\n            \"parent\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\",\n            \"embeds\": []\n\n        },\n        \"f2021951-c570-4233-8ccd-a05be043632c\": {\n            \"size\": {\n                \"width\": 60,\n                \"height\": 60\n            },\n            \"position\": {\n                \"x\": 1260,\n                \"y\": 210\n            },\n            \"z\": 0,\n            \"embeds\": []\n        },\n        \"c892fb7e-40c0-4391-be11-3e005ed16251\": {\n            \"size\": {\n                \"width\": 60,\n                \"height\": 60\n            },\n            \"position\": {\n                \"x\": 1370,\n                \"y\": 210\n            },\n            \"z\": 0,\n            \"embeds\": []\n        },\n        \"582ee47a-34d2-4faa-956f-72bbe48b5ca1\": {\n            \"size\": {\n                \"width\": 60,\n                \"height\": 60\n            },\n            \"position\": {\n                \"x\": 1260,\n                \"y\": 340\n            },\n            \"z\": 0,\n            \"embeds\": []\n        },\n        \"68ddbe84-8848-4920-8700-df090e65d755\": {\n            \"size\": {\n                \"width\": 60,\n                \"height\": 60\n            },\n            \"position\": {\n                \"x\": 1370,\n                \"y\": 340\n            },\n            \"z\": 0,\n            \"embeds\": []\n        }\n    }\n},\n\"Resources\": {\n    \"VPC\": {\n        \"Type\": \"AWS::EC2::VPC\",\n        \"Properties\": {\n            \"EnableDnsSupport\": \"true\",\n            \"EnableDnsHostnames\": \"true\",\n            \"CidrBlock\": \"10.0.0.0/16\"\n        },\n        \"Metadata\": {\n            \"AWS::CloudFormation::Designer\": {\n                \"id\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\"\n            }\n        }\n    },\n    \"PublicSubnet\": {\n        \"Type\": \"AWS::EC2::Subnet\",\n        \"Properties\": {\n            \"VpcId\": {\n                \"Ref\": \"VPC\"\n            },\n            \"CidrBlock\": \"10.0.0.0/24\"\n        },\n        \"Metadata\": {\n            \"AWS::CloudFormation::Designer\": {\n                \"id\": \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\"\n            }\n        }\n    },\n    \"PublicLoadBalancerSecurityGroup\": {\n        \"Type\": \"AWS::EC2::SecurityGroup\",\n        \"Properties\": {\n            \"GroupDescription\": \"Public Elastic Load Balancing security group with HTTP access on port 80 from the Internet\",\n            \"SecurityGroupIngress\": [\n                {\n                    \"IpProtocol\": \"tcp\",\n                    \"FromPort\": \"80\",\n                    \"ToPort\": \"80\",\n                    \"CidrIp\": \"0.0.0.0/0\"\n                }\n            ],\n            \"SecurityGroupEgress\": [\n                {\n                    \"IpProtocol\": \"tcp\",\n                    \"FromPort\": \"80\",\n                    \"ToPort\": \"80\",\n                    \"CidrIp\": \"0.0.0.0/0\"\n                }\n            ],\n            \"VpcId\": {\n                \"Ref\": \"VPC\"\n            }\n        },\n        \"Metadata\": {\n            \"AWS::CloudFormation::Designer\": {\n                \"id\": \"791e1b81-a4ed-4b9a-a1b6-e37f92201579\"\n            }\n        }\n    },\n    \"InternetGateway\": {\n        \"Type\": \"AWS::EC2::InternetGateway\",\n        \"Properties\": {},\n        \"Metadata\": {\n            \"AWS::CloudFormation::Designer\": {\n                \"id\": \"11d6e6db-f8bf-4162-83f4-3b4cdd3ecd9c\"\n            }\n        }\n    },\n    \"EC2VPCG4YNHI\": {\n        \"Type\": \"AWS::EC2::VPCGatewayAttachment\",\n        \"Properties\": {\n            \"VpcId\": {\n                \"Ref\": \"VPC\"\n            },\n            \"InternetGatewayId\": {\n                \"Ref\": \"InternetGateway\"\n            }\n        },\n        \"Metadata\": {\n            \"AWS::CloudFormation::Designer\": {\n                \"id\": \"75f9474e-7e06-4879-8e2e-42f9063117bf\"\n            }\n        }\n    },\n    \"PublicRouteTable\": {\n        \"Type\": \"AWS::EC2::RouteTable\",\n        \"Properties\": {\n            \"VpcId\": {\n                \"Ref\": \"VPC\"\n            }\n        },\n        \"Metadata\": {\n            \"AWS::CloudFormation::Designer\": {\n                \"id\": \"9da7a6f1-462f-45c1-bc0c-10fe6a297ea0\"\n            }\n        }\n    },\n    \"PublicRoute\": {\n        \"Type\": \"AWS::EC2::Route\",\n        \"Properties\": {\n            \"DestinationCidrBlock\": \"0.0.0.0/0\",\n            \"RouteTableId\": {\n                \"Ref\": \"PublicRouteTable\"\n            },\n            \"GatewayId\": {\n                \"Ref\": \"InternetGateway\"\n            }\n        },\n        \"Metadata\": {\n            \"AWS::CloudFormation::Designer\": {\n                \"id\": \"93a62438-214b-4c30-906d-c45d73f0a288\"\n            }\n        },\n        \"DependsOn\": [\n            \"EC2VPCG4YNHI\"\n        ]\n    },\n    \"EC2SRTA188EJ\": {\n        \"Type\": \"AWS::EC2::SubnetRouteTableAssociation\",\n        \"Properties\": {\n            \"RouteTableId\": {\n                \"Ref\": \"PublicRouteTable\"\n            },\n            \"SubnetId\": {\n                \"Ref\": \"PublicSubnet\"\n            }\n        },\n        \"Metadata\": {\n            \"AWS::CloudFormation::Designer\": {\n                \"id\": \"e9956922-4cfe-4d1a-a4c9-814613d2517e\"\n            }\n        }\n    },\n    \"WebServerFleet\": {\n        \"Type\": \"AWS::AutoScaling::AutoScalingGroup\",\n        \"Properties\": {\n            \"MinSize\": \"1\",\n            \"MaxSize\": \"10\",\n            \"DesiredCapacity\": {\n                \"Ref\": \"WebServerCount\"\n            },\n            \"VPCZoneIdentifier\": [\n                {\n                    \"Ref\": \"PublicSubnet\"\n                }\n            ],\n            \"LoadBalancerNames\": [\n                {\n                    \"Ref\": \"PublicElasticLoadBalancer\"\n                }\n            ],\n            \"LaunchConfigurationName\": {\n                \"Ref\": \"WebServerLaunchConfig\"\n            }\n        },\n        \"Metadata\": {\n            \"AWS::CloudFormation::Designer\": {\n                \"id\": \"e8849c27-1095-4667-906a-6f194c39e5bb\"\n            }\n        },\n        \"DependsOn\": [\n            \"PublicRoute\"\n        ]\n    },\n    \"WebServerLaunchConfig\": {\n        \"Type\": \"AWS::AutoScaling::LaunchConfiguration\",\n        \"Properties\": {\n            \"InstanceType\": {\n                \"Ref\": \"InstanceType\"\n            },\n            \"ImageId\": {\n                \"Fn::FindInMap\": [\n                    \"AWSRegionArch2AMI\",\n                    {\n                        \"Ref\": \"AWS::Region\"\n                    },\n                    {\n                        \"Fn::FindInMap\": [\n                            \"AWSInstanceType2Arch\",\n                            {\n                                \"Ref\": \"InstanceType\"\n                            },\n                            \"Arch\"\n                        ]\n                    }\n                ]\n            },\n            \"KeyName\": {\n                \"Ref\": \"KeyName\"\n            },\n            \"AssociatePublicIpAddress\": \"true\",\n            \"UserData\": {\n                \"Fn::Base64\": {\n                    \"Fn::Join\": [\n                        \"\",\n                        [\n                            \"#!/bin/bash -xe\\n\",\n                            \"yum install -y aws-cfn-bootstrap\\n\",\n                            \"# Install the files and packages from the metadata\\n\",\n                            \"/opt/aws/bin/cfn-init -v \",\n                            \"         --stack \",\n                            {\n                                \"Ref\": \"AWS::StackName\"\n                            },\n                            \"         --resource WebServerLaunchConfig \",\n                            \"         --configsets All \",\n                            \"         --region \",\n                            {\n                                \"Ref\": \"AWS::Region\"\n                            },\n                            \"\\n\",\n                            \"#Install Redis\\n\",\n                            \"#rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\\n\",\n                            \"rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm\\n\",\n                            \"yum --enablerepo=remi,remi-test -y install redis\\n\",\n                            \"chkconfig --add redis\\n\",\n                            \"chkconfig --level 345 redis on\\n\",\n                            \"service redis start\\n\",\n                            \"# Clone GitHub Repository\\n\",\n                            \"git clone -b master https://\",\n                            {\n                                \"Ref\": \"GitHubUsername\"\n                            },\n                            \":\",\n                            {\n                                \"Ref\": \"GitHubPassword\"\n                            },\n                            \"@github.com/repo /var/www/html\\n\",\n                            \"# Update the httpd.conf file and restart the web server\\n\",\n                            \"mv -f /var/www/html/resources/conf/httpd.conf /etc/httpd/conf/httpd.conf \\n\",\n                            \"service httpd restart\\n\",\n                            \"# Install Composer\\n\",\n                            \"#chmod 755 -R /usr/local/bin\\n\",\n                            \"curl -sS https://getcomposer.org/installer &gt; /tmp/installer\\n\",\n                            \"COMPOSER_HOME=/usr/local/composer php &lt; /tmp/installer\\n\",\n                            \"mv composer.phar /usr/local/bin/composer.phar \\n\",\n                            \"groupadd www\\n\",\n                            \"usermod -a -G www ec2-user\\n\",\n                            \"usermod -a -G www apache\\n\",\n                            \"chown -R root:www /var/www\\n\",\n                            \"find /var/www -type d -exec chmod 2775 {} +\\n\",\n                            \"find /var/www -type f -exec chmod 0664 {} +\\n\",\n                            \"COMPOSER_HOME=/usr/local/composer /usr/local/bin/composer.phar install -d /var/www/html --no-plugins --no-scripts\\n\",\n                            \"mkdir /var/www/html/storage/framework\\n\",\n                            \"mkdir /var/www/html/storage/framework/views\\n\",\n                            \"mkdir /var/www/html/storage/framework/sessions\\n\",\n                            \"chmod -R 775 /var/www/html/storage\\n\",\n                            \"# Signal the status from cfn-init\\n\",\n                            \"/opt/aws/bin/cfn-signal -e $? \",\n                            \"         --stack \",\n                            {\n                                \"Ref\": \"AWS::StackName\"\n                            },\n                            \"         --resource WebServerFleet \",\n                            \"         --region \",\n                            {\n                                \"Ref\": \"AWS::Region\"\n                            },\n                            \"\\n\"\n                        ]\n                    ]\n                }\n            },\n            \"SecurityGroups\": [\n                {\n                    \"Ref\": \"WebServerSecurityGroup\"\n                }\n            ]\n        },\n        \"Metadata\": {\n            \"AWS::CloudFormation::Designer\": {\n                \"id\": \"9eb6713b-7a7f-46a2-8a53-76738c2069e7\"\n            },\n            \"AWS::CloudFormation::Init\": {\n                \"configSets\": {\n                    \"All\": [\n                        \"installWebDependencies\"\n                    ]\n                },\n                \"installWebDependencies\": {\n                    \"packages\": {\n                        \"yum\": {\n                            \"httpd24\": [],\n                            \"php56\": [],\n                            \"php56-pdo\": [],\n                            \"php56-mbstring\": [],\n                            \"php56-mcrypt\": [],\n                            \"php-ZendFramework-Db-Adapter-Pdo-Mysql.noarch\": [],\n                            \"git\": []\n                        }\n                    },\n                    \"services\": {\n                        \"sysvinit\": {\n                            \"httpd\": {\n                                \"enabled\": \"true\",\n                                \"ensureRunning\": \"true\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"PublicElasticLoadBalancer\": {\n        \"Type\": \"AWS::ElasticLoadBalancing::LoadBalancer\",\n        \"Properties\": {\n            \"Listeners\": [\n                {\n                    \"LoadBalancerPort\": \"80\",\n                    \"InstancePort\": \"80\",\n                    \"Protocol\": \"HTTP\"\n                }\n            ],\n            \"HealthCheck\": {\n                \"Target\": \"HTTP:80/\",\n                \"HealthyThreshold\": \"3\",\n                \"UnhealthyThreshold\": \"5\",\n                \"Interval\": \"90\",\n                \"Timeout\": \"60\"\n            },\n            \"Subnets\": [\n                {\n                    \"Ref\": \"PublicSubnet\"\n                }\n            ],\n            \"SecurityGroups\": [\n                {\n                    \"Ref\": \"PublicLoadBalancerSecurityGroup\"\n                }\n            ]\n        },\n        \"Metadata\": {\n            \"AWS::CloudFormation::Designer\": {\n                \"id\": \"ee1affdf-e6fe-453f-b754-cf2de003f1d8\"\n            }\n        }\n    },\n    \"WebServerSecurityGroup\": {\n        \"Type\": \"AWS::EC2::SecurityGroup\",\n        \"Properties\": {\n            \"GroupDescription\": \"Allow access from load balancer and SSH traffic\",\n            \"SecurityGroupIngress\": [\n                {\n                    \"IpProtocol\": \"tcp\",\n                    \"FromPort\": \"80\",\n                    \"ToPort\": \"80\",\n                    \"SourceSecurityGroupId\": {\n                        \"Ref\": \"PublicLoadBalancerSecurityGroup\"\n                    }\n                },\n                {\n                    \"IpProtocol\": \"tcp\",\n                    \"FromPort\": \"22\",\n                    \"ToPort\": \"22\",\n                    \"CidrIp\": {\n                        \"Ref\": \"SSHLocation\"\n                    }\n                },\n                {\n                    \"IpProtocol\": \"tcp\",\n                    \"FromPort\": \"80\",\n                    \"ToPort\": \"80\",\n                    \"CidrIp\": \"31.221.88.186/32\"\n                }\n            ],\n            \"VpcId\": {\n                \"Ref\": \"VPC\"\n            }\n        },\n        \"Metadata\": {\n            \"AWS::CloudFormation::Designer\": {\n                \"id\": \"d4706141-a8d6-4d08-b092-cabedf2d351f\"\n            }\n        }\n    },\n    \"AnvilQueue\": {\n        \"Type\": \"AWS::SQS::Queue\",\n        \"Properties\": {\n            \"QueueName\": \"phonehome-incident-anvil\",\n            \"DelaySeconds\": 0,\n            \"ReceiveMessageWaitTimeSeconds\": 0,\n            \"VisibilityTimeout\": 30,\n            \"MessageRetentionPeriod\": 1209600\n        },\n        \"Metadata\": {\n            \"AWS::CloudFormation::Designer\": {\n                \"id\": \"f2021951-c570-4233-8ccd-a05be043632c\"\n            }\n        }\n    },\n    \"ProcessQueue\": {\n        \"Type\": \"AWS::SQS::Queue\",\n        \"Properties\": {\n            \"QueueName\": \"phonehome-incident-process\",\n            \"DelaySeconds\": 0,\n            \"ReceiveMessageWaitTimeSeconds\": 0,\n            \"VisibilityTimeout\": 30,\n            \"MessageRetentionPeriod\": 1209600\n        },\n        \"Metadata\": {\n            \"AWS::CloudFormation::Designer\": {\n                \"id\": \"c892fb7e-40c0-4391-be11-3e005ed16251\"\n            }\n        }\n    },\n    \"QueueDepthAlarm\": {\n        \"Type\": \"AWS::CloudWatch::Alarm\",\n        \"Properties\": {\n            \"AlarmDescription\": \"Alarm if queue depth grows beyond 2000 messages\",\n            \"Namespace\": \"AWS/SQS\",\n            \"MetricName\": \"ApproximateNumberOfMessagesVisible\",\n            \"Dimensions\": [\n                {\n                    \"Name\": \"AnvilQueue\",\n                    \"Value\": {\n                        \"Fn::GetAtt\": [\n                            \"AnvilQueue\",\n                            \"QueueName\"\n                        ]\n                    }\n                },\n                {\n                    \"Name\": \"ProcessQueue\",\n                    \"Value\": {\n                        \"Fn::GetAtt\": [\n                            \"ProcessQueue\",\n                            \"QueueName\"\n                        ]\n                    }\n                }\n            ],\n            \"Statistic\": \"Sum\",\n            \"Period\": \"300\",\n            \"EvaluationPeriods\": \"1\",\n            \"Threshold\": \"2000\",\n            \"ComparisonOperator\": \"GreaterThanThreshold\",\n            \"AlarmActions\": [\n                {\n                    \"Ref\": \"AlarmTopic\"\n                }\n            ],\n            \"InsufficientDataActions\": [\n                {\n                    \"Ref\": \"AlarmTopic\"\n                }\n            ]\n        },\n        \"Metadata\": {\n            \"AWS::CloudFormation::Designer\": {\n                \"id\": \"582ee47a-34d2-4faa-956f-72bbe48b5ca1\"\n            }\n        }\n    },\n    \"AlarmTopic\": {\n        \"Type\": \"AWS::SNS::Topic\",\n        \"Properties\": {\n            \"Subscription\": [\n                {\n                    \"Endpoint\": {\n                        \"Ref\": \"AlarmEmail\"\n                    },\n                    \"Protocol\": \"email\"\n                }\n            ]\n        },\n        \"Metadata\": {\n            \"AWS::CloudFormation::Designer\": {\n                \"id\": \"68ddbe84-8848-4920-8700-df090e65d755\"\n            }\n        }\n    }\n},\n\"Parameters\": {\n    \"AlarmEmail\": {\n        \"Default\": \"devops-geeks@foundry.com\",\n        \"Description\": \"Email address to notify if operational problems arise\",\n        \"Type\": \"String\"\n    },\n    \"InstanceType\": {\n        \"Description\": \"WebServer EC2 instance type\",\n        \"Type\": \"String\",\n        \"Default\": \"t2.micro\",\n        \"AllowedValues\": [\n            \"t1.micro\",\n            \"t2.micro\",\n            \"t2.small\",\n            \"t2.medium\",\n            \"m1.small\",\n            \"m1.medium\",\n            \"m1.large\"\n        ],\n        \"ConstraintDescription\": \"must be a valid EC2 instance type.\"\n    },\n    \"KeyName\": {\n        \"Description\": \"Name of an EC2 KeyPair to enable SSH access to the instance.\",\n        \"Type\": \"AWS::EC2::KeyPair::KeyName\",\n        \"ConstraintDescription\": \"must be the name of an existing EC2 KeyPair.\"\n    },\n    \"SSHLocation\": {\n        \"Description\": \" The IP address range that can be used to access the web server using SSH.\",\n        \"Type\": \"String\",\n        \"MinLength\": \"9\",\n        \"MaxLength\": \"18\",\n        \"Default\": \"0.0.0.0/0\",\n        \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\",\n        \"ConstraintDescription\": \"must be a valid IP CIDR range of the form x.x.x.x/x.\"\n    },\n    \"WebServerCount\": {\n        \"Description\": \"Number of Amazon EC2 instances to launch for the WebServer server\",\n        \"Type\": \"Number\",\n        \"Default\": \"1\"\n    },\n    \"GitHubPassword\": {\n        \"NoEcho\": \"true\",\n        \"Description\": \"GitHub Password\",\n        \"Type\": \"String\"\n    },\n    \"GitHubUsername\": {\n        \"Description\": \"GitHub Username \",\n        \"Type\": \"String\"\n    }\n},\n\"Mappings\": {\n    \"AWSInstanceType2Arch\": {\n        \"t1.micro\": {\n            \"Arch\": \"PV64\"\n        },\n        \"t2.micro\": {\n            \"Arch\": \"HVM64\"\n        },\n        \"t2.small\": {\n            \"Arch\": \"HVM64\"\n        },\n        \"t2.medium\": {\n            \"Arch\": \"HVM64\"\n        },\n        \"m1.small\": {\n            \"Arch\": \"PV64\"\n        },\n        \"m1.medium\": {\n            \"Arch\": \"PV64\"\n        },\n        \"m1.large\": {\n            \"Arch\": \"PV64\"\n        }\n    },\n    \"AWSRegionArch2AMI\": {\n        \"eu-west-1\": {\n            \"PV64\": \"ami-bf0897c8\",\n            \"HVM64\": \"ami-a10897d6\",\n            \"HVMG2\": \"ami-d5bc24a2\"\n        },\n        \"eu-west-2\": {\n            \"PV64\": \"ami-896369ed\",\n            \"HVM64\": \"ami-896369ed\",\n            \"HVMG2\": \"ami-896369ed\"\n        },\n        \"eu-central-1\": {\n            \"PV64\": \"ami-ac221fb1\",\n            \"HVM64\": \"ami-a8221fb5\",\n            \"HVMG2\": \"ami-7cd2ef61\"\n        }\n    }\n},\n\"Outputs\": {\n    \"URL\": {\n        \"Value\": {\n            \"Fn::GetAtt\": [\n                \"PublicElasticLoadBalancer\",\n                \"DNSName\"\n            ]\n        },\n        \"Description\": \"Newly created application URL\"\n    }\n}\n}\n</code></pre>\n\n<p>Note: some of the CF designer code has been excluded to stop stackoverflow complaining the file is too big. \nAny ideas what might be causing this issue? </p>\n", "OwnerUserId": "6356698", "LastEditorUserId": "6356698", "LastEditDate": "2018-04-13T20:18:47.323", "LastActivityDate": "2018-08-17T11:27:08.960", "Title": "Cloudformation ValidationError: Stack (stackname) is in CREATE_COMPLETE state and cannot be signaled", "Tags": "|aws-cloudformation|", "AnswerCount": "2", "CommentCount": "3", "FavoriteCount": "0", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "86619348", "PostId": "49802146", "Score": "0", "Text": "What's in the script that you're using?", "CreationDate": "2018-04-12T17:12:20.813", "UserId": "492773", "filtered-sentences": []}, {"Id": "86619428", "PostId": "49802146", "Score": "0", "Text": "This is the script that is failing      \"# Signal the status from cfn-init\\n\",\n\"/opt/aws/bin/cfn-signal -e $? \",\"         --stack \", { \"Ref\": \"AWS::StackName\" },  \"         --resource WebServerFleet \", \"         --region \", { \"Ref\": \"AWS::Region\" }, \"\\n\"", "CreationDate": "2018-04-12T17:14:59.293", "UserId": "6356698", "filtered-sentences": []}, {"Id": "110447154", "PostId": "49802146", "Score": "0", "Text": "This error can also happen if you are trying to signal multiple times.", "CreationDate": "2020-06-18T13:19:59.123", "UserId": "3888850", "filtered-sentences": []}], "history": [{"Id": "171138036", "PostHistoryTypeId": "2", "PostId": "49802146", "RevisionGUID": "3226d912-53aa-4770-bbe9-eddafe64fb6a", "CreationDate": "2018-04-12T16:54:59.660", "UserId": "6356698", "Text": "I have created an aws Cloudformation script and it launches but when i look at the logs its showing the following error: \r\n\r\n> ValidationError: Stack stackarn is in CREATE_COMPLETE state and cannot be signaled\r\n\r\nI have looked at other posts regarding this error that have suggested the issue is with the instance id being derived from the first instance or the autoscaling group not having a desired capacity set neither of which is true for me. \r\n\r\nHere is my cloud formation template\r\n\r\n    {\r\n    \"AWSTemplateFormatVersion\": \"2010-09-09\",\r\n    \"Metadata\": {\r\n        \"AWS::CloudFormation::Designer\": {\r\n            \"90d29d54-61c0-4b64-8f16-bab58c2da737\": {\r\n                \"size\": {\r\n                    \"width\": 510,\r\n                    \"height\": 330\r\n                },\r\n                \"position\": {\r\n                    \"x\": 650,\r\n                    \"y\": 200\r\n                },\r\n                \"z\": 0,\r\n                \"embeds\": [\r\n                    \"9da7a6f1-462f-45c1-bc0c-10fe6a297ea0\",\r\n                    \"791e1b81-a4ed-4b9a-a1b6-e37f92201579\",\r\n                    \"d4706141-a8d6-4d08-b092-cabedf2d351f\",\r\n                    \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\"\r\n                ]\r\n            },\r\n            \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\": {\r\n                \"size\": {\r\n                    \"width\": 250,\r\n                    \"height\": 110\r\n                },\r\n                \"position\": {\r\n                    \"x\": 850,\r\n                    \"y\": 250\r\n                },\r\n                \"z\": 1,\r\n                \"parent\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\",\r\n                \"embeds\": [\r\n                    \"9eb6713b-7a7f-46a2-8a53-76738c2069e7\",\r\n                    \"ee1affdf-e6fe-453f-b754-cf2de003f1d8\",\r\n                    \"e8849c27-1095-4667-906a-6f194c39e5bb\"\r\n                ]\r\n            },\r\n            \"791e1b81-a4ed-4b9a-a1b6-e37f92201579\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 940,\r\n                    \"y\": 450\r\n                },\r\n                \"z\": 1,\r\n                \"parent\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\",\r\n                \"embeds\": []\r\n            },\r\n            \"11d6e6db-f8bf-4162-83f4-3b4cdd3ecd9c\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 280,\r\n                    \"y\": 340\r\n                },\r\n                \"z\": 0,\r\n                \"embeds\": []\r\n            },\r\n            \"75f9474e-7e06-4879-8e2e-42f9063117bf\": {\r\n                \"source\": {\r\n                    \"id\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\"\r\n                },\r\n                \"target\": {\r\n                    \"id\": \"11d6e6db-f8bf-4162-83f4-3b4cdd3ecd9c\"\r\n                },\r\n                \"z\": 0\r\n            },\r\n            \"9da7a6f1-462f-45c1-bc0c-10fe6a297ea0\": {\r\n                \"size\": {\r\n                    \"width\": 120,\r\n                    \"height\": 120\r\n                },\r\n                \"position\": {\r\n                    \"x\": 700,\r\n                    \"y\": 270\r\n                },\r\n                \"z\": 1,\r\n                \"parent\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\",\r\n                \"embeds\": [\r\n                    \"93a62438-214b-4c30-906d-c45d73f0a288\"\r\n                ]\r\n            },\r\n            \"93a62438-214b-4c30-906d-c45d73f0a288\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 730,\r\n                    \"y\": 310\r\n                },\r\n                \"z\": 2,\r\n                \"parent\": \"9da7a6f1-462f-45c1-bc0c-10fe6a297ea0\",\r\n                \"embeds\": [],\r\n                \"isassociatedwith\": [\r\n                    \"11d6e6db-f8bf-4162-83f4-3b4cdd3ecd9c\"\r\n                ]\r\n                \"dependson\": [\r\n                    \"75f9474e-7e06-4879-8e2e-42f9063117bf\"\r\n                ]\r\n            },\r\n            \"e9956922-4cfe-4d1a-a4c9-814613d2517e\": {\r\n                \"source\": {\r\n                    \"id\": \"9da7a6f1-462f-45c1-bc0c-10fe6a297ea0\"\r\n                },\r\n                \"target\": {\r\n                    \"id\": \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\"\r\n                },\r\n                \"z\": 1\r\n            },\r\n            \"e8849c27-1095-4667-906a-6f194c39e5bb\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 870,\r\n                    \"y\": 280\r\n                },\r\n                \"z\": 2,\r\n                \"parent\": \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\",\r\n                \"embeds\": [],\r\n                \"isassociatedwith\": [\r\n                    \"ee1affdf-e6fe-453f-b754-cf2de003f1d8\",\r\n                    \"9eb6713b-7a7f-46a2-8a53-76738c2069e7\"\r\n                ]\r\n                \"dependson\": [\r\n                    \"93a62438-214b-4c30-906d-c45d73f0a288\"\r\n                ]\r\n            },\r\n            \"9eb6713b-7a7f-46a2-8a53-76738c2069e7\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 940,\r\n                    \"y\": 280\r\n                },\r\n                \"z\": 2,\r\n                \"parent\": \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\",\r\n                \"embeds\": [],\r\n                \"isassociatedwith\": [\r\n                    \"d4706141-a8d6-4d08-b092-cabedf2d351f\"\r\n                ]\r\n            },\r\n            \"ee1affdf-e6fe-453f-b754-cf2de003f1d8\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 1020,\r\n                    \"y\": 280\r\n                },\r\n                \"z\": 2,\r\n                \"parent\": \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\",\r\n                \"embeds\": [],\r\n                \"isassociatedwith\": [\r\n                    \"791e1b81-a4ed-4b9a-a1b6-e37f92201579\"\r\n                ]\r\n            },\r\n            \"d4706141-a8d6-4d08-b092-cabedf2d351f\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 802.9767066348955,\r\n                    \"y\": 452.6381721949601\r\n                },\r\n                \"z\": 1,\r\n                \"parent\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\",\r\n                \"embeds\": []\r\n\r\n            },\r\n            \"f2021951-c570-4233-8ccd-a05be043632c\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 1260,\r\n                    \"y\": 210\r\n                },\r\n                \"z\": 0,\r\n                \"embeds\": []\r\n            },\r\n            \"c892fb7e-40c0-4391-be11-3e005ed16251\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 1370,\r\n                    \"y\": 210\r\n                },\r\n                \"z\": 0,\r\n                \"embeds\": []\r\n            },\r\n            \"582ee47a-34d2-4faa-956f-72bbe48b5ca1\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 1260,\r\n                    \"y\": 340\r\n                },\r\n                \"z\": 0,\r\n                \"embeds\": []\r\n            },\r\n            \"68ddbe84-8848-4920-8700-df090e65d755\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 1370,\r\n                    \"y\": 340\r\n                },\r\n                \"z\": 0,\r\n                \"embeds\": []\r\n            }\r\n        }\r\n    },\r\n    \"Resources\": {\r\n        \"VPC\": {\r\n            \"Type\": \"AWS::EC2::VPC\",\r\n            \"Properties\": {\r\n                \"EnableDnsSupport\": \"true\",\r\n                \"EnableDnsHostnames\": \"true\",\r\n                \"CidrBlock\": \"10.0.0.0/16\"\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\"\r\n                }\r\n            }\r\n        },\r\n        \"PublicSubnet\": {\r\n            \"Type\": \"AWS::EC2::Subnet\",\r\n            \"Properties\": {\r\n                \"VpcId\": {\r\n                    \"Ref\": \"VPC\"\r\n                },\r\n                \"CidrBlock\": \"10.0.0.0/24\"\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\"\r\n                }\r\n            }\r\n        },\r\n        \"PublicLoadBalancerSecurityGroup\": {\r\n            \"Type\": \"AWS::EC2::SecurityGroup\",\r\n            \"Properties\": {\r\n                \"GroupDescription\": \"Public Elastic Load Balancing security group with HTTP access on port 80 from the Internet\",\r\n                \"SecurityGroupIngress\": [\r\n                    {\r\n                        \"IpProtocol\": \"tcp\",\r\n                        \"FromPort\": \"80\",\r\n                        \"ToPort\": \"80\",\r\n                        \"CidrIp\": \"0.0.0.0/0\"\r\n                    }\r\n                ],\r\n                \"SecurityGroupEgress\": [\r\n                    {\r\n                        \"IpProtocol\": \"tcp\",\r\n                        \"FromPort\": \"80\",\r\n                        \"ToPort\": \"80\",\r\n                        \"CidrIp\": \"0.0.0.0/0\"\r\n                    }\r\n                ],\r\n                \"VpcId\": {\r\n                    \"Ref\": \"VPC\"\r\n                }\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"791e1b81-a4ed-4b9a-a1b6-e37f92201579\"\r\n                }\r\n            }\r\n        },\r\n        \"InternetGateway\": {\r\n            \"Type\": \"AWS::EC2::InternetGateway\",\r\n            \"Properties\": {},\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"11d6e6db-f8bf-4162-83f4-3b4cdd3ecd9c\"\r\n                }\r\n            }\r\n        },\r\n        \"EC2VPCG4YNHI\": {\r\n            \"Type\": \"AWS::EC2::VPCGatewayAttachment\",\r\n            \"Properties\": {\r\n                \"VpcId\": {\r\n                    \"Ref\": \"VPC\"\r\n                },\r\n                \"InternetGatewayId\": {\r\n                    \"Ref\": \"InternetGateway\"\r\n                }\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"75f9474e-7e06-4879-8e2e-42f9063117bf\"\r\n                }\r\n            }\r\n        },\r\n        \"PublicRouteTable\": {\r\n            \"Type\": \"AWS::EC2::RouteTable\",\r\n            \"Properties\": {\r\n                \"VpcId\": {\r\n                    \"Ref\": \"VPC\"\r\n                }\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"9da7a6f1-462f-45c1-bc0c-10fe6a297ea0\"\r\n                }\r\n            }\r\n        },\r\n        \"PublicRoute\": {\r\n            \"Type\": \"AWS::EC2::Route\",\r\n            \"Properties\": {\r\n                \"DestinationCidrBlock\": \"0.0.0.0/0\",\r\n                \"RouteTableId\": {\r\n                    \"Ref\": \"PublicRouteTable\"\r\n                },\r\n                \"GatewayId\": {\r\n                    \"Ref\": \"InternetGateway\"\r\n                }\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"93a62438-214b-4c30-906d-c45d73f0a288\"\r\n                }\r\n            },\r\n            \"DependsOn\": [\r\n                \"EC2VPCG4YNHI\"\r\n            ]\r\n        },\r\n        \"EC2SRTA188EJ\": {\r\n            \"Type\": \"AWS::EC2::SubnetRouteTableAssociation\",\r\n            \"Properties\": {\r\n                \"RouteTableId\": {\r\n                    \"Ref\": \"PublicRouteTable\"\r\n                },\r\n                \"SubnetId\": {\r\n                    \"Ref\": \"PublicSubnet\"\r\n                }\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"e9956922-4cfe-4d1a-a4c9-814613d2517e\"\r\n                }\r\n            }\r\n        },\r\n        \"WebServerFleet\": {\r\n            \"Type\": \"AWS::AutoScaling::AutoScalingGroup\",\r\n            \"Properties\": {\r\n                \"MinSize\": \"1\",\r\n                \"MaxSize\": \"10\",\r\n                \"DesiredCapacity\": {\r\n                    \"Ref\": \"WebServerCount\"\r\n                },\r\n                \"VPCZoneIdentifier\": [\r\n                    {\r\n                        \"Ref\": \"PublicSubnet\"\r\n                    }\r\n                ],\r\n                \"LoadBalancerNames\": [\r\n                    {\r\n                        \"Ref\": \"PublicElasticLoadBalancer\"\r\n                    }\r\n                ],\r\n                \"LaunchConfigurationName\": {\r\n                    \"Ref\": \"WebServerLaunchConfig\"\r\n                }\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"e8849c27-1095-4667-906a-6f194c39e5bb\"\r\n                }\r\n            },\r\n            \"DependsOn\": [\r\n                \"PublicRoute\"\r\n            ]\r\n        },\r\n        \"WebServerLaunchConfig\": {\r\n            \"Type\": \"AWS::AutoScaling::LaunchConfiguration\",\r\n            \"Properties\": {\r\n                \"InstanceType\": {\r\n                    \"Ref\": \"InstanceType\"\r\n                },\r\n                \"ImageId\": {\r\n                    \"Fn::FindInMap\": [\r\n                        \"AWSRegionArch2AMI\",\r\n                        {\r\n                            \"Ref\": \"AWS::Region\"\r\n                        },\r\n                        {\r\n                            \"Fn::FindInMap\": [\r\n                                \"AWSInstanceType2Arch\",\r\n                                {\r\n                                    \"Ref\": \"InstanceType\"\r\n                                },\r\n                                \"Arch\"\r\n                            ]\r\n                        }\r\n                    ]\r\n                },\r\n                \"KeyName\": {\r\n                    \"Ref\": \"KeyName\"\r\n                },\r\n                \"AssociatePublicIpAddress\": \"true\",\r\n                \"UserData\": {\r\n                    \"Fn::Base64\": {\r\n                        \"Fn::Join\": [\r\n                            \"\",\r\n                            [\r\n                                \"#!/bin/bash -xe\\n\",\r\n                                \"yum install -y aws-cfn-bootstrap\\n\",\r\n                                \"# Install the files and packages from the metadata\\n\",\r\n                                \"/opt/aws/bin/cfn-init -v \",\r\n                                \"         --stack \",\r\n                                {\r\n                                    \"Ref\": \"AWS::StackName\"\r\n                                },\r\n                                \"         --resource WebServerLaunchConfig \",\r\n                                \"         --configsets All \",\r\n                                \"         --region \",\r\n                                {\r\n                                    \"Ref\": \"AWS::Region\"\r\n                                },\r\n                                \"\\n\",\r\n                                \"#Install Redis\\n\",\r\n                                \"#rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\\n\",\r\n                                \"rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm\\n\",\r\n                                \"yum --enablerepo=remi,remi-test -y install redis\\n\",\r\n                                \"chkconfig --add redis\\n\",\r\n                                \"chkconfig --level 345 redis on\\n\",\r\n                                \"service redis start\\n\",\r\n                                \"# Clone GitHub Repository\\n\",\r\n                                \"git clone -b master https://\",\r\n                                {\r\n                                    \"Ref\": \"GitHubUsername\"\r\n                                },\r\n                                \":\",\r\n                                {\r\n                                    \"Ref\": \"GitHubPassword\"\r\n                                },\r\n                                \"@github.com/TheFoundryVisionmongers/Phonehome.git /var/www/html\\n\",\r\n                                \"# Update the httpd.conf file and restart the web server\\n\",\r\n                                \"mv -f /var/www/html/resources/conf/httpd.conf /etc/httpd/conf/httpd.conf \\n\",\r\n                                \"service httpd restart\\n\",\r\n                                \"# Install Composer\\n\",\r\n                                \"#chmod 755 -R /usr/local/bin\\n\",\r\n                                \"curl -sS https://getcomposer.org/installer > /tmp/installer\\n\",\r\n                                \"COMPOSER_HOME=/usr/local/composer php < /tmp/installer\\n\",\r\n                                \"mv composer.phar /usr/local/bin/composer.phar \\n\",\r\n                                \"groupadd www\\n\",\r\n                                \"usermod -a -G www ec2-user\\n\",\r\n                                \"usermod -a -G www apache\\n\",\r\n                                \"chown -R root:www /var/www\\n\",\r\n                                \"find /var/www -type d -exec chmod 2775 {} +\\n\",\r\n                                \"find /var/www -type f -exec chmod 0664 {} +\\n\",\r\n                                \"COMPOSER_HOME=/usr/local/composer /usr/local/bin/composer.phar install -d /var/www/html --no-plugins --no-scripts\\n\",\r\n                                \"mkdir /var/www/html/storage/framework\\n\",\r\n                                \"mkdir /var/www/html/storage/framework/views\\n\",\r\n                                \"mkdir /var/www/html/storage/framework/sessions\\n\",\r\n                                \"chmod -R 775 /var/www/html/storage\\n\",\r\n                                \"# Signal the status from cfn-init\\n\",\r\n                                \"/opt/aws/bin/cfn-signal -e $? \",\r\n                                \"         --stack \",\r\n                                {\r\n                                    \"Ref\": \"AWS::StackName\"\r\n                                },\r\n                                \"         --resource WebServerFleet \",\r\n                                \"         --region \",\r\n                                {\r\n                                    \"Ref\": \"AWS::Region\"\r\n                                },\r\n                                \"\\n\"\r\n                            ]\r\n                        ]\r\n                    }\r\n                },\r\n                \"SecurityGroups\": [\r\n                    {\r\n                        \"Ref\": \"WebServerSecurityGroup\"\r\n                    }\r\n                ]\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"9eb6713b-7a7f-46a2-8a53-76738c2069e7\"\r\n                },\r\n                \"AWS::CloudFormation::Init\": {\r\n                    \"configSets\": {\r\n                        \"All\": [\r\n                            \"installWebDependencies\"\r\n                        ]\r\n                    },\r\n                    \"installWebDependencies\": {\r\n                        \"packages\": {\r\n                            \"yum\": {\r\n                                \"httpd24\": [],\r\n                                \"php56\": [],\r\n                                \"php56-pdo\": [],\r\n                                \"php56-mbstring\": [],\r\n                                \"php56-mcrypt\": [],\r\n                                \"php-ZendFramework-Db-Adapter-Pdo-Mysql.noarch\": [],\r\n                                \"git\": []\r\n                            }\r\n                        },\r\n                        \"services\": {\r\n                            \"sysvinit\": {\r\n                                \"httpd\": {\r\n                                    \"enabled\": \"true\",\r\n                                    \"ensureRunning\": \"true\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"PublicElasticLoadBalancer\": {\r\n            \"Type\": \"AWS::ElasticLoadBalancing::LoadBalancer\",\r\n            \"Properties\": {\r\n                \"Listeners\": [\r\n                    {\r\n                        \"LoadBalancerPort\": \"80\",\r\n                        \"InstancePort\": \"80\",\r\n                        \"Protocol\": \"HTTP\"\r\n                    }\r\n                ],\r\n                \"HealthCheck\": {\r\n                    \"Target\": \"HTTP:80/\",\r\n                    \"HealthyThreshold\": \"3\",\r\n                    \"UnhealthyThreshold\": \"5\",\r\n                    \"Interval\": \"90\",\r\n                    \"Timeout\": \"60\"\r\n                },\r\n                \"Subnets\": [\r\n                    {\r\n                        \"Ref\": \"PublicSubnet\"\r\n                    }\r\n                ],\r\n                \"SecurityGroups\": [\r\n                    {\r\n                        \"Ref\": \"PublicLoadBalancerSecurityGroup\"\r\n                    }\r\n                ]\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"ee1affdf-e6fe-453f-b754-cf2de003f1d8\"\r\n                }\r\n            }\r\n        },\r\n        \"WebServerSecurityGroup\": {\r\n            \"Type\": \"AWS::EC2::SecurityGroup\",\r\n            \"Properties\": {\r\n                \"GroupDescription\": \"Allow access from load balancer and SSH traffic\",\r\n                \"SecurityGroupIngress\": [\r\n                    {\r\n                        \"IpProtocol\": \"tcp\",\r\n                        \"FromPort\": \"80\",\r\n                        \"ToPort\": \"80\",\r\n                        \"SourceSecurityGroupId\": {\r\n                            \"Ref\": \"PublicLoadBalancerSecurityGroup\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"IpProtocol\": \"tcp\",\r\n                        \"FromPort\": \"22\",\r\n                        \"ToPort\": \"22\",\r\n                        \"CidrIp\": {\r\n                            \"Ref\": \"SSHLocation\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"IpProtocol\": \"tcp\",\r\n                        \"FromPort\": \"80\",\r\n                        \"ToPort\": \"80\",\r\n                        \"CidrIp\": \"31.221.88.186/32\"\r\n                    }\r\n                ],\r\n                \"VpcId\": {\r\n                    \"Ref\": \"VPC\"\r\n                }\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"d4706141-a8d6-4d08-b092-cabedf2d351f\"\r\n                }\r\n            }\r\n        },\r\n        \"AnvilQueue\": {\r\n            \"Type\": \"AWS::SQS::Queue\",\r\n            \"Properties\": {\r\n                \"QueueName\": \"phonehome-incident-anvil\",\r\n                \"DelaySeconds\": 0,\r\n                \"ReceiveMessageWaitTimeSeconds\": 0,\r\n                \"VisibilityTimeout\": 30,\r\n                \"MessageRetentionPeriod\": 1209600\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"f2021951-c570-4233-8ccd-a05be043632c\"\r\n                }\r\n            }\r\n        },\r\n        \"ProcessQueue\": {\r\n            \"Type\": \"AWS::SQS::Queue\",\r\n            \"Properties\": {\r\n                \"QueueName\": \"phonehome-incident-process\",\r\n                \"DelaySeconds\": 0,\r\n                \"ReceiveMessageWaitTimeSeconds\": 0,\r\n                \"VisibilityTimeout\": 30,\r\n                \"MessageRetentionPeriod\": 1209600\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"c892fb7e-40c0-4391-be11-3e005ed16251\"\r\n                }\r\n            }\r\n        },\r\n        \"QueueDepthAlarm\": {\r\n            \"Type\": \"AWS::CloudWatch::Alarm\",\r\n            \"Properties\": {\r\n                \"AlarmDescription\": \"Alarm if queue depth grows beyond 2000 messages\",\r\n                \"Namespace\": \"AWS/SQS\",\r\n                \"MetricName\": \"ApproximateNumberOfMessagesVisible\",\r\n                \"Dimensions\": [\r\n                    {\r\n                        \"Name\": \"AnvilQueue\",\r\n                        \"Value\": {\r\n                            \"Fn::GetAtt\": [\r\n                                \"AnvilQueue\",\r\n                                \"QueueName\"\r\n                            ]\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Name\": \"ProcessQueue\",\r\n                        \"Value\": {\r\n                            \"Fn::GetAtt\": [\r\n                                \"ProcessQueue\",\r\n                                \"QueueName\"\r\n                            ]\r\n                        }\r\n                    }\r\n                ],\r\n                \"Statistic\": \"Sum\",\r\n                \"Period\": \"300\",\r\n                \"EvaluationPeriods\": \"1\",\r\n                \"Threshold\": \"2000\",\r\n                \"ComparisonOperator\": \"GreaterThanThreshold\",\r\n                \"AlarmActions\": [\r\n                    {\r\n                        \"Ref\": \"AlarmTopic\"\r\n                    }\r\n                ],\r\n                \"InsufficientDataActions\": [\r\n                    {\r\n                        \"Ref\": \"AlarmTopic\"\r\n                    }\r\n                ]\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"582ee47a-34d2-4faa-956f-72bbe48b5ca1\"\r\n                }\r\n            }\r\n        },\r\n        \"AlarmTopic\": {\r\n            \"Type\": \"AWS::SNS::Topic\",\r\n            \"Properties\": {\r\n                \"Subscription\": [\r\n                    {\r\n                        \"Endpoint\": {\r\n                            \"Ref\": \"AlarmEmail\"\r\n                        },\r\n                        \"Protocol\": \"email\"\r\n                    }\r\n                ]\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"68ddbe84-8848-4920-8700-df090e65d755\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"Parameters\": {\r\n        \"AlarmEmail\": {\r\n            \"Default\": \"devops-geeks@foundry.com\",\r\n            \"Description\": \"Email address to notify if operational problems arise\",\r\n            \"Type\": \"String\"\r\n        },\r\n        \"InstanceType\": {\r\n            \"Description\": \"WebServer EC2 instance type\",\r\n            \"Type\": \"String\",\r\n            \"Default\": \"t2.micro\",\r\n            \"AllowedValues\": [\r\n                \"t1.micro\",\r\n                \"t2.micro\",\r\n                \"t2.small\",\r\n                \"t2.medium\",\r\n                \"m1.small\",\r\n                \"m1.medium\",\r\n                \"m1.large\"\r\n            ],\r\n            \"ConstraintDescription\": \"must be a valid EC2 instance type.\"\r\n        },\r\n        \"KeyName\": {\r\n            \"Description\": \"Name of an EC2 KeyPair to enable SSH access to the instance.\",\r\n            \"Type\": \"AWS::EC2::KeyPair::KeyName\",\r\n            \"ConstraintDescription\": \"must be the name of an existing EC2 KeyPair.\"\r\n        },\r\n        \"SSHLocation\": {\r\n            \"Description\": \" The IP address range that can be used to access the web server using SSH.\",\r\n            \"Type\": \"String\",\r\n            \"MinLength\": \"9\",\r\n            \"MaxLength\": \"18\",\r\n            \"Default\": \"0.0.0.0/0\",\r\n            \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\",\r\n            \"ConstraintDescription\": \"must be a valid IP CIDR range of the form x.x.x.x/x.\"\r\n        },\r\n        \"WebServerCount\": {\r\n            \"Description\": \"Number of Amazon EC2 instances to launch for the WebServer server\",\r\n            \"Type\": \"Number\",\r\n            \"Default\": \"1\"\r\n        },\r\n        \"GitHubPassword\": {\r\n            \"NoEcho\": \"true\",\r\n            \"Description\": \"GitHub Password\",\r\n            \"Type\": \"String\"\r\n        },\r\n        \"GitHubUsername\": {\r\n            \"Description\": \"GitHub Username \",\r\n            \"Type\": \"String\"\r\n        }\r\n    },\r\n    \"Mappings\": {\r\n        \"AWSInstanceType2Arch\": {\r\n            \"t1.micro\": {\r\n                \"Arch\": \"PV64\"\r\n            },\r\n            \"t2.micro\": {\r\n                \"Arch\": \"HVM64\"\r\n            },\r\n            \"t2.small\": {\r\n                \"Arch\": \"HVM64\"\r\n            },\r\n            \"t2.medium\": {\r\n                \"Arch\": \"HVM64\"\r\n            },\r\n            \"m1.small\": {\r\n                \"Arch\": \"PV64\"\r\n            },\r\n            \"m1.medium\": {\r\n                \"Arch\": \"PV64\"\r\n            },\r\n            \"m1.large\": {\r\n                \"Arch\": \"PV64\"\r\n            }\r\n        },\r\n        \"AWSRegionArch2AMI\": {\r\n            \"eu-west-1\": {\r\n                \"PV64\": \"ami-bf0897c8\",\r\n                \"HVM64\": \"ami-a10897d6\",\r\n                \"HVMG2\": \"ami-d5bc24a2\"\r\n            },\r\n            \"eu-west-2\": {\r\n                \"PV64\": \"ami-896369ed\",\r\n                \"HVM64\": \"ami-896369ed\",\r\n                \"HVMG2\": \"ami-896369ed\"\r\n            },\r\n            \"eu-central-1\": {\r\n                \"PV64\": \"ami-ac221fb1\",\r\n                \"HVM64\": \"ami-a8221fb5\",\r\n                \"HVMG2\": \"ami-7cd2ef61\"\r\n            }\r\n        }\r\n    },\r\n    \"Outputs\": {\r\n        \"URL\": {\r\n            \"Value\": {\r\n                \"Fn::GetAtt\": [\r\n                    \"PublicElasticLoadBalancer\",\r\n                    \"DNSName\"\r\n                ]\r\n            },\r\n            \"Description\": \"Newly created application URL\"\r\n        }\r\n    }\r\n    }\r\n\r\nNote: some of the CF designer code has been excluded to stop stackoverflow complaining the file is too big. \r\nAny ideas what might be causing this issue? ", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "> ValidationError: Stack stackarn is in CREATE_COMPLETE state and cannot be signaled I have looked at other posts regarding this error that have suggested the issue is with the instance id being derived from the first instance or the autoscaling group not having a desired capacity set neither of which is true for me. ", "keywords": ["instance"]}, {"source": "Text", "text": "} }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"9da7a6f1-462f-45c1-bc0c-10fe6a297ea0\" } } }, \"PublicRoute\": { \"Type\": \"AWS::EC2::Route\", \"Properties\": { \"DestinationCidrBlock\": \"0.0.0.0/0\", \"RouteTableId\": { \"Ref\": \"PublicRouteTable\" }, \"GatewayId\": { \"Ref\": \"InternetGateway\" } }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"93a62438-214b-4c30-906d-c45d73f0a288\" } }, \"DependsOn\": [ \"EC2VPCG4YNHI\" ] }, \"EC2SRTA188EJ\": { \"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": { \"RouteTableId\": { \"Ref\": \"PublicRouteTable\" }, \"SubnetId\": { \"Ref\": \"PublicSubnet\" } }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"e9956922-4cfe-4d1a-a4c9-814613d2517e\" } } }, \"WebServerFleet\": { \"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": { \"MinSize\": \"1\", \"MaxSize\": \"10\", \"DesiredCapacity\": { \"Ref\": \"WebServerCount\" }, \"VPCZoneIdentifier\": [ { \"Ref\": \"PublicSubnet\" } ], \"LoadBalancerNames\": [ { \"Ref\": \"PublicElasticLoadBalancer\" } ], \"LaunchConfigurationName\": { \"Ref\": \"WebServerLaunchConfig\" } }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"e8849c27-1095-4667-906a-6f194c39e5bb\" } }, \"DependsOn\": [ \"PublicRoute\" ] }, \"WebServerLaunchConfig\": { \"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": { \"InstanceType\": { \"Ref\": \"InstanceType\" }, \"ImageId\": { \"Fn::FindInMap\": [ \"AWSRegionArch2AMI\", { \"Ref\": \"AWS::Region\" }, { \"Fn::FindInMap\": [ \"AWSInstanceType2Arch\", { \"Ref\": \"InstanceType\" }, \"Arch\" ] } ] }, \"KeyName\": { \"Ref\": \"KeyName\" }, \"AssociatePublicIpAddress\": \"true\", \"UserData\": { \"Fn::Base64\": { \"Fn::Join\": [ \"\", [ \"#!/bin/bash -xe\\n\", \"yum install -y aws-cfn-bootstrap\\n\", \"# Install the files and packages from the metadata\\n\", \"/opt/aws/bin/cfn-init -v \", \" --stack \", { \"Ref\": \"AWS::StackName\" }, \" --resource WebServerLaunchConfig \", \" --configsets All \", \" --region \", { \"Ref\": \"AWS::Region\" }, \"\\n\", \"#Install Redis\\n\", \"#rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\\n\", \"rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm\\n\", \"yum --enablerepo=remi,remi-test -y install redis\\n\", \"chkconfig --add redis\\n\", \"chkconfig --level 345 redis on\\n\", \"service redis start\\n\", \"# Clone GitHub Repository\\n\", \"git clone -b master https://\", { \"Ref\": \"GitHubUsername\" }, \":\", { \"Ref\": \"GitHubPassword\" }, \"@github.com/TheFoundryVisionmongers/Phonehome.git /var/www/html\\n\", \"# Update the httpd.conf file and restart the web server\\n\", \"mv -f /var/www/html/resources/conf/httpd.conf /etc/httpd/conf/httpd.conf \\n\", \"service httpd restart\\n\", \"# Install Composer\\n\", \"#chmod 755 -R /usr/local/bin\\n\", \"curl -sS https://getcomposer.org/installer > /tmp/installer\\n\", \"COMPOSER_HOME=/usr/local/composer php < /tmp/installer\\n\", \"mv composer.phar /usr/local/bin/composer.phar \\n\", \"groupadd www\\n\", \"usermod -a -G www ec2-user\\n\", \"usermod -a -G www apache\\n\", \"chown -R root:www /var/www\\n\", \"find /var/www -type d -exec chmod 2775 {} +\\n\", \"find /var/www -type f -exec chmod 0664 {} +\\n\", \"COMPOSER_HOME=/usr/local/composer /usr/local/bin/composer.phar install -d /var/www/html --no-plugins --no-scripts\\n\", \"mkdir /var/www/html/storage/framework\\n\", \"mkdir /var/www/html/storage/framework/views\\n\", \"mkdir /var/www/html/storage/framework/sessions\\n\", \"chmod -R 775 /var/www/html/storage\\n\", \"# Signal the status from cfn-init\\n\", \"/opt/aws/bin/cfn-signal -e $? \", \" --stack \", { \"Ref\": \"AWS::StackName\" }, \" --resource WebServerFleet \", \" --region \", { \"Ref\": \"AWS::Region\" }, \"\\n\" ] ] } }, \"SecurityGroups\": [ { \"Ref\": \"WebServerSecurityGroup\" } ] }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"9eb6713b-7a7f-46a2-8a53-76738c2069e7\" }, \"AWS::CloudFormation::Init\": { \"configSets\": { \"All\": [ \"installWebDependencies\" ] }, \"installWebDependencies\": { \"packages\": { \"yum\": { \"httpd24\": [], \"php56\": [], \"php56-pdo\": [], \"php56-mbstring\": [], \"php56-mcrypt\": [], \"php-ZendFramework-Db-Adapter-Pdo-Mysql.noarch\": [], \"git\": [] } }, \"services\": { \"sysvinit\": { \"httpd\": { \"enabled\": \"true\", \"ensureRunning\": \"true\" } } } } } } }, \"PublicElasticLoadBalancer\": { \"Type\": \"AWS::ElasticLoadBalancing::LoadBalancer\", \"Properties\": { \"Listeners\": [ { \"LoadBalancerPort\": \"80\", \"InstancePort\": \"80\", \"Protocol\": \"HTTP\" } ], \"HealthCheck\": { \"Target\": \"HTTP:80/\", \"HealthyThreshold\": \"3\", \"UnhealthyThreshold\": \"5\", \"Interval\": \"90\", \"Timeout\": \"60\" }, \"Subnets\": [ { \"Ref\": \"PublicSubnet\" } ], \"SecurityGroups\": [ { \"Ref\": \"PublicLoadBalancerSecurityGroup\" } ] }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"ee1affdf-e6fe-453f-b754-cf2de003f1d8\" } } }, \"WebServerSecurityGroup\": { \"Type\": \"AWS::EC2::SecurityGroup\", \"Properties\": { \"GroupDescription\": \"Allow access from load balancer and SSH traffic\", \"SecurityGroupIngress\": [ { \"IpProtocol\": \"tcp\", \"FromPort\": \"80\", \"ToPort\": \"80\", \"SourceSecurityGroupId\": { \"Ref\": \"PublicLoadBalancerSecurityGroup\" } }, { \"IpProtocol\": \"tcp\", \"FromPort\": \"22\", \"ToPort\": \"22\", \"CidrIp\": { \"Ref\": \"SSHLocation\" } }, { \"IpProtocol\": \"tcp\", \"FromPort\": \"80\", \"ToPort\": \"80\", \"CidrIp\": \"31.221.88.186/32\" } ], \"VpcId\": { \"Ref\": \"VPC\" ", "keywords": ["storage", "test"]}, {"source": "Text", "text": "} }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"d4706141-a8d6-4d08-b092-cabedf2d351f\" } } }, \"AnvilQueue\": { \"Type\": \"AWS::SQS::Queue\", \"Properties\": { \"QueueName\": \"phonehome-incident-anvil\", \"DelaySeconds\": 0, \"ReceiveMessageWaitTimeSeconds\": 0, \"VisibilityTimeout\": 30, \"MessageRetentionPeriod\": 1209600 }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"f2021951-c570-4233-8ccd-a05be043632c\" } } }, \"ProcessQueue\": { \"Type\": \"AWS::SQS::Queue\", \"Properties\": { \"QueueName\": \"phonehome-incident-process\", \"DelaySeconds\": 0, \"ReceiveMessageWaitTimeSeconds\": 0, \"VisibilityTimeout\": 30, \"MessageRetentionPeriod\": 1209600 }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"c892fb7e-40c0-4391-be11-3e005ed16251\" } } }, \"QueueDepthAlarm\": { \"Type\": \"AWS::CloudWatch::Alarm\", \"Properties\": { \"AlarmDescription\": \"Alarm if queue depth grows beyond 2000 messages\", \"Namespace\": \"AWS/SQS\", \"MetricName\": \"ApproximateNumberOfMessagesVisible\", \"Dimensions\": [ { \"Name\": \"AnvilQueue\", \"Value\": { \"Fn::GetAtt\": [ \"AnvilQueue\", \"QueueName\" ] } }, { \"Name\": \"ProcessQueue\", \"Value\": { \"Fn::GetAtt\": [ \"ProcessQueue\", \"QueueName\" ] } } ], \"Statistic\": \"Sum\", \"Period\": \"300\", \"EvaluationPeriods\": \"1\", \"Threshold\": \"2000\", \"ComparisonOperator\": \"GreaterThanThreshold\", \"AlarmActions\": [ { \"Ref\": \"AlarmTopic\" } ], \"InsufficientDataActions\": [ { \"Ref\": \"AlarmTopic\" } ] }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"582ee47a-34d2-4faa-956f-72bbe48b5ca1\" } } }, \"AlarmTopic\": { \"Type\": \"AWS::SNS::Topic\", \"Properties\": { \"Subscription\": [ { \"Endpoint\": { \"Ref\": \"AlarmEmail\" }, \"Protocol\": \"email\" } ] }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"68ddbe84-8848-4920-8700-df090e65d755\" } } } }, \"Parameters\": { \"AlarmEmail\": { \"Default\": \"devops-geeks@foundry.com\", \"Description\": \"Email address to notify if operational problems arise\", \"Type\": \"String\" }, \"InstanceType\": { \"Description\": \"WebServer EC2 instance type\", \"Type\": \"String\", \"Default\": \"t2.micro\", \"AllowedValues\": [ \"t1.micro\", \"t2.micro\", \"t2.small\", \"t2.medium\", \"m1.small\", \"m1.medium\", \"m1.large\" ], \"ConstraintDescription\": \"must be a valid EC2 instance type.\" }, \"KeyName\": { \"Description\": \"Name of an EC2 KeyPair to enable SSH access to the instance.\", \"Type\": \"AWS::EC2::KeyPair::KeyName\", \"ConstraintDescription\": \"must be the name of an existing EC2 KeyPair.\" }, \"SSHLocation\": { \"Description\": \" The IP address range that can be used to access the web server using SSH.\", \"Type\": \"String\", \"MinLength\": \"9\", \"MaxLength\": \"18\", \"Default\": \"0.0.0.0/0\", \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\", \"ConstraintDescription\": \"must be a valid IP CIDR range of the form x.x.x.x/x.\" ", "keywords": ["instance"]}]}, {"Id": "171138037", "PostHistoryTypeId": "1", "PostId": "49802146", "RevisionGUID": "3226d912-53aa-4770-bbe9-eddafe64fb6a", "CreationDate": "2018-04-12T16:54:59.660", "UserId": "6356698", "Text": "Cloudformation ValidationError: Stack (stackname) is in CREATE_COMPLETE state and cannot be signaled", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "171138038", "PostHistoryTypeId": "3", "PostId": "49802146", "RevisionGUID": "3226d912-53aa-4770-bbe9-eddafe64fb6a", "CreationDate": "2018-04-12T16:54:59.660", "UserId": "6356698", "Text": "|aws-cloudformation|", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "171230197", "PostHistoryTypeId": "5", "PostId": "49802146", "RevisionGUID": "96f2a9e0-17b9-4add-997d-1bfb83bbc000", "CreationDate": "2018-04-13T20:18:47.323", "UserId": "6356698", "Comment": "deleted 33 characters in body", "Text": "I have created an aws Cloudformation script and it launches but when i look at the logs its showing the following error: \r\n\r\n> ValidationError: Stack stackarn is in CREATE_COMPLETE state and cannot be signaled\r\n\r\nI have looked at other posts regarding this error that have suggested the issue is with the instance id being derived from the first instance or the autoscaling group not having a desired capacity set neither of which is true for me. \r\n\r\nHere is my cloud formation template\r\n\r\n    {\r\n    \"AWSTemplateFormatVersion\": \"2010-09-09\",\r\n    \"Metadata\": {\r\n        \"AWS::CloudFormation::Designer\": {\r\n            \"90d29d54-61c0-4b64-8f16-bab58c2da737\": {\r\n                \"size\": {\r\n                    \"width\": 510,\r\n                    \"height\": 330\r\n                },\r\n                \"position\": {\r\n                    \"x\": 650,\r\n                    \"y\": 200\r\n                },\r\n                \"z\": 0,\r\n                \"embeds\": [\r\n                    \"9da7a6f1-462f-45c1-bc0c-10fe6a297ea0\",\r\n                    \"791e1b81-a4ed-4b9a-a1b6-e37f92201579\",\r\n                    \"d4706141-a8d6-4d08-b092-cabedf2d351f\",\r\n                    \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\"\r\n                ]\r\n            },\r\n            \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\": {\r\n                \"size\": {\r\n                    \"width\": 250,\r\n                    \"height\": 110\r\n                },\r\n                \"position\": {\r\n                    \"x\": 850,\r\n                    \"y\": 250\r\n                },\r\n                \"z\": 1,\r\n                \"parent\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\",\r\n                \"embeds\": [\r\n                    \"9eb6713b-7a7f-46a2-8a53-76738c2069e7\",\r\n                    \"ee1affdf-e6fe-453f-b754-cf2de003f1d8\",\r\n                    \"e8849c27-1095-4667-906a-6f194c39e5bb\"\r\n                ]\r\n            },\r\n            \"791e1b81-a4ed-4b9a-a1b6-e37f92201579\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 940,\r\n                    \"y\": 450\r\n                },\r\n                \"z\": 1,\r\n                \"parent\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\",\r\n                \"embeds\": []\r\n            },\r\n            \"11d6e6db-f8bf-4162-83f4-3b4cdd3ecd9c\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 280,\r\n                    \"y\": 340\r\n                },\r\n                \"z\": 0,\r\n                \"embeds\": []\r\n            },\r\n            \"75f9474e-7e06-4879-8e2e-42f9063117bf\": {\r\n                \"source\": {\r\n                    \"id\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\"\r\n                },\r\n                \"target\": {\r\n                    \"id\": \"11d6e6db-f8bf-4162-83f4-3b4cdd3ecd9c\"\r\n                },\r\n                \"z\": 0\r\n            },\r\n            \"9da7a6f1-462f-45c1-bc0c-10fe6a297ea0\": {\r\n                \"size\": {\r\n                    \"width\": 120,\r\n                    \"height\": 120\r\n                },\r\n                \"position\": {\r\n                    \"x\": 700,\r\n                    \"y\": 270\r\n                },\r\n                \"z\": 1,\r\n                \"parent\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\",\r\n                \"embeds\": [\r\n                    \"93a62438-214b-4c30-906d-c45d73f0a288\"\r\n                ]\r\n            },\r\n            \"93a62438-214b-4c30-906d-c45d73f0a288\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 730,\r\n                    \"y\": 310\r\n                },\r\n                \"z\": 2,\r\n                \"parent\": \"9da7a6f1-462f-45c1-bc0c-10fe6a297ea0\",\r\n                \"embeds\": [],\r\n                \"isassociatedwith\": [\r\n                    \"11d6e6db-f8bf-4162-83f4-3b4cdd3ecd9c\"\r\n                ]\r\n                \"dependson\": [\r\n                    \"75f9474e-7e06-4879-8e2e-42f9063117bf\"\r\n                ]\r\n            },\r\n            \"e9956922-4cfe-4d1a-a4c9-814613d2517e\": {\r\n                \"source\": {\r\n                    \"id\": \"9da7a6f1-462f-45c1-bc0c-10fe6a297ea0\"\r\n                },\r\n                \"target\": {\r\n                    \"id\": \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\"\r\n                },\r\n                \"z\": 1\r\n            },\r\n            \"e8849c27-1095-4667-906a-6f194c39e5bb\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 870,\r\n                    \"y\": 280\r\n                },\r\n                \"z\": 2,\r\n                \"parent\": \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\",\r\n                \"embeds\": [],\r\n                \"isassociatedwith\": [\r\n                    \"ee1affdf-e6fe-453f-b754-cf2de003f1d8\",\r\n                    \"9eb6713b-7a7f-46a2-8a53-76738c2069e7\"\r\n                ]\r\n                \"dependson\": [\r\n                    \"93a62438-214b-4c30-906d-c45d73f0a288\"\r\n                ]\r\n            },\r\n            \"9eb6713b-7a7f-46a2-8a53-76738c2069e7\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 940,\r\n                    \"y\": 280\r\n                },\r\n                \"z\": 2,\r\n                \"parent\": \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\",\r\n                \"embeds\": [],\r\n                \"isassociatedwith\": [\r\n                    \"d4706141-a8d6-4d08-b092-cabedf2d351f\"\r\n                ]\r\n            },\r\n            \"ee1affdf-e6fe-453f-b754-cf2de003f1d8\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 1020,\r\n                    \"y\": 280\r\n                },\r\n                \"z\": 2,\r\n                \"parent\": \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\",\r\n                \"embeds\": [],\r\n                \"isassociatedwith\": [\r\n                    \"791e1b81-a4ed-4b9a-a1b6-e37f92201579\"\r\n                ]\r\n            },\r\n            \"d4706141-a8d6-4d08-b092-cabedf2d351f\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 802.9767066348955,\r\n                    \"y\": 452.6381721949601\r\n                },\r\n                \"z\": 1,\r\n                \"parent\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\",\r\n                \"embeds\": []\r\n\r\n            },\r\n            \"f2021951-c570-4233-8ccd-a05be043632c\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 1260,\r\n                    \"y\": 210\r\n                },\r\n                \"z\": 0,\r\n                \"embeds\": []\r\n            },\r\n            \"c892fb7e-40c0-4391-be11-3e005ed16251\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 1370,\r\n                    \"y\": 210\r\n                },\r\n                \"z\": 0,\r\n                \"embeds\": []\r\n            },\r\n            \"582ee47a-34d2-4faa-956f-72bbe48b5ca1\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 1260,\r\n                    \"y\": 340\r\n                },\r\n                \"z\": 0,\r\n                \"embeds\": []\r\n            },\r\n            \"68ddbe84-8848-4920-8700-df090e65d755\": {\r\n                \"size\": {\r\n                    \"width\": 60,\r\n                    \"height\": 60\r\n                },\r\n                \"position\": {\r\n                    \"x\": 1370,\r\n                    \"y\": 340\r\n                },\r\n                \"z\": 0,\r\n                \"embeds\": []\r\n            }\r\n        }\r\n    },\r\n    \"Resources\": {\r\n        \"VPC\": {\r\n            \"Type\": \"AWS::EC2::VPC\",\r\n            \"Properties\": {\r\n                \"EnableDnsSupport\": \"true\",\r\n                \"EnableDnsHostnames\": \"true\",\r\n                \"CidrBlock\": \"10.0.0.0/16\"\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"90d29d54-61c0-4b64-8f16-bab58c2da737\"\r\n                }\r\n            }\r\n        },\r\n        \"PublicSubnet\": {\r\n            \"Type\": \"AWS::EC2::Subnet\",\r\n            \"Properties\": {\r\n                \"VpcId\": {\r\n                    \"Ref\": \"VPC\"\r\n                },\r\n                \"CidrBlock\": \"10.0.0.0/24\"\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"25f02a3f-31da-4e2a-8a3b-31cc9c860451\"\r\n                }\r\n            }\r\n        },\r\n        \"PublicLoadBalancerSecurityGroup\": {\r\n            \"Type\": \"AWS::EC2::SecurityGroup\",\r\n            \"Properties\": {\r\n                \"GroupDescription\": \"Public Elastic Load Balancing security group with HTTP access on port 80 from the Internet\",\r\n                \"SecurityGroupIngress\": [\r\n                    {\r\n                        \"IpProtocol\": \"tcp\",\r\n                        \"FromPort\": \"80\",\r\n                        \"ToPort\": \"80\",\r\n                        \"CidrIp\": \"0.0.0.0/0\"\r\n                    }\r\n                ],\r\n                \"SecurityGroupEgress\": [\r\n                    {\r\n                        \"IpProtocol\": \"tcp\",\r\n                        \"FromPort\": \"80\",\r\n                        \"ToPort\": \"80\",\r\n                        \"CidrIp\": \"0.0.0.0/0\"\r\n                    }\r\n                ],\r\n                \"VpcId\": {\r\n                    \"Ref\": \"VPC\"\r\n                }\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"791e1b81-a4ed-4b9a-a1b6-e37f92201579\"\r\n                }\r\n            }\r\n        },\r\n        \"InternetGateway\": {\r\n            \"Type\": \"AWS::EC2::InternetGateway\",\r\n            \"Properties\": {},\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"11d6e6db-f8bf-4162-83f4-3b4cdd3ecd9c\"\r\n                }\r\n            }\r\n        },\r\n        \"EC2VPCG4YNHI\": {\r\n            \"Type\": \"AWS::EC2::VPCGatewayAttachment\",\r\n            \"Properties\": {\r\n                \"VpcId\": {\r\n                    \"Ref\": \"VPC\"\r\n                },\r\n                \"InternetGatewayId\": {\r\n                    \"Ref\": \"InternetGateway\"\r\n                }\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"75f9474e-7e06-4879-8e2e-42f9063117bf\"\r\n                }\r\n            }\r\n        },\r\n        \"PublicRouteTable\": {\r\n            \"Type\": \"AWS::EC2::RouteTable\",\r\n            \"Properties\": {\r\n                \"VpcId\": {\r\n                    \"Ref\": \"VPC\"\r\n                }\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"9da7a6f1-462f-45c1-bc0c-10fe6a297ea0\"\r\n                }\r\n            }\r\n        },\r\n        \"PublicRoute\": {\r\n            \"Type\": \"AWS::EC2::Route\",\r\n            \"Properties\": {\r\n                \"DestinationCidrBlock\": \"0.0.0.0/0\",\r\n                \"RouteTableId\": {\r\n                    \"Ref\": \"PublicRouteTable\"\r\n                },\r\n                \"GatewayId\": {\r\n                    \"Ref\": \"InternetGateway\"\r\n                }\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"93a62438-214b-4c30-906d-c45d73f0a288\"\r\n                }\r\n            },\r\n            \"DependsOn\": [\r\n                \"EC2VPCG4YNHI\"\r\n            ]\r\n        },\r\n        \"EC2SRTA188EJ\": {\r\n            \"Type\": \"AWS::EC2::SubnetRouteTableAssociation\",\r\n            \"Properties\": {\r\n                \"RouteTableId\": {\r\n                    \"Ref\": \"PublicRouteTable\"\r\n                },\r\n                \"SubnetId\": {\r\n                    \"Ref\": \"PublicSubnet\"\r\n                }\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"e9956922-4cfe-4d1a-a4c9-814613d2517e\"\r\n                }\r\n            }\r\n        },\r\n        \"WebServerFleet\": {\r\n            \"Type\": \"AWS::AutoScaling::AutoScalingGroup\",\r\n            \"Properties\": {\r\n                \"MinSize\": \"1\",\r\n                \"MaxSize\": \"10\",\r\n                \"DesiredCapacity\": {\r\n                    \"Ref\": \"WebServerCount\"\r\n                },\r\n                \"VPCZoneIdentifier\": [\r\n                    {\r\n                        \"Ref\": \"PublicSubnet\"\r\n                    }\r\n                ],\r\n                \"LoadBalancerNames\": [\r\n                    {\r\n                        \"Ref\": \"PublicElasticLoadBalancer\"\r\n                    }\r\n                ],\r\n                \"LaunchConfigurationName\": {\r\n                    \"Ref\": \"WebServerLaunchConfig\"\r\n                }\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"e8849c27-1095-4667-906a-6f194c39e5bb\"\r\n                }\r\n            },\r\n            \"DependsOn\": [\r\n                \"PublicRoute\"\r\n            ]\r\n        },\r\n        \"WebServerLaunchConfig\": {\r\n            \"Type\": \"AWS::AutoScaling::LaunchConfiguration\",\r\n            \"Properties\": {\r\n                \"InstanceType\": {\r\n                    \"Ref\": \"InstanceType\"\r\n                },\r\n                \"ImageId\": {\r\n                    \"Fn::FindInMap\": [\r\n                        \"AWSRegionArch2AMI\",\r\n                        {\r\n                            \"Ref\": \"AWS::Region\"\r\n                        },\r\n                        {\r\n                            \"Fn::FindInMap\": [\r\n                                \"AWSInstanceType2Arch\",\r\n                                {\r\n                                    \"Ref\": \"InstanceType\"\r\n                                },\r\n                                \"Arch\"\r\n                            ]\r\n                        }\r\n                    ]\r\n                },\r\n                \"KeyName\": {\r\n                    \"Ref\": \"KeyName\"\r\n                },\r\n                \"AssociatePublicIpAddress\": \"true\",\r\n                \"UserData\": {\r\n                    \"Fn::Base64\": {\r\n                        \"Fn::Join\": [\r\n                            \"\",\r\n                            [\r\n                                \"#!/bin/bash -xe\\n\",\r\n                                \"yum install -y aws-cfn-bootstrap\\n\",\r\n                                \"# Install the files and packages from the metadata\\n\",\r\n                                \"/opt/aws/bin/cfn-init -v \",\r\n                                \"         --stack \",\r\n                                {\r\n                                    \"Ref\": \"AWS::StackName\"\r\n                                },\r\n                                \"         --resource WebServerLaunchConfig \",\r\n                                \"         --configsets All \",\r\n                                \"         --region \",\r\n                                {\r\n                                    \"Ref\": \"AWS::Region\"\r\n                                },\r\n                                \"\\n\",\r\n                                \"#Install Redis\\n\",\r\n                                \"#rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\\n\",\r\n                                \"rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm\\n\",\r\n                                \"yum --enablerepo=remi,remi-test -y install redis\\n\",\r\n                                \"chkconfig --add redis\\n\",\r\n                                \"chkconfig --level 345 redis on\\n\",\r\n                                \"service redis start\\n\",\r\n                                \"# Clone GitHub Repository\\n\",\r\n                                \"git clone -b master https://\",\r\n                                {\r\n                                    \"Ref\": \"GitHubUsername\"\r\n                                },\r\n                                \":\",\r\n                                {\r\n                                    \"Ref\": \"GitHubPassword\"\r\n                                },\r\n                                \"@github.com/repo /var/www/html\\n\",\r\n                                \"# Update the httpd.conf file and restart the web server\\n\",\r\n                                \"mv -f /var/www/html/resources/conf/httpd.conf /etc/httpd/conf/httpd.conf \\n\",\r\n                                \"service httpd restart\\n\",\r\n                                \"# Install Composer\\n\",\r\n                                \"#chmod 755 -R /usr/local/bin\\n\",\r\n                                \"curl -sS https://getcomposer.org/installer > /tmp/installer\\n\",\r\n                                \"COMPOSER_HOME=/usr/local/composer php < /tmp/installer\\n\",\r\n                                \"mv composer.phar /usr/local/bin/composer.phar \\n\",\r\n                                \"groupadd www\\n\",\r\n                                \"usermod -a -G www ec2-user\\n\",\r\n                                \"usermod -a -G www apache\\n\",\r\n                                \"chown -R root:www /var/www\\n\",\r\n                                \"find /var/www -type d -exec chmod 2775 {} +\\n\",\r\n                                \"find /var/www -type f -exec chmod 0664 {} +\\n\",\r\n                                \"COMPOSER_HOME=/usr/local/composer /usr/local/bin/composer.phar install -d /var/www/html --no-plugins --no-scripts\\n\",\r\n                                \"mkdir /var/www/html/storage/framework\\n\",\r\n                                \"mkdir /var/www/html/storage/framework/views\\n\",\r\n                                \"mkdir /var/www/html/storage/framework/sessions\\n\",\r\n                                \"chmod -R 775 /var/www/html/storage\\n\",\r\n                                \"# Signal the status from cfn-init\\n\",\r\n                                \"/opt/aws/bin/cfn-signal -e $? \",\r\n                                \"         --stack \",\r\n                                {\r\n                                    \"Ref\": \"AWS::StackName\"\r\n                                },\r\n                                \"         --resource WebServerFleet \",\r\n                                \"         --region \",\r\n                                {\r\n                                    \"Ref\": \"AWS::Region\"\r\n                                },\r\n                                \"\\n\"\r\n                            ]\r\n                        ]\r\n                    }\r\n                },\r\n                \"SecurityGroups\": [\r\n                    {\r\n                        \"Ref\": \"WebServerSecurityGroup\"\r\n                    }\r\n                ]\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"9eb6713b-7a7f-46a2-8a53-76738c2069e7\"\r\n                },\r\n                \"AWS::CloudFormation::Init\": {\r\n                    \"configSets\": {\r\n                        \"All\": [\r\n                            \"installWebDependencies\"\r\n                        ]\r\n                    },\r\n                    \"installWebDependencies\": {\r\n                        \"packages\": {\r\n                            \"yum\": {\r\n                                \"httpd24\": [],\r\n                                \"php56\": [],\r\n                                \"php56-pdo\": [],\r\n                                \"php56-mbstring\": [],\r\n                                \"php56-mcrypt\": [],\r\n                                \"php-ZendFramework-Db-Adapter-Pdo-Mysql.noarch\": [],\r\n                                \"git\": []\r\n                            }\r\n                        },\r\n                        \"services\": {\r\n                            \"sysvinit\": {\r\n                                \"httpd\": {\r\n                                    \"enabled\": \"true\",\r\n                                    \"ensureRunning\": \"true\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"PublicElasticLoadBalancer\": {\r\n            \"Type\": \"AWS::ElasticLoadBalancing::LoadBalancer\",\r\n            \"Properties\": {\r\n                \"Listeners\": [\r\n                    {\r\n                        \"LoadBalancerPort\": \"80\",\r\n                        \"InstancePort\": \"80\",\r\n                        \"Protocol\": \"HTTP\"\r\n                    }\r\n                ],\r\n                \"HealthCheck\": {\r\n                    \"Target\": \"HTTP:80/\",\r\n                    \"HealthyThreshold\": \"3\",\r\n                    \"UnhealthyThreshold\": \"5\",\r\n                    \"Interval\": \"90\",\r\n                    \"Timeout\": \"60\"\r\n                },\r\n                \"Subnets\": [\r\n                    {\r\n                        \"Ref\": \"PublicSubnet\"\r\n                    }\r\n                ],\r\n                \"SecurityGroups\": [\r\n                    {\r\n                        \"Ref\": \"PublicLoadBalancerSecurityGroup\"\r\n                    }\r\n                ]\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"ee1affdf-e6fe-453f-b754-cf2de003f1d8\"\r\n                }\r\n            }\r\n        },\r\n        \"WebServerSecurityGroup\": {\r\n            \"Type\": \"AWS::EC2::SecurityGroup\",\r\n            \"Properties\": {\r\n                \"GroupDescription\": \"Allow access from load balancer and SSH traffic\",\r\n                \"SecurityGroupIngress\": [\r\n                    {\r\n                        \"IpProtocol\": \"tcp\",\r\n                        \"FromPort\": \"80\",\r\n                        \"ToPort\": \"80\",\r\n                        \"SourceSecurityGroupId\": {\r\n                            \"Ref\": \"PublicLoadBalancerSecurityGroup\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"IpProtocol\": \"tcp\",\r\n                        \"FromPort\": \"22\",\r\n                        \"ToPort\": \"22\",\r\n                        \"CidrIp\": {\r\n                            \"Ref\": \"SSHLocation\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"IpProtocol\": \"tcp\",\r\n                        \"FromPort\": \"80\",\r\n                        \"ToPort\": \"80\",\r\n                        \"CidrIp\": \"31.221.88.186/32\"\r\n                    }\r\n                ],\r\n                \"VpcId\": {\r\n                    \"Ref\": \"VPC\"\r\n                }\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"d4706141-a8d6-4d08-b092-cabedf2d351f\"\r\n                }\r\n            }\r\n        },\r\n        \"AnvilQueue\": {\r\n            \"Type\": \"AWS::SQS::Queue\",\r\n            \"Properties\": {\r\n                \"QueueName\": \"phonehome-incident-anvil\",\r\n                \"DelaySeconds\": 0,\r\n                \"ReceiveMessageWaitTimeSeconds\": 0,\r\n                \"VisibilityTimeout\": 30,\r\n                \"MessageRetentionPeriod\": 1209600\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"f2021951-c570-4233-8ccd-a05be043632c\"\r\n                }\r\n            }\r\n        },\r\n        \"ProcessQueue\": {\r\n            \"Type\": \"AWS::SQS::Queue\",\r\n            \"Properties\": {\r\n                \"QueueName\": \"phonehome-incident-process\",\r\n                \"DelaySeconds\": 0,\r\n                \"ReceiveMessageWaitTimeSeconds\": 0,\r\n                \"VisibilityTimeout\": 30,\r\n                \"MessageRetentionPeriod\": 1209600\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"c892fb7e-40c0-4391-be11-3e005ed16251\"\r\n                }\r\n            }\r\n        },\r\n        \"QueueDepthAlarm\": {\r\n            \"Type\": \"AWS::CloudWatch::Alarm\",\r\n            \"Properties\": {\r\n                \"AlarmDescription\": \"Alarm if queue depth grows beyond 2000 messages\",\r\n                \"Namespace\": \"AWS/SQS\",\r\n                \"MetricName\": \"ApproximateNumberOfMessagesVisible\",\r\n                \"Dimensions\": [\r\n                    {\r\n                        \"Name\": \"AnvilQueue\",\r\n                        \"Value\": {\r\n                            \"Fn::GetAtt\": [\r\n                                \"AnvilQueue\",\r\n                                \"QueueName\"\r\n                            ]\r\n                        }\r\n                    },\r\n                    {\r\n                        \"Name\": \"ProcessQueue\",\r\n                        \"Value\": {\r\n                            \"Fn::GetAtt\": [\r\n                                \"ProcessQueue\",\r\n                                \"QueueName\"\r\n                            ]\r\n                        }\r\n                    }\r\n                ],\r\n                \"Statistic\": \"Sum\",\r\n                \"Period\": \"300\",\r\n                \"EvaluationPeriods\": \"1\",\r\n                \"Threshold\": \"2000\",\r\n                \"ComparisonOperator\": \"GreaterThanThreshold\",\r\n                \"AlarmActions\": [\r\n                    {\r\n                        \"Ref\": \"AlarmTopic\"\r\n                    }\r\n                ],\r\n                \"InsufficientDataActions\": [\r\n                    {\r\n                        \"Ref\": \"AlarmTopic\"\r\n                    }\r\n                ]\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"582ee47a-34d2-4faa-956f-72bbe48b5ca1\"\r\n                }\r\n            }\r\n        },\r\n        \"AlarmTopic\": {\r\n            \"Type\": \"AWS::SNS::Topic\",\r\n            \"Properties\": {\r\n                \"Subscription\": [\r\n                    {\r\n                        \"Endpoint\": {\r\n                            \"Ref\": \"AlarmEmail\"\r\n                        },\r\n                        \"Protocol\": \"email\"\r\n                    }\r\n                ]\r\n            },\r\n            \"Metadata\": {\r\n                \"AWS::CloudFormation::Designer\": {\r\n                    \"id\": \"68ddbe84-8848-4920-8700-df090e65d755\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"Parameters\": {\r\n        \"AlarmEmail\": {\r\n            \"Default\": \"devops-geeks@foundry.com\",\r\n            \"Description\": \"Email address to notify if operational problems arise\",\r\n            \"Type\": \"String\"\r\n        },\r\n        \"InstanceType\": {\r\n            \"Description\": \"WebServer EC2 instance type\",\r\n            \"Type\": \"String\",\r\n            \"Default\": \"t2.micro\",\r\n            \"AllowedValues\": [\r\n                \"t1.micro\",\r\n                \"t2.micro\",\r\n                \"t2.small\",\r\n                \"t2.medium\",\r\n                \"m1.small\",\r\n                \"m1.medium\",\r\n                \"m1.large\"\r\n            ],\r\n            \"ConstraintDescription\": \"must be a valid EC2 instance type.\"\r\n        },\r\n        \"KeyName\": {\r\n            \"Description\": \"Name of an EC2 KeyPair to enable SSH access to the instance.\",\r\n            \"Type\": \"AWS::EC2::KeyPair::KeyName\",\r\n            \"ConstraintDescription\": \"must be the name of an existing EC2 KeyPair.\"\r\n        },\r\n        \"SSHLocation\": {\r\n            \"Description\": \" The IP address range that can be used to access the web server using SSH.\",\r\n            \"Type\": \"String\",\r\n            \"MinLength\": \"9\",\r\n            \"MaxLength\": \"18\",\r\n            \"Default\": \"0.0.0.0/0\",\r\n            \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\",\r\n            \"ConstraintDescription\": \"must be a valid IP CIDR range of the form x.x.x.x/x.\"\r\n        },\r\n        \"WebServerCount\": {\r\n            \"Description\": \"Number of Amazon EC2 instances to launch for the WebServer server\",\r\n            \"Type\": \"Number\",\r\n            \"Default\": \"1\"\r\n        },\r\n        \"GitHubPassword\": {\r\n            \"NoEcho\": \"true\",\r\n            \"Description\": \"GitHub Password\",\r\n            \"Type\": \"String\"\r\n        },\r\n        \"GitHubUsername\": {\r\n            \"Description\": \"GitHub Username \",\r\n            \"Type\": \"String\"\r\n        }\r\n    },\r\n    \"Mappings\": {\r\n        \"AWSInstanceType2Arch\": {\r\n            \"t1.micro\": {\r\n                \"Arch\": \"PV64\"\r\n            },\r\n            \"t2.micro\": {\r\n                \"Arch\": \"HVM64\"\r\n            },\r\n            \"t2.small\": {\r\n                \"Arch\": \"HVM64\"\r\n            },\r\n            \"t2.medium\": {\r\n                \"Arch\": \"HVM64\"\r\n            },\r\n            \"m1.small\": {\r\n                \"Arch\": \"PV64\"\r\n            },\r\n            \"m1.medium\": {\r\n                \"Arch\": \"PV64\"\r\n            },\r\n            \"m1.large\": {\r\n                \"Arch\": \"PV64\"\r\n            }\r\n        },\r\n        \"AWSRegionArch2AMI\": {\r\n            \"eu-west-1\": {\r\n                \"PV64\": \"ami-bf0897c8\",\r\n                \"HVM64\": \"ami-a10897d6\",\r\n                \"HVMG2\": \"ami-d5bc24a2\"\r\n            },\r\n            \"eu-west-2\": {\r\n                \"PV64\": \"ami-896369ed\",\r\n                \"HVM64\": \"ami-896369ed\",\r\n                \"HVMG2\": \"ami-896369ed\"\r\n            },\r\n            \"eu-central-1\": {\r\n                \"PV64\": \"ami-ac221fb1\",\r\n                \"HVM64\": \"ami-a8221fb5\",\r\n                \"HVMG2\": \"ami-7cd2ef61\"\r\n            }\r\n        }\r\n    },\r\n    \"Outputs\": {\r\n        \"URL\": {\r\n            \"Value\": {\r\n                \"Fn::GetAtt\": [\r\n                    \"PublicElasticLoadBalancer\",\r\n                    \"DNSName\"\r\n                ]\r\n            },\r\n            \"Description\": \"Newly created application URL\"\r\n        }\r\n    }\r\n    }\r\n\r\nNote: some of the CF designer code has been excluded to stop stackoverflow complaining the file is too big. \r\nAny ideas what might be causing this issue? ", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "> ValidationError: Stack stackarn is in CREATE_COMPLETE state and cannot be signaled I have looked at other posts regarding this error that have suggested the issue is with the instance id being derived from the first instance or the autoscaling group not having a desired capacity set neither of which is true for me. ", "keywords": ["instance"]}, {"source": "Text", "text": "} }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"9da7a6f1-462f-45c1-bc0c-10fe6a297ea0\" } } }, \"PublicRoute\": { \"Type\": \"AWS::EC2::Route\", \"Properties\": { \"DestinationCidrBlock\": \"0.0.0.0/0\", \"RouteTableId\": { \"Ref\": \"PublicRouteTable\" }, \"GatewayId\": { \"Ref\": \"InternetGateway\" } }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"93a62438-214b-4c30-906d-c45d73f0a288\" } }, \"DependsOn\": [ \"EC2VPCG4YNHI\" ] }, \"EC2SRTA188EJ\": { \"Type\": \"AWS::EC2::SubnetRouteTableAssociation\", \"Properties\": { \"RouteTableId\": { \"Ref\": \"PublicRouteTable\" }, \"SubnetId\": { \"Ref\": \"PublicSubnet\" } }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"e9956922-4cfe-4d1a-a4c9-814613d2517e\" } } }, \"WebServerFleet\": { \"Type\": \"AWS::AutoScaling::AutoScalingGroup\", \"Properties\": { \"MinSize\": \"1\", \"MaxSize\": \"10\", \"DesiredCapacity\": { \"Ref\": \"WebServerCount\" }, \"VPCZoneIdentifier\": [ { \"Ref\": \"PublicSubnet\" } ], \"LoadBalancerNames\": [ { \"Ref\": \"PublicElasticLoadBalancer\" } ], \"LaunchConfigurationName\": { \"Ref\": \"WebServerLaunchConfig\" } }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"e8849c27-1095-4667-906a-6f194c39e5bb\" } }, \"DependsOn\": [ \"PublicRoute\" ] }, \"WebServerLaunchConfig\": { \"Type\": \"AWS::AutoScaling::LaunchConfiguration\", \"Properties\": { \"InstanceType\": { \"Ref\": \"InstanceType\" }, \"ImageId\": { \"Fn::FindInMap\": [ \"AWSRegionArch2AMI\", { \"Ref\": \"AWS::Region\" }, { \"Fn::FindInMap\": [ \"AWSInstanceType2Arch\", { \"Ref\": \"InstanceType\" }, \"Arch\" ] } ] }, \"KeyName\": { \"Ref\": \"KeyName\" }, \"AssociatePublicIpAddress\": \"true\", \"UserData\": { \"Fn::Base64\": { \"Fn::Join\": [ \"\", [ \"#!/bin/bash -xe\\n\", \"yum install -y aws-cfn-bootstrap\\n\", \"# Install the files and packages from the metadata\\n\", \"/opt/aws/bin/cfn-init -v \", \" --stack \", { \"Ref\": \"AWS::StackName\" }, \" --resource WebServerLaunchConfig \", \" --configsets All \", \" --region \", { \"Ref\": \"AWS::Region\" }, \"\\n\", \"#Install Redis\\n\", \"#rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\\n\", \"rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm\\n\", \"yum --enablerepo=remi,remi-test -y install redis\\n\", \"chkconfig --add redis\\n\", \"chkconfig --level 345 redis on\\n\", \"service redis start\\n\", \"# Clone GitHub Repository\\n\", \"git clone -b master https://\", { \"Ref\": \"GitHubUsername\" }, \":\", { \"Ref\": \"GitHubPassword\" }, \"@github.com/repo /var/www/html\\n\", \"# Update the httpd.conf file and restart the web server\\n\", \"mv -f /var/www/html/resources/conf/httpd.conf /etc/httpd/conf/httpd.conf \\n\", \"service httpd restart\\n\", \"# Install Composer\\n\", \"#chmod 755 -R /usr/local/bin\\n\", \"curl -sS https://getcomposer.org/installer > /tmp/installer\\n\", \"COMPOSER_HOME=/usr/local/composer php < /tmp/installer\\n\", \"mv composer.phar /usr/local/bin/composer.phar \\n\", \"groupadd www\\n\", \"usermod -a -G www ec2-user\\n\", \"usermod -a -G www apache\\n\", \"chown -R root:www /var/www\\n\", \"find /var/www -type d -exec chmod 2775 {} +\\n\", \"find /var/www -type f -exec chmod 0664 {} +\\n\", \"COMPOSER_HOME=/usr/local/composer /usr/local/bin/composer.phar install -d /var/www/html --no-plugins --no-scripts\\n\", \"mkdir /var/www/html/storage/framework\\n\", \"mkdir /var/www/html/storage/framework/views\\n\", \"mkdir /var/www/html/storage/framework/sessions\\n\", \"chmod -R 775 /var/www/html/storage\\n\", \"# Signal the status from cfn-init\\n\", \"/opt/aws/bin/cfn-signal -e $? \", \" --stack \", { \"Ref\": \"AWS::StackName\" }, \" --resource WebServerFleet \", \" --region \", { \"Ref\": \"AWS::Region\" }, \"\\n\" ] ] } }, \"SecurityGroups\": [ { \"Ref\": \"WebServerSecurityGroup\" } ] }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"9eb6713b-7a7f-46a2-8a53-76738c2069e7\" ", "keywords": ["storage", "test"]}, {"source": "Text", "text": "} } }, \"AnvilQueue\": { \"Type\": \"AWS::SQS::Queue\", \"Properties\": { \"QueueName\": \"phonehome-incident-anvil\", \"DelaySeconds\": 0, \"ReceiveMessageWaitTimeSeconds\": 0, \"VisibilityTimeout\": 30, \"MessageRetentionPeriod\": 1209600 }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"f2021951-c570-4233-8ccd-a05be043632c\" } } }, \"ProcessQueue\": { \"Type\": \"AWS::SQS::Queue\", \"Properties\": { \"QueueName\": \"phonehome-incident-process\", \"DelaySeconds\": 0, \"ReceiveMessageWaitTimeSeconds\": 0, \"VisibilityTimeout\": 30, \"MessageRetentionPeriod\": 1209600 }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"c892fb7e-40c0-4391-be11-3e005ed16251\" } } }, \"QueueDepthAlarm\": { \"Type\": \"AWS::CloudWatch::Alarm\", \"Properties\": { \"AlarmDescription\": \"Alarm if queue depth grows beyond 2000 messages\", \"Namespace\": \"AWS/SQS\", \"MetricName\": \"ApproximateNumberOfMessagesVisible\", \"Dimensions\": [ { \"Name\": \"AnvilQueue\", \"Value\": { \"Fn::GetAtt\": [ \"AnvilQueue\", \"QueueName\" ] } }, { \"Name\": \"ProcessQueue\", \"Value\": { \"Fn::GetAtt\": [ \"ProcessQueue\", \"QueueName\" ] } } ], \"Statistic\": \"Sum\", \"Period\": \"300\", \"EvaluationPeriods\": \"1\", \"Threshold\": \"2000\", \"ComparisonOperator\": \"GreaterThanThreshold\", \"AlarmActions\": [ { \"Ref\": \"AlarmTopic\" } ], \"InsufficientDataActions\": [ { \"Ref\": \"AlarmTopic\" } ] }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"582ee47a-34d2-4faa-956f-72bbe48b5ca1\" } } }, \"AlarmTopic\": { \"Type\": \"AWS::SNS::Topic\", \"Properties\": { \"Subscription\": [ { \"Endpoint\": { \"Ref\": \"AlarmEmail\" }, \"Protocol\": \"email\" } ] }, \"Metadata\": { \"AWS::CloudFormation::Designer\": { \"id\": \"68ddbe84-8848-4920-8700-df090e65d755\" } } } }, \"Parameters\": { \"AlarmEmail\": { \"Default\": \"devops-geeks@foundry.com\", \"Description\": \"Email address to notify if operational problems arise\", \"Type\": \"String\" }, \"InstanceType\": { \"Description\": \"WebServer EC2 instance type\", \"Type\": \"String\", \"Default\": \"t2.micro\", \"AllowedValues\": [ \"t1.micro\", \"t2.micro\", \"t2.small\", \"t2.medium\", \"m1.small\", \"m1.medium\", \"m1.large\" ], \"ConstraintDescription\": \"must be a valid EC2 instance type.\" }, \"KeyName\": { \"Description\": \"Name of an EC2 KeyPair to enable SSH access to the instance.\", \"Type\": \"AWS::EC2::KeyPair::KeyName\", \"ConstraintDescription\": \"must be the name of an existing EC2 KeyPair.\" }, \"SSHLocation\": { \"Description\": \" The IP address range that can be used to access the web server using SSH.\", \"Type\": \"String\", \"MinLength\": \"9\", \"MaxLength\": \"18\", \"Default\": \"0.0.0.0/0\", \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\", \"ConstraintDescription\": \"must be a valid IP CIDR range of the form x.x.x.x/x.\" ", "keywords": ["instance"]}]}], "answers": [{"Id": "51894420", "PostTypeId": "2", "ParentId": "49802146", "CreationDate": "2018-08-17T11:27:08.960", "Score": "3", "Body": "<p>I was having the same issue , CF stack was already reached to CREATE_COMPLETE so cfn-signal was of no use. Attached the CreationPolicy on EC2 resource to tell CloudFormation to wait for 1 success signal within 5 minutes before proceeding with stack creation and marking it CREATE_COMPLETE. So using cfn-signal along with CreationPolicy solved the issue. Below is the stack template</p>\n\n<pre><code>{\n    \"AWSTemplateFormatVersion\" : \"2010-09-09\",\n\n    \"Description\" : \"AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create an Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based on the region in which the stack is run. This example creates an EC2 security group for the instance to give you SSH access. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.\",\n\n    \"Parameters\" : {\n      \"KeyName\": {\n        \"Description\" : \"Name of an existing EC2 KeyPair to enable SSH access to the instance\",\n        \"Type\": \"AWS::EC2::KeyPair::KeyName\",\n        \"ConstraintDescription\" : \"Must be the name of an existing EC2 KeyPair.\"\n      },\n\n      \"InstanceType\" : {\n        \"Description\" : \"WebServer EC2 instance type\",\n        \"Type\" : \"String\",\n        \"Default\" : \"t2.micro\",\n        \"AllowedValues\" : [ \"t1.micro\", \"t2.nano\", \"t2.micro\", \"t2.small\", \"t2.medium\", \"t2.large\", \"m1.small\", \"m1.medium\",\n                            \"m1.large\", \"m1.xlarge\", \"m2.xlarge\", \"m2.2xlarge\", \"m2.4xlarge\", \"m3.medium\", \"m3.large\", \"m3.xlarge\", \n                            \"m3.2xlarge\", \"m4.large\", \"m4.xlarge\", \"m4.2xlarge\", \"m4.4xlarge\", \"m4.10xlarge\", \"c1.medium\", \"c1.xlarge\", \n                            \"c3.large\", \"c3.xlarge\", \"c3.2xlarge\", \"c3.4xlarge\", \"c3.8xlarge\", \"c4.large\", \"c4.xlarge\", \"c4.2xlarge\", \"c4.4xlarge\",\n                            \"c4.8xlarge\", \"g2.2xlarge\", \"g2.8xlarge\", \"r3.large\", \"r3.xlarge\", \"r3.2xlarge\", \"r3.4xlarge\", \"r3.8xlarge\", \"i2.xlarge\",\n                            \"i2.2xlarge\", \"i2.4xlarge\", \"i2.8xlarge\", \"d2.xlarge\", \"d2.2xlarge\", \"d2.4xlarge\", \"d2.8xlarge\"]\n  ,\n        \"ConstraintDescription\" : \"Must be a valid EC2 instance type.\"\n      },\n\n      \"SSHLocation\" : {\n        \"Description\" : \"The IP address range that can be used to SSH to the EC2 instances\",\n        \"Type\": \"String\",\n        \"MinLength\": \"9\",\n        \"MaxLength\": \"18\",\n        \"Default\": \"0.0.0.0/0\",\n        \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\",\n        \"ConstraintDescription\": \"Must be a valid IP CIDR range of the form x.x.x.x/x.\"\n     }\n    },\n\n    \"Mappings\" : {\n      \"AWSInstanceType2Arch\" : {\n        \"t1.micro\"    : { \"Arch\" : \"PV64\"   }, \"t2.nano\"     : { \"Arch\" : \"HVM64\"  }, \"t2.micro\"    : { \"Arch\" : \"HVM64\"  },\n        \"t2.small\"    : { \"Arch\" : \"HVM64\"  }, \"t2.medium\"   : { \"Arch\" : \"HVM64\"  }, \"t2.large\"    : { \"Arch\" : \"HVM64\"  },\n        \"m1.small\"    : { \"Arch\" : \"PV64\"   }, \"m1.medium\"   : { \"Arch\" : \"PV64\"   }, \"m1.large\"    : { \"Arch\" : \"PV64\"   },\n        \"m1.xlarge\"   : { \"Arch\" : \"PV64\"   }, \"m2.xlarge\"   : { \"Arch\" : \"PV64\"   }, \"m2.2xlarge\"  : { \"Arch\" : \"PV64\"   },\n        \"m2.4xlarge\"  : { \"Arch\" : \"PV64\"   }, \"m3.medium\"   : { \"Arch\" : \"HVM64\"  }, \"m3.large\"    : { \"Arch\" : \"HVM64\"  },\n        \"m3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"m3.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"m4.large\"    : { \"Arch\" : \"HVM64\"  },\n        \"m4.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"m4.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"m4.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"m4.10xlarge\" : { \"Arch\" : \"HVM64\"  }, \"c1.medium\"   : { \"Arch\" : \"PV64\"   }, \"c1.xlarge\"   : { \"Arch\" : \"PV64\"   },\n        \"c3.large\"    : { \"Arch\" : \"HVM64\"  }, \"c3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"c3.2xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"c3.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c3.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c4.large\"    : { \"Arch\" : \"HVM64\"  },\n        \"c4.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"c4.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c4.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"c4.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"g2.2xlarge\"  : { \"Arch\" : \"HVMG2\"  }, \"g2.8xlarge\"  : { \"Arch\" : \"HVMG2\"  },\n        \"r3.large\"    : { \"Arch\" : \"HVM64\"  }, \"r3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"r3.2xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"r3.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"r3.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.xlarge\"   : { \"Arch\" : \"HVM64\"  },\n        \"i2.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.8xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"d2.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"d2.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"d2.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\n        \"d2.8xlarge\"  : { \"Arch\" : \"HVM64\"  }\n      }\n  ,\n      \"AWSRegionArch2AMI\" : {\n        \"us-east-1\"        : {\"PV64\" : \"ami-2a69aa47\", \"HVM64\" : \"ami-97785bed\", \"HVMG2\" : \"ami-0a6e3770\"},\n        \"us-west-2\"        : {\"PV64\" : \"ami-7f77b31f\", \"HVM64\" : \"ami-f2d3638a\", \"HVMG2\" : \"ami-ee15a196\"},\n        \"us-west-1\"        : {\"PV64\" : \"ami-a2490dc2\", \"HVM64\" : \"ami-824c4ee2\", \"HVMG2\" : \"ami-0da4a46d\"},\n        \"eu-west-1\"        : {\"PV64\" : \"ami-4cdd453f\", \"HVM64\" : \"ami-d834aba1\", \"HVMG2\" : \"ami-af8013d6\"},\n        \"eu-west-2\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-403e2524\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"eu-west-3\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-8ee056f3\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"eu-central-1\"     : {\"PV64\" : \"ami-6527cf0a\", \"HVM64\" : \"ami-5652ce39\", \"HVMG2\" : \"ami-1d58ca72\"},\n        \"ap-northeast-1\"   : {\"PV64\" : \"ami-3e42b65f\", \"HVM64\" : \"ami-ceafcba8\", \"HVMG2\" : \"ami-edfd658b\"},\n        \"ap-northeast-2\"   : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-863090e8\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"ap-northeast-3\"   : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-83444afe\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"ap-southeast-1\"   : {\"PV64\" : \"ami-df9e4cbc\", \"HVM64\" : \"ami-68097514\", \"HVMG2\" : \"ami-c06013bc\"},\n        \"ap-southeast-2\"   : {\"PV64\" : \"ami-63351d00\", \"HVM64\" : \"ami-942dd1f6\", \"HVMG2\" : \"ami-85ef12e7\"},\n        \"ap-south-1\"       : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-531a4c3c\", \"HVMG2\" : \"ami-411e492e\"},\n        \"us-east-2\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-f63b1193\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"ca-central-1\"     : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-a954d1cd\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"sa-east-1\"        : {\"PV64\" : \"ami-1ad34676\", \"HVM64\" : \"ami-84175ae8\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"cn-north-1\"       : {\"PV64\" : \"ami-77559f1a\", \"HVM64\" : \"ami-cb19c4a6\", \"HVMG2\" : \"NOT_SUPPORTED\"},\n        \"cn-northwest-1\"   : {\"PV64\" : \"ami-80707be2\", \"HVM64\" : \"ami-3e60745c\", \"HVMG2\" : \"NOT_SUPPORTED\"}\n      }\n\n    },\n\n    \"Resources\" : {\n      \"EC2Instance\" : {\n        \"Type\" : \"AWS::EC2::Instance\",\n        \"Metadata\" : {\n          \"AWS::CloudFormation::Init\" : {\n              \"configSets\" : {\n                  \"InstallAndRun\" : [ \"config1\", \"config2\" ]\n              },\n              \"config1\" : {\n                  \"packages\" : {\n                      \"yum\" : {\n                          \"httpd\" : []\n                      }\n                  },\n                  \"files\" : {\n                      \"/var/www/html/index.html\" : {\n                          \"mode\" : \"000644\", \n                          \"owner\" : \"apache\", \n                          \"group\" : \"apache\",\n                          \"source\" : \"https://s3.amazonaws.com/pcr-docs/index.html\"\n                      }\n                  }\n              },\n              \"config2\" : {\n                  \"services\" : {\n                      \"sysvinit\" : {\n                          \"httpd\" : {\n                              \"enabled\" : \"true\",\n                              \"ensureRunning\" : \"true\",\n                              \"packages\" : { \"yum\" : [\"httpd\"] }\n                          }\n                      }\n                  }\n              }\n          }\n      },\n        \"Properties\" : {\n          \"InstanceType\" : { \"Ref\" : \"InstanceType\" },\n          \"SecurityGroups\" : [ { \"Ref\" : \"InstanceSecurityGroup\" } ],\n          \"KeyName\" : { \"Ref\" : \"KeyName\" },\n          \"ImageId\" : { \"Fn::FindInMap\" : [ \"AWSRegionArch2AMI\", { \"Ref\" : \"AWS::Region\" },\n                            { \"Fn::FindInMap\" : [ \"AWSInstanceType2Arch\", { \"Ref\" : \"InstanceType\" }, \"Arch\" ] } ] },\n          \"UserData\" : { \"Fn::Base64\" :\n                              { \"Fn::Join\" : [\"\", [\n                                 \"#!/bin/bash -xe\\n\",\n                                 \"yum update -y aws-cfn-bootstrap\\n\",\n                                 \"# Install the files and packages from the metadata\\n\",\n                                 \"/opt/aws/bin/cfn-init -v \",\n                                 \"         --stack \", { \"Ref\" : \"AWS::StackName\" },\n                                 \"         --resource EC2Instance \",\n                                 \"         --configsets InstallAndRun \",\n                                 \"         --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\",\n                                 \"# Signal the status from cfn-init\\n\",\n                                 \"/opt/aws/bin/cfn-signal -e $? \",\n                                 \"         --stack \", { \"Ref\" : \"AWS::StackName\" },\n                                 \"         --resource EC2Instance \",\n                                 \"         --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\"\n                              ]]}\n                      }                  \n        },\n        \"CreationPolicy\": {\n          \"ResourceSignal\": {\n            \"Count\": \"1\",\n            \"Timeout\": \"PT5M\"\n          }\n        }\n      },\n\n      \"InstanceSecurityGroup\" : {\n        \"Type\" : \"AWS::EC2::SecurityGroup\",\n        \"Properties\" : {\n          \"GroupDescription\" : \"Enable SSH access via port 22\",\n          \"SecurityGroupIngress\" : [ \n            { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"22\", \"ToPort\" : \"22\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} },\n            { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"80\", \"ToPort\" : \"80\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} }\n           ]\n        }\n      }\n    },\n\n    \"Outputs\" : {\n      \"InstanceId\" : {\n        \"Description\" : \"InstanceId of the newly created EC2 instance\",\n        \"Value\" : { \"Ref\" : \"EC2Instance\" }\n      },\n      \"AZ\" : {\n        \"Description\" : \"Availability Zone of the newly created EC2 instance\",\n        \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"AvailabilityZone\" ] }\n      },\n      \"PublicDNS\" : {\n        \"Description\" : \"Public DNSName of the newly created EC2 instance\",\n        \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicDnsName\" ] }\n      },\n      \"PublicIP\" : {\n        \"Description\" : \"Public IP address of the newly created EC2 instance\",\n        \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicIp\" ] }\n      }\n    }\n  } \n</code></pre>\n", "OwnerUserId": "2947158", "LastActivityDate": "2018-08-17T11:27:08.960", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "179944386", "PostHistoryTypeId": "2", "PostId": "51894420", "RevisionGUID": "a5d63397-fb7c-4958-a458-d83c9b437d09", "CreationDate": "2018-08-17T11:27:08.960", "UserId": "2947158", "Text": "I was having the same issue , CF stack was already reached to CREATE_COMPLETE so cfn-signal was of no use. Attached the CreationPolicy on EC2 resource to tell CloudFormation to wait for 1 success signal within 5 minutes before proceeding with stack creation and marking it CREATE_COMPLETE. So using cfn-signal along with CreationPolicy solved the issue. Below is the stack template\r\n\r\n    {\r\n        \"AWSTemplateFormatVersion\" : \"2010-09-09\",\r\n      \r\n        \"Description\" : \"AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create an Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based on the region in which the stack is run. This example creates an EC2 security group for the instance to give you SSH access. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.\",\r\n      \r\n        \"Parameters\" : {\r\n          \"KeyName\": {\r\n            \"Description\" : \"Name of an existing EC2 KeyPair to enable SSH access to the instance\",\r\n            \"Type\": \"AWS::EC2::KeyPair::KeyName\",\r\n            \"ConstraintDescription\" : \"Must be the name of an existing EC2 KeyPair.\"\r\n          },\r\n      \r\n          \"InstanceType\" : {\r\n            \"Description\" : \"WebServer EC2 instance type\",\r\n            \"Type\" : \"String\",\r\n            \"Default\" : \"t2.micro\",\r\n            \"AllowedValues\" : [ \"t1.micro\", \"t2.nano\", \"t2.micro\", \"t2.small\", \"t2.medium\", \"t2.large\", \"m1.small\", \"m1.medium\",\r\n                                \"m1.large\", \"m1.xlarge\", \"m2.xlarge\", \"m2.2xlarge\", \"m2.4xlarge\", \"m3.medium\", \"m3.large\", \"m3.xlarge\", \r\n                                \"m3.2xlarge\", \"m4.large\", \"m4.xlarge\", \"m4.2xlarge\", \"m4.4xlarge\", \"m4.10xlarge\", \"c1.medium\", \"c1.xlarge\", \r\n                                \"c3.large\", \"c3.xlarge\", \"c3.2xlarge\", \"c3.4xlarge\", \"c3.8xlarge\", \"c4.large\", \"c4.xlarge\", \"c4.2xlarge\", \"c4.4xlarge\",\r\n                                \"c4.8xlarge\", \"g2.2xlarge\", \"g2.8xlarge\", \"r3.large\", \"r3.xlarge\", \"r3.2xlarge\", \"r3.4xlarge\", \"r3.8xlarge\", \"i2.xlarge\",\r\n                                \"i2.2xlarge\", \"i2.4xlarge\", \"i2.8xlarge\", \"d2.xlarge\", \"d2.2xlarge\", \"d2.4xlarge\", \"d2.8xlarge\"]\r\n      ,\r\n            \"ConstraintDescription\" : \"Must be a valid EC2 instance type.\"\r\n          },\r\n      \r\n          \"SSHLocation\" : {\r\n            \"Description\" : \"The IP address range that can be used to SSH to the EC2 instances\",\r\n            \"Type\": \"String\",\r\n            \"MinLength\": \"9\",\r\n            \"MaxLength\": \"18\",\r\n            \"Default\": \"0.0.0.0/0\",\r\n            \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\",\r\n            \"ConstraintDescription\": \"Must be a valid IP CIDR range of the form x.x.x.x/x.\"\r\n         }\r\n        },\r\n      \r\n        \"Mappings\" : {\r\n          \"AWSInstanceType2Arch\" : {\r\n            \"t1.micro\"    : { \"Arch\" : \"PV64\"   }, \"t2.nano\"     : { \"Arch\" : \"HVM64\"  }, \"t2.micro\"    : { \"Arch\" : \"HVM64\"  },\r\n            \"t2.small\"    : { \"Arch\" : \"HVM64\"  }, \"t2.medium\"   : { \"Arch\" : \"HVM64\"  }, \"t2.large\"    : { \"Arch\" : \"HVM64\"  },\r\n            \"m1.small\"    : { \"Arch\" : \"PV64\"   }, \"m1.medium\"   : { \"Arch\" : \"PV64\"   }, \"m1.large\"    : { \"Arch\" : \"PV64\"   },\r\n            \"m1.xlarge\"   : { \"Arch\" : \"PV64\"   }, \"m2.xlarge\"   : { \"Arch\" : \"PV64\"   }, \"m2.2xlarge\"  : { \"Arch\" : \"PV64\"   },\r\n            \"m2.4xlarge\"  : { \"Arch\" : \"PV64\"   }, \"m3.medium\"   : { \"Arch\" : \"HVM64\"  }, \"m3.large\"    : { \"Arch\" : \"HVM64\"  },\r\n            \"m3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"m3.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"m4.large\"    : { \"Arch\" : \"HVM64\"  },\r\n            \"m4.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"m4.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"m4.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"m4.10xlarge\" : { \"Arch\" : \"HVM64\"  }, \"c1.medium\"   : { \"Arch\" : \"PV64\"   }, \"c1.xlarge\"   : { \"Arch\" : \"PV64\"   },\r\n            \"c3.large\"    : { \"Arch\" : \"HVM64\"  }, \"c3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"c3.2xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"c3.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c3.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c4.large\"    : { \"Arch\" : \"HVM64\"  },\r\n            \"c4.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"c4.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"c4.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"c4.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"g2.2xlarge\"  : { \"Arch\" : \"HVMG2\"  }, \"g2.8xlarge\"  : { \"Arch\" : \"HVMG2\"  },\r\n            \"r3.large\"    : { \"Arch\" : \"HVM64\"  }, \"r3.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"r3.2xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"r3.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"r3.8xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.xlarge\"   : { \"Arch\" : \"HVM64\"  },\r\n            \"i2.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.4xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"i2.8xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"d2.xlarge\"   : { \"Arch\" : \"HVM64\"  }, \"d2.2xlarge\"  : { \"Arch\" : \"HVM64\"  }, \"d2.4xlarge\"  : { \"Arch\" : \"HVM64\"  },\r\n            \"d2.8xlarge\"  : { \"Arch\" : \"HVM64\"  }\r\n          }\r\n      ,\r\n          \"AWSRegionArch2AMI\" : {\r\n            \"us-east-1\"        : {\"PV64\" : \"ami-2a69aa47\", \"HVM64\" : \"ami-97785bed\", \"HVMG2\" : \"ami-0a6e3770\"},\r\n            \"us-west-2\"        : {\"PV64\" : \"ami-7f77b31f\", \"HVM64\" : \"ami-f2d3638a\", \"HVMG2\" : \"ami-ee15a196\"},\r\n            \"us-west-1\"        : {\"PV64\" : \"ami-a2490dc2\", \"HVM64\" : \"ami-824c4ee2\", \"HVMG2\" : \"ami-0da4a46d\"},\r\n            \"eu-west-1\"        : {\"PV64\" : \"ami-4cdd453f\", \"HVM64\" : \"ami-d834aba1\", \"HVMG2\" : \"ami-af8013d6\"},\r\n            \"eu-west-2\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-403e2524\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"eu-west-3\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-8ee056f3\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"eu-central-1\"     : {\"PV64\" : \"ami-6527cf0a\", \"HVM64\" : \"ami-5652ce39\", \"HVMG2\" : \"ami-1d58ca72\"},\r\n            \"ap-northeast-1\"   : {\"PV64\" : \"ami-3e42b65f\", \"HVM64\" : \"ami-ceafcba8\", \"HVMG2\" : \"ami-edfd658b\"},\r\n            \"ap-northeast-2\"   : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-863090e8\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"ap-northeast-3\"   : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-83444afe\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"ap-southeast-1\"   : {\"PV64\" : \"ami-df9e4cbc\", \"HVM64\" : \"ami-68097514\", \"HVMG2\" : \"ami-c06013bc\"},\r\n            \"ap-southeast-2\"   : {\"PV64\" : \"ami-63351d00\", \"HVM64\" : \"ami-942dd1f6\", \"HVMG2\" : \"ami-85ef12e7\"},\r\n            \"ap-south-1\"       : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-531a4c3c\", \"HVMG2\" : \"ami-411e492e\"},\r\n            \"us-east-2\"        : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-f63b1193\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"ca-central-1\"     : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-a954d1cd\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"sa-east-1\"        : {\"PV64\" : \"ami-1ad34676\", \"HVM64\" : \"ami-84175ae8\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"cn-north-1\"       : {\"PV64\" : \"ami-77559f1a\", \"HVM64\" : \"ami-cb19c4a6\", \"HVMG2\" : \"NOT_SUPPORTED\"},\r\n            \"cn-northwest-1\"   : {\"PV64\" : \"ami-80707be2\", \"HVM64\" : \"ami-3e60745c\", \"HVMG2\" : \"NOT_SUPPORTED\"}\r\n          }\r\n      \r\n        },\r\n      \r\n        \"Resources\" : {\r\n          \"EC2Instance\" : {\r\n            \"Type\" : \"AWS::EC2::Instance\",\r\n            \"Metadata\" : {\r\n              \"AWS::CloudFormation::Init\" : {\r\n                  \"configSets\" : {\r\n                      \"InstallAndRun\" : [ \"config1\", \"config2\" ]\r\n                  },\r\n                  \"config1\" : {\r\n                      \"packages\" : {\r\n                          \"yum\" : {\r\n                              \"httpd\" : []\r\n                          }\r\n                      },\r\n                      \"files\" : {\r\n                          \"/var/www/html/index.html\" : {\r\n                              \"mode\" : \"000644\", \r\n                              \"owner\" : \"apache\", \r\n                              \"group\" : \"apache\",\r\n                              \"source\" : \"https://s3.amazonaws.com/pcr-docs/index.html\"\r\n                          }\r\n                      }\r\n                  },\r\n                  \"config2\" : {\r\n                      \"services\" : {\r\n                          \"sysvinit\" : {\r\n                              \"httpd\" : {\r\n                                  \"enabled\" : \"true\",\r\n                                  \"ensureRunning\" : \"true\",\r\n                                  \"packages\" : { \"yum\" : [\"httpd\"] }\r\n                              }\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n          },\r\n            \"Properties\" : {\r\n              \"InstanceType\" : { \"Ref\" : \"InstanceType\" },\r\n              \"SecurityGroups\" : [ { \"Ref\" : \"InstanceSecurityGroup\" } ],\r\n              \"KeyName\" : { \"Ref\" : \"KeyName\" },\r\n              \"ImageId\" : { \"Fn::FindInMap\" : [ \"AWSRegionArch2AMI\", { \"Ref\" : \"AWS::Region\" },\r\n                                { \"Fn::FindInMap\" : [ \"AWSInstanceType2Arch\", { \"Ref\" : \"InstanceType\" }, \"Arch\" ] } ] },\r\n              \"UserData\" : { \"Fn::Base64\" :\r\n                                  { \"Fn::Join\" : [\"\", [\r\n                                     \"#!/bin/bash -xe\\n\",\r\n                                     \"yum update -y aws-cfn-bootstrap\\n\",\r\n                                     \"# Install the files and packages from the metadata\\n\",\r\n                                     \"/opt/aws/bin/cfn-init -v \",\r\n                                     \"         --stack \", { \"Ref\" : \"AWS::StackName\" },\r\n                                     \"         --resource EC2Instance \",\r\n                                     \"         --configsets InstallAndRun \",\r\n                                     \"         --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\",\r\n                                     \"# Signal the status from cfn-init\\n\",\r\n                                     \"/opt/aws/bin/cfn-signal -e $? \",\r\n                                     \"         --stack \", { \"Ref\" : \"AWS::StackName\" },\r\n                                     \"         --resource EC2Instance \",\r\n                                     \"         --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\"\r\n                                  ]]}\r\n                          }                  \r\n            },\r\n            \"CreationPolicy\": {\r\n              \"ResourceSignal\": {\r\n                \"Count\": \"1\",\r\n                \"Timeout\": \"PT5M\"\r\n              }\r\n            }\r\n          },\r\n      \r\n          \"InstanceSecurityGroup\" : {\r\n            \"Type\" : \"AWS::EC2::SecurityGroup\",\r\n            \"Properties\" : {\r\n              \"GroupDescription\" : \"Enable SSH access via port 22\",\r\n              \"SecurityGroupIngress\" : [ \r\n                { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"22\", \"ToPort\" : \"22\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} },\r\n                { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"80\", \"ToPort\" : \"80\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} }\r\n               ]\r\n            }\r\n          }\r\n        },\r\n      \r\n        \"Outputs\" : {\r\n          \"InstanceId\" : {\r\n            \"Description\" : \"InstanceId of the newly created EC2 instance\",\r\n            \"Value\" : { \"Ref\" : \"EC2Instance\" }\r\n          },\r\n          \"AZ\" : {\r\n            \"Description\" : \"Availability Zone of the newly created EC2 instance\",\r\n            \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"AvailabilityZone\" ] }\r\n          },\r\n          \"PublicDNS\" : {\r\n            \"Description\" : \"Public DNSName of the newly created EC2 instance\",\r\n            \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicDnsName\" ] }\r\n          },\r\n          \"PublicIP\" : {\r\n            \"Description\" : \"Public IP address of the newly created EC2 instance\",\r\n            \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicIp\" ] }\r\n          }\r\n        }\r\n      } ", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Below is the stack template { \"AWSTemplateFormatVersion\" : \"2010-09-09\", \"Description\" : \"AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create an Amazon EC2 instance running the Amazon Linux AMI. ", "keywords": ["instance"]}, {"source": "Text", "text": "This example creates an EC2 security group for the instance to give you SSH access. ", "keywords": ["instance"]}, {"source": "Text", "text": "This template creates an Amazon EC2 instance. ", "keywords": ["instance"]}, {"source": "Text", "text": "You will be billed for the AWS resources used if you create a stack from this template.\", \"Parameters\" : { \"KeyName\": { \"Description\" : \"Name of an existing EC2 KeyPair to enable SSH access to the instance\", \"Type\": \"AWS::EC2::KeyPair::KeyName\", \"ConstraintDescription\" : \"Must be the name of an existing EC2 KeyPair.\" }, \"InstanceType\" : { \"Description\" : \"WebServer EC2 instance type\", \"Type\" : \"String\", \"Default\" : \"t2.micro\", \"AllowedValues\" : [ \"t1.micro\", \"t2.nano\", \"t2.micro\", \"t2.small\", \"t2.medium\", \"t2.large\", \"m1.small\", \"m1.medium\", \"m1.large\", \"m1.xlarge\", \"m2.xlarge\", \"m2.2xlarge\", \"m2.4xlarge\", \"m3.medium\", \"m3.large\", \"m3.xlarge\", \"m3.2xlarge\", \"m4.large\", \"m4.xlarge\", \"m4.2xlarge\", \"m4.4xlarge\", \"m4.10xlarge\", \"c1.medium\", \"c1.xlarge\", \"c3.large\", \"c3.xlarge\", \"c3.2xlarge\", \"c3.4xlarge\", \"c3.8xlarge\", \"c4.large\", \"c4.xlarge\", \"c4.2xlarge\", \"c4.4xlarge\", \"c4.8xlarge\", \"g2.2xlarge\", \"g2.8xlarge\", \"r3.large\", \"r3.xlarge\", \"r3.2xlarge\", \"r3.4xlarge\", \"r3.8xlarge\", \"i2.xlarge\", \"i2.2xlarge\", \"i2.4xlarge\", \"i2.8xlarge\", \"d2.xlarge\", \"d2.2xlarge\", \"d2.4xlarge\", \"d2.8xlarge\"] , \"ConstraintDescription\" : \"Must be a valid EC2 instance type.\" }, \"SSHLocation\" : { \"Description\" : \"The IP address range that can be used to SSH to the EC2 instances\", \"Type\": \"String\", \"MinLength\": \"9\", \"MaxLength\": \"18\", \"Default\": \"0.0.0.0/0\", \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\", \"ConstraintDescription\": \"Must be a valid IP CIDR range of the form x.x.x.x/x.\" ", "keywords": ["bill", "instance"]}, {"source": "Text", "text": "} } , \"AWSRegionArch2AMI\" : { \"us-east-1\" : {\"PV64\" : \"ami-2a69aa47\", \"HVM64\" : \"ami-97785bed\", \"HVMG2\" : \"ami-0a6e3770\"}, \"us-west-2\" : {\"PV64\" : \"ami-7f77b31f\", \"HVM64\" : \"ami-f2d3638a\", \"HVMG2\" : \"ami-ee15a196\"}, \"us-west-1\" : {\"PV64\" : \"ami-a2490dc2\", \"HVM64\" : \"ami-824c4ee2\", \"HVMG2\" : \"ami-0da4a46d\"}, \"eu-west-1\" : {\"PV64\" : \"ami-4cdd453f\", \"HVM64\" : \"ami-d834aba1\", \"HVMG2\" : \"ami-af8013d6\"}, \"eu-west-2\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-403e2524\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"eu-west-3\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-8ee056f3\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"eu-central-1\" : {\"PV64\" : \"ami-6527cf0a\", \"HVM64\" : \"ami-5652ce39\", \"HVMG2\" : \"ami-1d58ca72\"}, \"ap-northeast-1\" : {\"PV64\" : \"ami-3e42b65f\", \"HVM64\" : \"ami-ceafcba8\", \"HVMG2\" : \"ami-edfd658b\"}, \"ap-northeast-2\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-863090e8\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"ap-northeast-3\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-83444afe\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"ap-southeast-1\" : {\"PV64\" : \"ami-df9e4cbc\", \"HVM64\" : \"ami-68097514\", \"HVMG2\" : \"ami-c06013bc\"}, \"ap-southeast-2\" : {\"PV64\" : \"ami-63351d00\", \"HVM64\" : \"ami-942dd1f6\", \"HVMG2\" : \"ami-85ef12e7\"}, \"ap-south-1\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-531a4c3c\", \"HVMG2\" : \"ami-411e492e\"}, \"us-east-2\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-f63b1193\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"ca-central-1\" : {\"PV64\" : \"NOT_SUPPORTED\", \"HVM64\" : \"ami-a954d1cd\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"sa-east-1\" : {\"PV64\" : \"ami-1ad34676\", \"HVM64\" : \"ami-84175ae8\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"cn-north-1\" : {\"PV64\" : \"ami-77559f1a\", \"HVM64\" : \"ami-cb19c4a6\", \"HVMG2\" : \"NOT_SUPPORTED\"}, \"cn-northwest-1\" : {\"PV64\" : \"ami-80707be2\", \"HVM64\" : \"ami-3e60745c\", \"HVMG2\" : \"NOT_SUPPORTED\"} } }, \"Resources\" : { \"EC2Instance\" : { \"Type\" : \"AWS::EC2::Instance\", \"Metadata\" : { \"AWS::CloudFormation::Init\" : { \"configSets\" : { \"InstallAndRun\" : [ \"config1\", \"config2\" ] }, \"config1\" : { \"packages\" : { \"yum\" : { \"httpd\" : [] } }, \"files\" : { \"/var/www/html/index.html\" : { \"mode\" : \"000644\", \"owner\" : \"apache\", \"group\" : \"apache\", \"source\" : \"https://s3.amazonaws.com/pcr-docs/index.html\" } } }, \"config2\" : { \"services\" : { \"sysvinit\" : { \"httpd\" : { \"enabled\" : \"true\", \"ensureRunning\" : \"true\", \"packages\" : { \"yum\" : [\"httpd\"] } } } } } } }, \"Properties\" : { \"InstanceType\" : { \"Ref\" : \"InstanceType\" ", "keywords": ["instance", "billing mode"]}, {"source": "Text", "text": "} } }, \"InstanceSecurityGroup\" : { \"Type\" : \"AWS::EC2::SecurityGroup\", \"Properties\" : { \"GroupDescription\" : \"Enable SSH access via port 22\", \"SecurityGroupIngress\" : [ { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"22\", \"ToPort\" : \"22\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} }, { \"IpProtocol\" : \"tcp\", \"FromPort\" : \"80\", \"ToPort\" : \"80\", \"CidrIp\" : { \"Ref\" : \"SSHLocation\"} } ] } } }, \"Outputs\" : { \"InstanceId\" : { \"Description\" : \"InstanceId of the newly created EC2 instance\", \"Value\" : { \"Ref\" : \"EC2Instance\" } }, \"AZ\" : { \"Description\" : \"Availability Zone of the newly created EC2 instance\", \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"AvailabilityZone\" ] } }, \"PublicDNS\" : { \"Description\" : \"Public DNSName of the newly created EC2 instance\", \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicDnsName\" ] } ", "keywords": ["instance"]}, {"source": "Text", "text": "}, \"PublicIP\" : { \"Description\" : \"Public IP address of the newly created EC2 instance\", \"Value\" : { \"Fn::GetAtt\" : [ \"EC2Instance\", \"PublicIp\" ] } ", "keywords": ["instance"]}]}], "filtered-sentences": []}, {"Id": "49802609", "PostTypeId": "2", "ParentId": "49802146", "CreationDate": "2018-04-12T17:24:04.250", "Score": "6", "Body": "<p>Seems like you are not waiting for your auto scaling group, so the stack creation completes before your ASG has any working instances. By the time the instance is up and executes <code>cfn-signal</code>, the stack has finished.</p>\n\n<p>Try adding <code>CreationPolicy</code>:</p>\n\n<p><a href=\"https://aws.amazon.com/blogs/devops/use-a-creationpolicy-to-wait-for-on-instance-configurations/\" rel=\"noreferrer\">https://aws.amazon.com/blogs/devops/use-a-creationpolicy-to-wait-for-on-instance-configurations/</a></p>\n\n<p>and/or <code>UpdatePolicy</code>:</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html\" rel=\"noreferrer\">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html</a></p>\n\n<p>Something like the following, depending on the specifics of your case:</p>\n\n<pre><code>\"WebServerFleet\": {\n  \"CreationPolicy\": {\n    \"ResourceSignal\": {\n      \"Timeout\": \"PT15M\",\n      \"Count\": \"1\"\n    }\n  },\n  \"UpdatePolicy\": {\n    \"AutoScalingScheduledAction\": {\n      \"IgnoreUnmodifiedGroupSizeProperties\": \"true\"\n    },\n    \"AutoScalingRollingUpdate\": {\n      \"MinInstancesInService\": \"1\",\n      \"MaxBatchSize\": \"2\",\n      \"WaitOnResourceSignals\": \"true\",\n      \"PauseTime\": \"PT15M\"\n    }\n  }\n}\n</code></pre>\n\n<p>You may want to adjust the timeouts if your setup is longer or shorter. The batch size is also something to consider.</p>\n", "OwnerUserId": "492773", "LastEditorUserId": "492773", "LastEditDate": "2018-04-12T18:07:39.607", "LastActivityDate": "2018-04-12T18:07:39.607", "CommentCount": "2", "ContentLicense": "CC BY-SA 3.0", "comments": [{"Id": "86645991", "PostId": "49802609", "Score": "0", "Text": "this is really great and is exactly what i needed. One other issue im having is my load balancer is not waiting for the instance to be setup before pinging it and therefore is not getting a 200 response code and marking them as out of service. Is there any way of getting this to wait for the instances to be ready before pinging them?", "CreationDate": "2018-04-13T11:26:49.953", "UserId": "6356698", "filtered-sentences": [{"source": "Text", "text": "One other issue im having is my load balancer is not waiting for the instance to be setup before pinging it and therefore is not getting a 200 response code and marking them as out of service. ", "keywords": ["instance"]}]}, {"Id": "110447139", "PostId": "49802609", "Score": "0", "Text": "The error can also happen if you are trying to signal multiple times.", "CreationDate": "2020-06-18T13:19:30.197", "UserId": "3888850", "filtered-sentences": []}], "history": [{"Id": "171142696", "PostHistoryTypeId": "5", "PostId": "49802609", "RevisionGUID": "36556eac-4d5c-47a6-83e2-eea649dbbfca", "CreationDate": "2018-04-12T18:07:39.607", "UserId": "492773", "Comment": "added 32 characters in body", "Text": "Seems like you are not waiting for your auto scaling group, so the stack creation completes before your ASG has any working instances. By the time the instance is up and executes `cfn-signal`, the stack has finished.\r\n\r\nTry adding `CreationPolicy`:\r\n\r\nhttps://aws.amazon.com/blogs/devops/use-a-creationpolicy-to-wait-for-on-instance-configurations/\r\n\r\nand/or `UpdatePolicy`:\r\n\r\nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html\r\n\r\nSomething like the following, depending on the specifics of your case:\r\n\r\n    \"WebServerFleet\": {\r\n      \"CreationPolicy\": {\r\n        \"ResourceSignal\": {\r\n          \"Timeout\": \"PT15M\",\r\n          \"Count\": \"1\"\r\n        }\r\n      },\r\n      \"UpdatePolicy\": {\r\n        \"AutoScalingScheduledAction\": {\r\n          \"IgnoreUnmodifiedGroupSizeProperties\": \"true\"\r\n        },\r\n        \"AutoScalingRollingUpdate\": {\r\n          \"MinInstancesInService\": \"1\",\r\n          \"MaxBatchSize\": \"2\",\r\n          \"WaitOnResourceSignals\": \"true\",\r\n          \"PauseTime\": \"PT15M\"\r\n        }\r\n      }\r\n    }\r\n\r\nYou may want to adjust the timeouts if your setup is longer or shorter. The batch size is also something to consider.", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "By the time the instance is up and executes `cfn-signal`, the stack has finished. ", "keywords": ["instance"]}, {"source": "Text", "text": "Try adding `CreationPolicy`: https://aws.amazon.com/blogs/devops/use-a-creationpolicy-to-wait-for-on-instance-configurations/ and/or `UpdatePolicy`: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html ", "keywords": ["instance"]}]}, {"Id": "171139909", "PostHistoryTypeId": "2", "PostId": "49802609", "RevisionGUID": "f4aa0ae2-3576-4cbb-a1dc-7102e2d6429e", "CreationDate": "2018-04-12T17:24:04.250", "UserId": "492773", "Text": "Seems like you are not waiting for your auto scaling group, so the stack creation completes before your ASG has any working instances. By the time the instance is up and executes `cfn-signal`, the stack has finished.\r\n\r\nTry adding `CreationPolicy`:\r\n\r\nhttps://aws.amazon.com/blogs/devops/use-a-creationpolicy-to-wait-for-on-instance-configurations/\r\n\r\nand/or `UpdatePolicy`:\r\n\r\nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html\r\n\r\nSomething like the following, depending on the specifics of your case:\r\n\r\n      \"CreationPolicy\": {\r\n        \"ResourceSignal\": {\r\n          \"Timeout\": \"PT15M\",\r\n          \"Count\": \"1\"\r\n        }\r\n      },\r\n      \"UpdatePolicy\": {\r\n        \"AutoScalingScheduledAction\": {\r\n          \"IgnoreUnmodifiedGroupSizeProperties\": \"true\"\r\n        },\r\n        \"AutoScalingRollingUpdate\": {\r\n          \"MinInstancesInService\": \"1\",\r\n          \"MaxBatchSize\": \"2\",\r\n          \"WaitOnResourceSignals\": \"true\",\r\n          \"PauseTime\": \"PT15M\"\r\n        }\r\n      }\r\n\r\nYou may want to adjust the timeouts if your setup is longer or shorter. The batch size is also something to consider.", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "By the time the instance is up and executes `cfn-signal`, the stack has finished. ", "keywords": ["instance"]}, {"source": "Text", "text": "Try adding `CreationPolicy`: https://aws.amazon.com/blogs/devops/use-a-creationpolicy-to-wait-for-on-instance-configurations/ and/or `UpdatePolicy`: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html ", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "By the time the instance is up and executes cfn-signal, the stack has finished. ", "keywords": ["instance"]}, {"source": "Body", "text": "Try adding CreationPolicy: https://aws.amazon.com/blogs/devops/use-a-creationpolicy-to-wait-for-on-instance-configurations/ and/or UpdatePolicy: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html Something like the following, depending on the specifics of your case: You may want to adjust the timeouts if your setup is longer or shorter. ", "keywords": ["instance"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "I have created an aws Cloudformation script and it launches but when i look at the logs its showing the following error: ValidationError: Stack stackarn is in CREATE_COMPLETE state and cannot be signaled I have looked at other posts regarding this error that have suggested the issue is with the instance id being derived from the first instance or the autoscaling group not having a desired capacity set neither of which is true for me. ", "keywords": ["instance"]}]}
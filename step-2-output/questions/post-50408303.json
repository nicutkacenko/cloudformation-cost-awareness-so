{"Id": "50408303", "PostTypeId": "1", "CreationDate": "2018-05-18T09:38:58.247", "Score": "1", "ViewCount": "781", "Body": "<p>I'm setting up a CloudFormation template for my API, and want to create a permission to let API Gateway invoke all my lambda functions - is this possible?</p>\n\n<p>At the moment I am creating a Permission for each function like so:</p>\n\n<p><code>LambdaInvokeUserUpdatePermission:\n    Type: \"AWS::Lambda::Permission\"\n    Properties:\n      FunctionName: !GetAtt \n        - UpdateUserFunction\n        - Arn\n      Action: 'lambda:InvokeFunction'\n      Principal: apigateway.amazonaws.com\n      SourceArn: !Sub \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*\"</code></p>\n\n<p>But this doesn't feel the most efficient way. All examples on the internet seem to only include one endpoint pointing to one function, which doesn't help. (Any good resources for a more complete example would also be helpful).</p>\n\n<p>Thanks</p>\n", "OwnerUserId": "3443073", "LastActivityDate": "2018-05-22T19:09:23.197", "Title": "Permission to invoke all Lambda functions from API Gateway", "Tags": "|amazon-web-services|aws-lambda|aws-api-gateway|aws-cloudformation|", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "173688098", "PostHistoryTypeId": "2", "PostId": "50408303", "RevisionGUID": "30d64f8d-868d-441c-be92-8dd50adcd981", "CreationDate": "2018-05-18T09:38:58.247", "UserId": "3443073", "Text": "I'm setting up a CloudFormation template for my API, and want to create a permission to let API Gateway invoke all my lambda functions - is this possible?\r\n\r\nAt the moment I am creating a Permission for each function like so:\r\n\r\n`LambdaInvokeUserUpdatePermission:\r\n    Type: \"AWS::Lambda::Permission\"\r\n    Properties:\r\n      FunctionName: !GetAtt \r\n        - UpdateUserFunction\r\n        - Arn\r\n      Action: 'lambda:InvokeFunction'\r\n      Principal: apigateway.amazonaws.com\r\n      SourceArn: !Sub \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*\"`\r\n\r\nBut this doesn't feel the most efficient way. All examples on the internet seem to only include one endpoint pointing to one function, which doesn't help. (Any good resources for a more complete example would also be helpful).\r\n\r\nThanks", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "But this doesn't feel the most efficient way", "keywords": ["efficient"]}]}, {"Id": "173688099", "PostHistoryTypeId": "1", "PostId": "50408303", "RevisionGUID": "30d64f8d-868d-441c-be92-8dd50adcd981", "CreationDate": "2018-05-18T09:38:58.247", "UserId": "3443073", "Text": "Permission to invoke all Lambda functions from API Gateway", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "173688100", "PostHistoryTypeId": "3", "PostId": "50408303", "RevisionGUID": "30d64f8d-868d-441c-be92-8dd50adcd981", "CreationDate": "2018-05-18T09:38:58.247", "UserId": "3443073", "Text": "|amazon-web-services|aws-lambda|aws-api-gateway|aws-cloudformation|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "50474876", "PostTypeId": "2", "ParentId": "50408303", "CreationDate": "2018-05-22T19:09:23.197", "Score": "0", "Body": "<p>This is the only way to add the permissions if you want to have API Gateway invoke the function with it's own credentials. If you prefer, you can use the Role option instead and have API Gateway assume a role in your account to invoke the function. In the latter case, no extra permission is required on the functions.</p>\n", "OwnerUserId": "5679071", "LastActivityDate": "2018-05-22T19:09:23.197", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "173975311", "PostHistoryTypeId": "2", "PostId": "50474876", "RevisionGUID": "6f1a7581-8933-4133-9379-18ff00ab04ff", "CreationDate": "2018-05-22T19:09:23.197", "UserId": "5679071", "Text": "This is the only way to add the permissions if you want to have API Gateway invoke the function with it's own credentials. If you prefer, you can use the Role option instead and have API Gateway assume a role in your account to invoke the function. In the latter case, no extra permission is required on the functions.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "This is the only way to add the permissions if you want to have API Gateway invoke the function with it's own credentials. ", "keywords": ["permissions"]}]}], "filtered-sentences": [{"source": "Body", "text": "This is the only way to add the permissions if you want to have API Gateway invoke the function with it's own credentials. ", "keywords": ["permissions"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "But this doesn't feel the most efficient way. ", "keywords": ["efficient"]}]}
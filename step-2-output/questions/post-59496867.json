{"Id": "59496867", "PostTypeId": "1", "CreationDate": "2019-12-27T06:27:24.947", "Score": "0", "ViewCount": "115", "Body": "<p><a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html\" rel=\"nofollow noreferrer\">Documentation</a> does not talk the exact purpose of these two resource types, except its usage.</p>\n\n<hr>\n\n<p>With an example <a href=\"https://gist.github.com/anupam-ncsu/ef04bd05721611a6477bd3332c686323#file-jenkinsmasterservice-yaml-L28\" rel=\"nofollow noreferrer\">code</a> of \n master Jenkins, shown below:</p>\n\n<p>master jenkins cluster(<code>Cluster: !Ref Cluster</code>) is being used by <code>AWS::ECS::Service</code> resource type, to schedule tasks on <code>!Ref Cluster</code> as shown below:</p>\n\n<pre><code>ServicesJenkinsMaster: \n        Type: AWS::ECS::Service\n        Properties: \n            Cluster: !Ref Cluster\n            DesiredCount: !Ref DesiredMasterCount\n            DeploymentConfiguration:\n              MaximumPercent: 100\n              MinimumHealthyPercent: 50            \n            PlacementConstraints: \n                - Type: distinctInstance \n            TaskDefinition: !Ref TaskDefinition\n</code></pre>\n\n<p><strong>where as</strong> the jenkins slave cluster(<code>ECSCluster</code>) in below <a href=\"https://gist.github.com/anupam-ncsu/3b46ab133425e3077d4e576758c079de#file-jenkinsslavecluster-yaml-L54\" rel=\"nofollow noreferrer\">code</a>, is not being used by <code>AWS::ECS::Service</code> resource type</p>\n\n<pre><code>ECSCluster:\n        Type: AWS::ECS::Cluster\n        Properties:\n            ClusterName: !Sub ANUPAM_${EnvironmentName}_Jenkins_Slave\n</code></pre>\n\n<hr>\n\n<p>I know that <code>AWS::ECS::Service</code> is used to schedule tasks on a given cluster(<code>Cluster</code> property). <code>DesiredCount:n</code> property tells that <code>n</code> instances of those tasks need to be maintained at any point of time, where each task is of type <code>AWS::ECS::TaskDefinition</code>. </p>\n\n<p>But am unclear about not using slave cluster <code>ECSCluster</code> with <code>AWS::ECS::Service</code> resource type</p>\n\n<p><a href=\"https://miro.medium.com/max/980/0*LOcTEgLcWA2pBLlT.png\" rel=\"nofollow noreferrer\">Here</a> is a jenkins architecture created with these cloudformation scripts.</p>\n\n<hr>\n\n<p>In the above scenario, Why slave jenkins cluster(<code>ECSCluster</code>) is not being used by <code>AWS::ECS::Service</code> type, unlike master Jenkins cluster?</p>\n\n<p>When do we use <code>Cluster</code> property with <code>AWS::ECS::Service</code> type?</p>\n\n<p>Does <a href=\"https://wiki.jenkins.io/display/JENKINS/Amazon+EC2+Container+Service+Plugin\" rel=\"nofollow noreferrer\">ECS \n jenkins plugin</a> setting take care of the functionality of  <code>AWS::ECS::Service</code> type using <code>ECSCluster</code>. Because tasks need to be scheduled on slave cluster(<code>ECSCluster</code>) with specific <code>DesiredCount</code>.</p>\n", "OwnerUserId": "3317808", "LastEditorUserId": "3317808", "LastEditDate": "2019-12-27T23:02:50.417", "LastActivityDate": "2019-12-27T23:02:50.417", "Title": "AWS resource type - AWS::ECS::Cluster & AWS::ECS::Service", "Tags": "|amazon-web-services|jenkins|aws-cloudformation|amazon-ecs|", "AnswerCount": "0", "CommentCount": "9", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "105173061", "PostId": "59496867", "Score": "0", "Text": "The slave task is managed by Jenkin ECS plugin. More information can be found  https://github.com/jenkinsci/amazon-ecs-plugin and https://wiki.jenkins.io/display/JENKINS/Amazon+EC2+Container+Service+Plugin", "CreationDate": "2019-12-27T11:46:48.317", "UserId": "8763847", "filtered-sentences": []}, {"Id": "105182825", "PostId": "59496867", "Score": "0", "Text": "@Apolozeus yes I added ECS plugin in my query. But, when you say ECS plugin manage, what does that mean? Does it register the `ECSCluster` with ECS service? Internally", "CreationDate": "2019-12-27T19:26:04.603", "UserId": "3317808", "filtered-sentences": []}, {"Id": "105185152", "PostId": "59496867", "Score": "0", "Text": "Yes, it does. The plugin will make sure that if there is any jobs pending to be executed, it will spin up the task for the same. This is quite common for any CI tool in term of cost saving.", "CreationDate": "2019-12-27T21:42:36.673", "UserId": "8763847", "filtered-sentences": [{"source": "Text", "text": "This is quite common for any CI tool in term of cost saving.", "keywords": ["cost"]}]}, {"Id": "105186562", "PostId": "59496867", "Score": "0", "Text": "@Apolozeus Don't we have such option to create cluster(of type `AWS::ECS::Cluster`) of 3 EC2 instances running, irrespective of the task load they carry. Because `DesiredCount` property says: \"The number of instantiations of the **specified task definition** (not EC2 instances) to place and keep running on your cluster.\"", "CreationDate": "2019-12-27T23:26:53.360", "UserId": "3317808", "filtered-sentences": [{"source": "Text", "text": "Don't we have such option to create cluster(of type `AWS::ECS::Cluster`) of 3 EC2 instances running, irrespective of the task load they carry. ", "keywords": ["cluster"]}, {"source": "Text", "text": "Because `DesiredCount` property says: \"The number of instantiations of the **specified task definition** (not EC2 instances) to place and keep running on your cluster.\"", "keywords": ["cluster"]}]}, {"Id": "105187271", "PostId": "59496867", "Score": "0", "Text": "Not sure if I understand your point correctly. In ECS, we have cluster params like (# min/max EC2 instances), and also auto scaling policy to scale down/up the cluster in term of ec2 instances (we can see the same in slave CF). The task configuration is another thing, provided that we have enough resource in your EC2 instances, the task can go up and down. In case that there is no space in EC2 (cpu, memory, etc), the task placement will be failed with error (unable to place task). There is new ECS feature to avoid this issue, but we leave it for now.", "CreationDate": "2019-12-28T00:44:41.860", "UserId": "8763847", "filtered-sentences": [{"source": "Text", "text": "In ECS, we have cluster params like (# min/max EC2 instances), and also auto scaling policy to scale down/up the cluster in term of ec2 instances (we can see the same in slave CF). ", "keywords": ["policy", "cluster"]}, {"source": "Text", "text": "In case that there is no space in EC2 (cpu, memory, etc), the task placement will be failed with error (unable to place task). ", "keywords": ["cpu"]}, {"source": "Text", "text": "There is new ECS feature to avoid this issue, but we leave it for now.", "keywords": ["feature"]}]}, {"Id": "105188637", "PostId": "59496867", "Score": "0", "Text": "@Apolozeus can you give me documentation  reference to property min/max for EC2 instances in a cluster? I would like to read it.", "CreationDate": "2019-12-28T04:05:30.167", "UserId": "3317808", "filtered-sentences": [{"source": "Text", "text": "@Apolozeus can you give me documentation reference to property min/max for EC2 instances in a cluster? ", "keywords": ["cluster"]}]}, {"Id": "105189912", "PostId": "59496867", "Score": "0", "Text": "it's not directly under `Cluster`, but you can refer to this https://docs.aws.amazon.com/AmazonECS/latest/d eveloperguide/launch_container_instance.html for the LaunchConfiguration, then then `AutoScalingGroup` which links to LaunchConfiguration. I personally refer to official aws example for reference, here is one https://github.com/awslabs/aws-cloudformation-templates/blob/master/aws/services/ECS/EC2LaunchType/clusters/public-vpc.yml", "CreationDate": "2019-12-28T06:51:57.493", "UserId": "8763847", "filtered-sentences": [{"source": "Text", "text": "it's not directly under `Cluster`, but you can refer to this https://docs.aws.amazon.com/AmazonECS/latest/d eveloperguide/launch_container_instance.html for the LaunchConfiguration, then then `AutoScalingGroup` which links to LaunchConfiguration. ", "keywords": ["cluster"]}]}, {"Id": "105195168", "PostId": "59496867", "Score": "0", "Text": "@Apolozeus ya this property with autoscaling, I know. So, without autoscaling configuration, any `AWS::ECS::Cluster` cannot maintain minimum number of EC2 instances? So, what is `AWS::ECS::Cluster` ensuring about your EC2 instances? When you configure ECS.config file to to join a cluster...`\"echo ECS_CLUSTER=\", { \"Ref\": \"EcsCluster\" }, \" >> /etc/ecs/ecs.config\\n\"`", "CreationDate": "2019-12-28T14:18:24.640", "UserId": "3317808", "filtered-sentences": [{"source": "Text", "text": "So, without autoscaling configuration, any `AWS::ECS::Cluster` cannot maintain minimum number of EC2 instances? ", "keywords": ["cluster"]}, {"source": "Text", "text": "So, what is `AWS::ECS::Cluster` ensuring about your EC2 instances? ", "keywords": ["cluster"]}, {"source": "Text", "text": "When you configure ECS.config file to to join a cluster...`\"echo ECS_CLUSTER=\", { \"Ref\": \"EcsCluster\" }, \" >> /etc/ecs/ecs.config\\n\"`", "keywords": ["cluster"]}]}, {"Id": "105201846", "PostId": "59496867", "Score": "0", "Text": "I see `AWS::ECS::Cluster` is kind of logical resource only. The underlying instance could be fargate or ec2. If it's ec2, it `must` be configured with auto scaling group and lauch configuration. In case of fargate, AWS will manage underlying server.", "CreationDate": "2019-12-28T21:42:54.983", "UserId": "8763847", "filtered-sentences": [{"source": "Text", "text": "I see `AWS::ECS::Cluster` is kind of logical resource only. ", "keywords": ["cluster"]}, {"source": "Text", "text": "The underlying instance could be fargate or ec2. ", "keywords": ["instance"]}]}], "history": [{"Id": "211908045", "PostHistoryTypeId": "5", "PostId": "59496867", "RevisionGUID": "a9f79d40-1396-4ff2-9d08-4893d38cff3e", "CreationDate": "2019-12-27T07:00:48.940", "UserId": "3317808", "Comment": "added 26 characters in body; added 32 characters in body; added 4 characters in body", "Text": "[Documentation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html) does not talk the exact purpose of these two resource types, except its usage.\r\n\r\n----------------------------\r\n\r\nWith an example [code](https://gist.github.com/anupam-ncsu/ef04bd05721611a6477bd3332c686323#file-jenkinsmasterservice-yaml-L28) of \r\n master Jenkins, shown below:\r\n\r\nmaster jenkins cluster(`Cluster: !Ref Cluster`) is being used by `AWS::ECS::Service` resource type, to schedule tasks on `!Ref Cluster` as shown below:\r\n\r\n    ServicesJenkinsMaster: \r\n            Type: AWS::ECS::Service\r\n            Properties: \r\n                Cluster: !Ref Cluster\r\n                DesiredCount: !Ref DesiredMasterCount\r\n                DeploymentConfiguration:\r\n                  MaximumPercent: 100\r\n                  MinimumHealthyPercent: 50            \r\n                PlacementConstraints: \r\n                    - Type: distinctInstance \r\n                TaskDefinition: !Ref TaskDefinition\r\n\r\n**where as** the jenkins slave cluster(`ECSCluster`) in below [code](https://gist.github.com/anupam-ncsu/3b46ab133425e3077d4e576758c079de#file-jenkinsslavecluster-yaml-L54), is not being used by `AWS::ECS::Service` resource type\r\n\r\n    ECSCluster:\r\n            Type: AWS::ECS::Cluster\r\n            Properties:\r\n                ClusterName: !Sub ANUPAM_${EnvironmentName}_Jenkins_Slave\r\n\r\n----------------------\r\n\r\n\r\nI know that `AWS::ECS::Service` is used to schedule tasks on a given cluster(`Cluster` property). `DesiredCount:n` property tells that `n` instances of those tasks need to be maintained at any point of time, where each task is of type `AWS::ECS::TaskDefinition`. \r\n\r\nBut am unclear about not using slave cluster `ECSCluster` with `AWS::ECS::Service` resource type\r\n\r\n[Here](https://miro.medium.com/max/980/0*LOcTEgLcWA2pBLlT.png) is a jenkins architecture created with these cloudformation scripts.\r\n\r\n----------------------\r\n\r\n In the above scenario, Why slave jenkins cluster(`ECSCluster`) is not being used by `AWS::ECS::Service` type, unlike master Jenkins cluster?\n\nWhen do we use `Cluster` property with `AWS::ECS::Service` type?\n\n Does [ECS \r\n jenkins plugin](https://wiki.jenkins.io/display/JENKINS/Amazon+EC2+Container+Service+Plugin) setting take care of the functionality of  `AWS::ECS::Service` type using `ECSCluster` with `DesiredCount`. Because tasks need to be scheduled on slave cluster(`ECSCluster`) with specific `DesiredCount`.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "[Documentation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html) does not talk the exact purpose of these two resource types, except its usage. ---------------------------- With an example [code](https://gist.github.com/anupam-ncsu/ef04bd05721611a6477bd3332c686323#file-jenkinsmasterservice-yaml-L28) of master Jenkins, shown below: master jenkins cluster(`Cluster: !Ref Cluster`) is being used by `AWS::ECS::Service` resource type, to schedule tasks on `!Ref Cluster` as shown below: ServicesJenkinsMaster: Type: AWS::ECS::Service Properties: Cluster: !Ref Cluster DesiredCount: !Ref DesiredMasterCount DeploymentConfiguration: MaximumPercent: 100 MinimumHealthyPercent: 50 PlacementConstraints: - Type: distinctInstance TaskDefinition: !Ref TaskDefinition **where as** the jenkins slave cluster(`ECSCluster`) in below [code](https://gist.github.com/anupam-ncsu/3b46ab133425e3077d4e576758c079de#file-jenkinsslavecluster-yaml-L54), is not being used by `AWS::ECS::Service` resource type ECSCluster: Type: AWS::ECS::Cluster Properties: ClusterName: !Sub ANUPAM_${EnvironmentName}_Jenkins_Slave ---------------------- I know that `AWS::ECS::Service` is used to schedule tasks on a given cluster(`Cluster` property). ", "keywords": ["cluster"]}, {"source": "Text", "text": "But am unclear about not using slave cluster `ECSCluster` with `AWS::ECS::Service` resource type [Here](https://miro.medium.com/max/980/0*LOcTEgLcWA2pBLlT.png) is a jenkins architecture created with these cloudformation scripts. ---------------------- In the above scenario, Why slave jenkins cluster(`ECSCluster`) is not being used by `AWS::ECS::Service` type, unlike master Jenkins cluster? ", "keywords": ["cluster"]}, {"source": "Text", "text": "When do we use `Cluster` property with `AWS::ECS::Service` type? Does [ECS jenkins plugin](https://wiki.jenkins.io/display/JENKINS/Amazon+EC2+Container+Service+Plugin) setting take care of the functionality of `AWS::ECS::Service` type using `ECSCluster` with `DesiredCount`. ", "keywords": ["cluster"]}, {"source": "Text", "text": "Because tasks need to be scheduled on slave cluster(`ECSCluster`) with specific `DesiredCount`.", "keywords": ["cluster"]}]}, {"Id": "211906743", "PostHistoryTypeId": "2", "PostId": "59496867", "RevisionGUID": "13e58455-5d91-4961-904d-7e2c9c660335", "CreationDate": "2019-12-27T06:27:24.947", "UserId": "3317808", "Text": "[Documentation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html) does not talk the exact purpose of these two resource types, except its usage.\r\n\r\n\r\nWith an example [code](https://gist.github.com/anupam-ncsu/ef04bd05721611a6477bd3332c686323#file-jenkinsmasterservice-yaml-L28) of \r\n master Jenkins:\r\n\r\nmaster jenkins cluster(`Cluster`) is being used by `AWS::ECS::Service` resource type, to schedule tasks, on `Cluster` as shown below:\r\n\r\n    ServicesJenkinsMaster: \r\n            Type: AWS::ECS::Service\r\n            Properties: \r\n                Cluster: !Ref Cluster\r\n                DesiredCount: !Ref DesiredMasterCount\r\n                DeploymentConfiguration:\r\n                  MaximumPercent: 100\r\n                  MinimumHealthyPercent: 50            \r\n                PlacementConstraints: \r\n                    - Type: distinctInstance \r\n                TaskDefinition: !Ref TaskDefinition\r\n\r\nwhere as the jenkins slave cluster(taken from [code](https://gist.github.com/anupam-ncsu/3b46ab133425e3077d4e576758c079de#file-jenkinsslavecluster-yaml-L54))is not being used by `AWS::ECS::Service` resource type\r\n\r\n    ECSCluster:\r\n            Type: AWS::ECS::Cluster\r\n            Properties:\r\n                ClusterName: !Sub ANUPAM_${EnvironmentName}_Jenkins_Slave\r\n\r\n----------------------\r\n\r\n\r\nI know that `AWS::ECS::Service` is used to schedule tasks on a given cluster(`Cluster` property). `DesiredCount:n` property tells that `n` instances of those tasks need to be maintained at any point of time, where each task is of type `AWS::ECS::TaskDefinition`. \r\n\r\nBut am unclear about not using slave cluster with `AWS::ECS::Service` resource type\r\n\r\n\r\n\r\nWhen do we use `Cluster` property with `AWS::ECS::Service` type? Why slave jenkins cluster is not being used by `AWS::ECS::Service` type? Does ECS plugin setting(in Jenkins) take care of `AWS::ECS::Service` type using `ECSCluster` with `DesiredCount`. Please clarify this syntax\r\n\r\n\r\n\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "With an example [code](https://gist.github.com/anupam-ncsu/ef04bd05721611a6477bd3332c686323#file-jenkinsmasterservice-yaml-L28) of master Jenkins: master jenkins cluster(`Cluster`) is being used by `AWS::ECS::Service` resource type, to schedule tasks, on `Cluster` as shown below: ServicesJenkinsMaster: Type: AWS::ECS::Service Properties: Cluster: !Ref Cluster DesiredCount: !Ref DesiredMasterCount DeploymentConfiguration: MaximumPercent: 100 MinimumHealthyPercent: 50 PlacementConstraints: - Type: distinctInstance TaskDefinition: !Ref TaskDefinition where as the jenkins slave cluster(taken from [code](https://gist.github.com/anupam-ncsu/3b46ab133425e3077d4e576758c079de#file-jenkinsslavecluster-yaml-L54))is not being used by `AWS::ECS::Service` resource type ECSCluster: Type: AWS::ECS::Cluster Properties: ClusterName: !Sub ANUPAM_${EnvironmentName}_Jenkins_Slave ---------------------- I know that `AWS::ECS::Service` is used to schedule tasks on a given cluster(`Cluster` property). ", "keywords": ["cluster"]}, {"source": "Text", "text": "But am unclear about not using slave cluster with `AWS::ECS::Service` resource type When do we use `Cluster` property with `AWS::ECS::Service` type? ", "keywords": ["cluster"]}, {"source": "Text", "text": "Why slave jenkins cluster is not being used by `AWS::ECS::Service` type? ", "keywords": ["cluster"]}]}, {"Id": "211906744", "PostHistoryTypeId": "1", "PostId": "59496867", "RevisionGUID": "13e58455-5d91-4961-904d-7e2c9c660335", "CreationDate": "2019-12-27T06:27:24.947", "UserId": "3317808", "Text": "AWS Resource types - AWS::ECS::Cluster & AWS::ECS::Service", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "AWS Resource types - AWS::ECS::Cluster & AWS::ECS::Service", "keywords": ["cluster"]}]}, {"Id": "211906745", "PostHistoryTypeId": "3", "PostId": "59496867", "RevisionGUID": "13e58455-5d91-4961-904d-7e2c9c660335", "CreationDate": "2019-12-27T06:27:24.947", "UserId": "3317808", "Text": "|amazon-web-services|jenkins|aws-cloudformation|amazon-ecs|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "211906925", "PostHistoryTypeId": "5", "PostId": "59496867", "RevisionGUID": "6ed0e0a7-b574-4ab5-944b-8d187473d277", "CreationDate": "2019-12-27T06:32:34.483", "UserId": "3317808", "Comment": "added 27 characters in body", "Text": "[Documentation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html) does not talk the exact purpose of these two resource types, except its usage.\r\n\r\n\r\nWith an example [code](https://gist.github.com/anupam-ncsu/ef04bd05721611a6477bd3332c686323#file-jenkinsmasterservice-yaml-L28) of \r\n master Jenkins, shown below:\r\n\r\nmaster jenkins cluster(`Cluster: !Ref Cluster`) is being used by `AWS::ECS::Service` resource type, to schedule tasks, on `Cluster` as shown below:\r\n\r\n    ServicesJenkinsMaster: \r\n            Type: AWS::ECS::Service\r\n            Properties: \r\n                Cluster: !Ref Cluster\r\n                DesiredCount: !Ref DesiredMasterCount\r\n                DeploymentConfiguration:\r\n                  MaximumPercent: 100\r\n                  MinimumHealthyPercent: 50            \r\n                PlacementConstraints: \r\n                    - Type: distinctInstance \r\n                TaskDefinition: !Ref TaskDefinition\r\n\r\n**where as** the jenkins slave cluster(shown below [code](https://gist.github.com/anupam-ncsu/3b46ab133425e3077d4e576758c079de#file-jenkinsslavecluster-yaml-L54))is not being used by `AWS::ECS::Service` resource type\r\n\r\n    ECSCluster:\r\n            Type: AWS::ECS::Cluster\r\n            Properties:\r\n                ClusterName: !Sub ANUPAM_${EnvironmentName}_Jenkins_Slave\r\n\r\n----------------------\r\n\r\n\r\nI know that `AWS::ECS::Service` is used to schedule tasks on a given cluster(`Cluster` property). `DesiredCount:n` property tells that `n` instances of those tasks need to be maintained at any point of time, where each task is of type `AWS::ECS::TaskDefinition`. \r\n\r\nBut am unclear about not using slave cluster with `AWS::ECS::Service` resource type\r\n\r\n\r\n\r\nWhen do we use `Cluster` property with `AWS::ECS::Service` type? Why slave jenkins cluster is not being used by `AWS::ECS::Service` type? Does [ECS \r\n jenkins plugin](https://wiki.jenkins.io/display/JENKINS/Amazon+EC2+Container+Service+Plugin) setting take care of functionality about `AWS::ECS::Service` type using `ECSCluster` with `DesiredCount`. Please clarify this syntax\r\n\r\n\r\n\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "With an example [code](https://gist.github.com/anupam-ncsu/ef04bd05721611a6477bd3332c686323#file-jenkinsmasterservice-yaml-L28) of master Jenkins, shown below: master jenkins cluster(`Cluster: !Ref Cluster`) is being used by `AWS::ECS::Service` resource type, to schedule tasks, on `Cluster` as shown below: ServicesJenkinsMaster: Type: AWS::ECS::Service Properties: Cluster: !Ref Cluster DesiredCount: !Ref DesiredMasterCount DeploymentConfiguration: MaximumPercent: 100 MinimumHealthyPercent: 50 PlacementConstraints: - Type: distinctInstance TaskDefinition: !Ref TaskDefinition **where as** the jenkins slave cluster(shown below [code](https://gist.github.com/anupam-ncsu/3b46ab133425e3077d4e576758c079de#file-jenkinsslavecluster-yaml-L54))is not being used by `AWS::ECS::Service` resource type ECSCluster: Type: AWS::ECS::Cluster Properties: ClusterName: !Sub ANUPAM_${EnvironmentName}_Jenkins_Slave ---------------------- I know that `AWS::ECS::Service` is used to schedule tasks on a given cluster(`Cluster` property). ", "keywords": ["cluster"]}, {"source": "Text", "text": "But am unclear about not using slave cluster with `AWS::ECS::Service` resource type When do we use `Cluster` property with `AWS::ECS::Service` type? ", "keywords": ["cluster"]}, {"source": "Text", "text": "Why slave jenkins cluster is not being used by `AWS::ECS::Service` type? Does [ECS jenkins plugin](https://wiki.jenkins.io/display/JENKINS/Amazon+EC2+Container+Service+Plugin) setting take care of functionality about `AWS::ECS::Service` type using `ECSCluster` with `DesiredCount`", "keywords": ["cluster"]}]}, {"Id": "211907160", "PostHistoryTypeId": "5", "PostId": "59496867", "RevisionGUID": "314e9fbc-8eed-40b6-bf70-9e189856b423", "CreationDate": "2019-12-27T06:38:30.763", "UserId": "3317808", "Comment": "added 117 characters in body", "Text": "[Documentation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html) does not talk the exact purpose of these two resource types, except its usage.\r\n\r\n----------------------------\r\n\r\nWith an example [code](https://gist.github.com/anupam-ncsu/ef04bd05721611a6477bd3332c686323#file-jenkinsmasterservice-yaml-L28) of \r\n master Jenkins, shown below:\r\n\r\nmaster jenkins cluster(`Cluster: !Ref Cluster`) is being used by `AWS::ECS::Service` resource type, to schedule tasks, on `Cluster` as shown below:\r\n\r\n    ServicesJenkinsMaster: \r\n            Type: AWS::ECS::Service\r\n            Properties: \r\n                Cluster: !Ref Cluster\r\n                DesiredCount: !Ref DesiredMasterCount\r\n                DeploymentConfiguration:\r\n                  MaximumPercent: 100\r\n                  MinimumHealthyPercent: 50            \r\n                PlacementConstraints: \r\n                    - Type: distinctInstance \r\n                TaskDefinition: !Ref TaskDefinition\r\n\r\n**where as** the jenkins slave cluster(shown below [code](https://gist.github.com/anupam-ncsu/3b46ab133425e3077d4e576758c079de#file-jenkinsslavecluster-yaml-L54))is not being used by `AWS::ECS::Service` resource type\r\n\r\n    ECSCluster:\r\n            Type: AWS::ECS::Cluster\r\n            Properties:\r\n                ClusterName: !Sub ANUPAM_${EnvironmentName}_Jenkins_Slave\r\n\r\n----------------------\r\n\r\n\r\nI know that `AWS::ECS::Service` is used to schedule tasks on a given cluster(`Cluster` property). `DesiredCount:n` property tells that `n` instances of those tasks need to be maintained at any point of time, where each task is of type `AWS::ECS::TaskDefinition`. \r\n\r\nBut am unclear about not using slave cluster with `AWS::ECS::Service` resource type\r\n\r\n[Here](https://miro.medium.com/max/980/0*LOcTEgLcWA2pBLlT.png) is a jenkins architecture created with cloudformation.\r\n\r\n----------------------\r\n\r\nWhen do we use `Cluster` property with `AWS::ECS::Service` type? Why slave jenkins cluster(`ECSCluster`) is not being used by `AWS::ECS::Service` type? Does [ECS \r\n jenkins plugin](https://wiki.jenkins.io/display/JENKINS/Amazon+EC2+Container+Service+Plugin) setting take care of functionality about `AWS::ECS::Service` type using `ECSCluster` with `DesiredCount`. Please clarify this syntax\r\n\r\n\r\n\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "[Documentation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html) does not talk the exact purpose of these two resource types, except its usage. ---------------------------- With an example [code](https://gist.github.com/anupam-ncsu/ef04bd05721611a6477bd3332c686323#file-jenkinsmasterservice-yaml-L28) of master Jenkins, shown below: master jenkins cluster(`Cluster: !Ref Cluster`) is being used by `AWS::ECS::Service` resource type, to schedule tasks, on `Cluster` as shown below: ServicesJenkinsMaster: Type: AWS::ECS::Service Properties: Cluster: !Ref Cluster DesiredCount: !Ref DesiredMasterCount DeploymentConfiguration: MaximumPercent: 100 MinimumHealthyPercent: 50 PlacementConstraints: - Type: distinctInstance TaskDefinition: !Ref TaskDefinition **where as** the jenkins slave cluster(shown below [code](https://gist.github.com/anupam-ncsu/3b46ab133425e3077d4e576758c079de#file-jenkinsslavecluster-yaml-L54))is not being used by `AWS::ECS::Service` resource type ECSCluster: Type: AWS::ECS::Cluster Properties: ClusterName: !Sub ANUPAM_${EnvironmentName}_Jenkins_Slave ---------------------- I know that `AWS::ECS::Service` is used to schedule tasks on a given cluster(`Cluster` property). ", "keywords": ["cluster"]}, {"source": "Text", "text": "But am unclear about not using slave cluster with `AWS::ECS::Service` resource type [Here](https://miro.medium.com/max/980/0*LOcTEgLcWA2pBLlT.png) is a jenkins architecture created with cloudformation. ---------------------- When do we use `Cluster` property with `AWS::ECS::Service` type? Why slave jenkins cluster(`ECSCluster`) is not being used by `AWS::ECS::Service` type? Does [ECS jenkins plugin](https://wiki.jenkins.io/display/JENKINS/Amazon+EC2+Container+Service+Plugin) setting take care of functionality about `AWS::ECS::Service` type using `ECSCluster` with `DesiredCount`", "keywords": ["cluster"]}]}, {"Id": "211907388", "PostHistoryTypeId": "5", "PostId": "59496867", "RevisionGUID": "798bd25b-5816-43eb-a0ff-321da8b71006", "CreationDate": "2019-12-27T06:44:45.423", "UserId": "3317808", "Comment": "added 24 characters in body", "Text": "[Documentation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html) does not talk the exact purpose of these two resource types, except its usage.\r\n\r\n----------------------------\r\n\r\nWith an example [code](https://gist.github.com/anupam-ncsu/ef04bd05721611a6477bd3332c686323#file-jenkinsmasterservice-yaml-L28) of \r\n master Jenkins, shown below:\r\n\r\nmaster jenkins cluster(`Cluster: !Ref Cluster`) is being used by `AWS::ECS::Service` resource type, to schedule tasks on `!Ref Cluster` as shown below:\r\n\r\n    ServicesJenkinsMaster: \r\n            Type: AWS::ECS::Service\r\n            Properties: \r\n                Cluster: !Ref Cluster\r\n                DesiredCount: !Ref DesiredMasterCount\r\n                DeploymentConfiguration:\r\n                  MaximumPercent: 100\r\n                  MinimumHealthyPercent: 50            \r\n                PlacementConstraints: \r\n                    - Type: distinctInstance \r\n                TaskDefinition: !Ref TaskDefinition\r\n\r\n**where as** the jenkins slave cluster(`ECSCluster`) in below [code](https://gist.github.com/anupam-ncsu/3b46ab133425e3077d4e576758c079de#file-jenkinsslavecluster-yaml-L54), is not being used by `AWS::ECS::Service` resource type\r\n\r\n    ECSCluster:\r\n            Type: AWS::ECS::Cluster\r\n            Properties:\r\n                ClusterName: !Sub ANUPAM_${EnvironmentName}_Jenkins_Slave\r\n\r\n----------------------\r\n\r\n\r\nI know that `AWS::ECS::Service` is used to schedule tasks on a given cluster(`Cluster` property). `DesiredCount:n` property tells that `n` instances of those tasks need to be maintained at any point of time, where each task is of type `AWS::ECS::TaskDefinition`. \r\n\r\nBut am unclear about not using slave cluster `ECSCluster` with `AWS::ECS::Service` resource type\r\n\r\n[Here](https://miro.medium.com/max/980/0*LOcTEgLcWA2pBLlT.png) is a jenkins architecture created with these cloudformation scripts.\r\n\r\n----------------------\r\n\r\nWhen do we use `Cluster` property with `AWS::ECS::Service` type? Why slave jenkins cluster(`ECSCluster`) is not being used by `AWS::ECS::Service` type? Does [ECS \r\n jenkins plugin](https://wiki.jenkins.io/display/JENKINS/Amazon+EC2+Container+Service+Plugin) setting take care of the functionality `AWS::ECS::Service` type using `ECSCluster` with `DesiredCount`. Because tasks need to be scheduled on slave cluster(`ECSCluster`) with specific `DesiredCount`.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "[Documentation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html) does not talk the exact purpose of these two resource types, except its usage. ---------------------------- With an example [code](https://gist.github.com/anupam-ncsu/ef04bd05721611a6477bd3332c686323#file-jenkinsmasterservice-yaml-L28) of master Jenkins, shown below: master jenkins cluster(`Cluster: !Ref Cluster`) is being used by `AWS::ECS::Service` resource type, to schedule tasks on `!Ref Cluster` as shown below: ServicesJenkinsMaster: Type: AWS::ECS::Service Properties: Cluster: !Ref Cluster DesiredCount: !Ref DesiredMasterCount DeploymentConfiguration: MaximumPercent: 100 MinimumHealthyPercent: 50 PlacementConstraints: - Type: distinctInstance TaskDefinition: !Ref TaskDefinition **where as** the jenkins slave cluster(`ECSCluster`) in below [code](https://gist.github.com/anupam-ncsu/3b46ab133425e3077d4e576758c079de#file-jenkinsslavecluster-yaml-L54), is not being used by `AWS::ECS::Service` resource type ECSCluster: Type: AWS::ECS::Cluster Properties: ClusterName: !Sub ANUPAM_${EnvironmentName}_Jenkins_Slave ---------------------- I know that `AWS::ECS::Service` is used to schedule tasks on a given cluster(`Cluster` property). ", "keywords": ["cluster"]}, {"source": "Text", "text": "But am unclear about not using slave cluster `ECSCluster` with `AWS::ECS::Service` resource type [Here](https://miro.medium.com/max/980/0*LOcTEgLcWA2pBLlT.png) is a jenkins architecture created with these cloudformation scripts. ---------------------- When do we use `Cluster` property with `AWS::ECS::Service` type? Why slave jenkins cluster(`ECSCluster`) is not being used by `AWS::ECS::Service` type? Does [ECS jenkins plugin](https://wiki.jenkins.io/display/JENKINS/Amazon+EC2+Container+Service+Plugin) setting take care of the functionality `AWS::ECS::Service` type using `ECSCluster` with `DesiredCount`", "keywords": ["cluster"]}, {"source": "Text", "text": "Because tasks need to be scheduled on slave cluster(`ECSCluster`) with specific `DesiredCount`", "keywords": ["cluster"]}]}, {"Id": "211907482", "PostHistoryTypeId": "4", "PostId": "59496867", "RevisionGUID": "798bd25b-5816-43eb-a0ff-321da8b71006", "CreationDate": "2019-12-27T06:44:45.423", "UserId": "3317808", "Comment": "added 24 characters in body", "Text": "AWS resource type - AWS::ECS::Cluster & AWS::ECS::Service", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "AWS resource type - AWS::ECS::Cluster & AWS::ECS::Service", "keywords": ["cluster"]}]}, {"Id": "211947923", "PostHistoryTypeId": "5", "PostId": "59496867", "RevisionGUID": "37e04091-568c-43fe-9a88-1b1b630e9d9c", "CreationDate": "2019-12-27T23:02:50.417", "UserId": "3317808", "Comment": "deleted 16 characters in body", "Text": "[Documentation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html) does not talk the exact purpose of these two resource types, except its usage.\r\n\r\n----------------------------\r\n\r\nWith an example [code](https://gist.github.com/anupam-ncsu/ef04bd05721611a6477bd3332c686323#file-jenkinsmasterservice-yaml-L28) of \r\n master Jenkins, shown below:\r\n\r\nmaster jenkins cluster(`Cluster: !Ref Cluster`) is being used by `AWS::ECS::Service` resource type, to schedule tasks on `!Ref Cluster` as shown below:\r\n\r\n    ServicesJenkinsMaster: \r\n            Type: AWS::ECS::Service\r\n            Properties: \r\n                Cluster: !Ref Cluster\r\n                DesiredCount: !Ref DesiredMasterCount\r\n                DeploymentConfiguration:\r\n                  MaximumPercent: 100\r\n                  MinimumHealthyPercent: 50            \r\n                PlacementConstraints: \r\n                    - Type: distinctInstance \r\n                TaskDefinition: !Ref TaskDefinition\r\n\r\n**where as** the jenkins slave cluster(`ECSCluster`) in below [code](https://gist.github.com/anupam-ncsu/3b46ab133425e3077d4e576758c079de#file-jenkinsslavecluster-yaml-L54), is not being used by `AWS::ECS::Service` resource type\r\n\r\n    ECSCluster:\r\n            Type: AWS::ECS::Cluster\r\n            Properties:\r\n                ClusterName: !Sub ANUPAM_${EnvironmentName}_Jenkins_Slave\r\n\r\n----------------------\r\n\r\n\r\nI know that `AWS::ECS::Service` is used to schedule tasks on a given cluster(`Cluster` property). `DesiredCount:n` property tells that `n` instances of those tasks need to be maintained at any point of time, where each task is of type `AWS::ECS::TaskDefinition`. \r\n\r\nBut am unclear about not using slave cluster `ECSCluster` with `AWS::ECS::Service` resource type\r\n\r\n[Here](https://miro.medium.com/max/980/0*LOcTEgLcWA2pBLlT.png) is a jenkins architecture created with these cloudformation scripts.\r\n\r\n----------------------\r\n\r\n In the above scenario, Why slave jenkins cluster(`ECSCluster`) is not being used by `AWS::ECS::Service` type, unlike master Jenkins cluster?\r\n\r\nWhen do we use `Cluster` property with `AWS::ECS::Service` type?\r\n\r\n Does [ECS \r\n jenkins plugin](https://wiki.jenkins.io/display/JENKINS/Amazon+EC2+Container+Service+Plugin) setting take care of the functionality of  `AWS::ECS::Service` type using `ECSCluster`. Because tasks need to be scheduled on slave cluster(`ECSCluster`) with specific `DesiredCount`.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "[Documentation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html) does not talk the exact purpose of these two resource types, except its usage. ---------------------------- With an example [code](https://gist.github.com/anupam-ncsu/ef04bd05721611a6477bd3332c686323#file-jenkinsmasterservice-yaml-L28) of master Jenkins, shown below: master jenkins cluster(`Cluster: !Ref Cluster`) is being used by `AWS::ECS::Service` resource type, to schedule tasks on `!Ref Cluster` as shown below: ServicesJenkinsMaster: Type: AWS::ECS::Service Properties: Cluster: !Ref Cluster DesiredCount: !Ref DesiredMasterCount DeploymentConfiguration: MaximumPercent: 100 MinimumHealthyPercent: 50 PlacementConstraints: - Type: distinctInstance TaskDefinition: !Ref TaskDefinition **where as** the jenkins slave cluster(`ECSCluster`) in below [code](https://gist.github.com/anupam-ncsu/3b46ab133425e3077d4e576758c079de#file-jenkinsslavecluster-yaml-L54), is not being used by `AWS::ECS::Service` resource type ECSCluster: Type: AWS::ECS::Cluster Properties: ClusterName: !Sub ANUPAM_${EnvironmentName}_Jenkins_Slave ---------------------- I know that `AWS::ECS::Service` is used to schedule tasks on a given cluster(`Cluster` property). ", "keywords": ["cluster"]}, {"source": "Text", "text": "But am unclear about not using slave cluster `ECSCluster` with `AWS::ECS::Service` resource type [Here](https://miro.medium.com/max/980/0*LOcTEgLcWA2pBLlT.png) is a jenkins architecture created with these cloudformation scripts. ---------------------- In the above scenario, Why slave jenkins cluster(`ECSCluster`) is not being used by `AWS::ECS::Service` type, unlike master Jenkins cluster? ", "keywords": ["cluster"]}, {"source": "Text", "text": "When do we use `Cluster` property with `AWS::ECS::Service` type? Does [ECS jenkins plugin](https://wiki.jenkins.io/display/JENKINS/Amazon+EC2+Container+Service+Plugin) setting take care of the functionality of `AWS::ECS::Service` type using `ECSCluster`", "keywords": ["cluster"]}, {"source": "Text", "text": "Because tasks need to be scheduled on slave cluster(`ECSCluster`) with specific `DesiredCount`", "keywords": ["cluster"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Title", "text": "AWS resource type - AWS::ECS::Cluster & AWS::ECS::Service", "keywords": ["cluster"]}, {"source": "Body", "text": "With an example code of master Jenkins, shown below: master jenkins cluster(Cluster: !Ref Cluster) is being used by AWS::ECS::Service resource type, to schedule tasks on !Ref Cluster as shown below: where as the jenkins slave cluster(ECSCluster) in below code, is not being used by AWS::ECS::Service resource type I know that AWS::ECS::Service is used to schedule tasks on a given cluster(Cluster property). ", "keywords": ["cluster"]}, {"source": "Body", "text": "But am unclear about not using slave cluster ECSCluster with AWS::ECS::Service resource type ", "keywords": ["cluster"]}, {"source": "Body", "text": "In the above scenario, Why slave jenkins cluster(ECSCluster) is not being used by AWS::ECS::Service type, unlike master Jenkins cluster? ", "keywords": ["cluster"]}, {"source": "Body", "text": "When do we use Cluster property with AWS::ECS::Service type? Does ECS jenkins plugin setting take care of the functionality of AWS::ECS::Service type using ECSCluster. ", "keywords": ["cluster"]}, {"source": "Body", "text": "Because tasks need to be scheduled on slave cluster(ECSCluster) with specific DesiredCount.", "keywords": ["cluster"]}]}
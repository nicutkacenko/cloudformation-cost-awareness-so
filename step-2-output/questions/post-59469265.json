{"Id": "59469265", "PostTypeId": "1", "CreationDate": "2019-12-24T13:05:04.887", "Score": "4", "ViewCount": "2953", "Body": "<p>I have an app with a bunch of Lambdas. Instead of adding one CloudWatch alarm for each is there a way to combine all of them into one alarm that goes off if any of the Lambdas error out?</p>\n<p>So far I tried:</p>\n<ul>\n<li>Adding each function as a dimension (CloudFormation complains about duplicate FunctionNames)</li>\n<li>Adding each function as a dimension with a different key than FunctionName, CloudFormation doesn't complain, but it doesn't really work either.</li>\n</ul>\n", "OwnerUserId": "5129009", "LastEditorUserId": "1480391", "LastEditDate": "2021-04-07T11:31:56.097", "LastActivityDate": "2024-03-06T20:38:47.157", "Title": "CloudFormation alarm for multiple Lambdas", "Tags": "|amazon-web-services|aws-lambda|aws-cloudformation|amazon-cloudwatch|", "AnswerCount": "4", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "105117871", "PostId": "59469265", "Score": "3", "Text": "What did you try so far?", "CreationDate": "2019-12-24T13:23:28.927", "UserId": "9931092", "filtered-sentences": []}], "history": [{"Id": "211792776", "PostHistoryTypeId": "5", "PostId": "59469265", "RevisionGUID": "00a40eed-e786-4220-ae96-c763ce4fbb45", "CreationDate": "2019-12-24T13:35:47.040", "UserId": "5129009", "Comment": "added 244 characters in body", "Text": "I have an app with a bunch of lambdas. Instead of adding one cloudwatch alarm for each is there a way to combine all of them into one alarm that goes off if any of the lambdas error out?\r\n\r\nSo far I tried:\r\n\r\n- Adding each function as a dimension (CF complains about duplicate FunctionNames)\r\n- Adding each function as a dimension with a different key than FunctionName, CF doesn't complain, but it doesn't really work either.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "211791253", "PostHistoryTypeId": "2", "PostId": "59469265", "RevisionGUID": "b7dddebb-7a04-499a-825b-9a2f00152781", "CreationDate": "2019-12-24T13:05:04.887", "UserId": "5129009", "Text": "I have an app with a bunch of lambdas. Instead of adding one cloudwatch alarm for each is there a way to combine all of them into one alarm that goes off if any of the lambdas error out?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "211791254", "PostHistoryTypeId": "1", "PostId": "59469265", "RevisionGUID": "b7dddebb-7a04-499a-825b-9a2f00152781", "CreationDate": "2019-12-24T13:05:04.887", "UserId": "5129009", "Text": "Cloudformation alarm for multiple lambdas", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "211791255", "PostHistoryTypeId": "3", "PostId": "59469265", "RevisionGUID": "b7dddebb-7a04-499a-825b-9a2f00152781", "CreationDate": "2019-12-24T13:05:04.887", "UserId": "5129009", "Text": "|amazon-web-services|aws-lambda|aws-cloudformation|amazon-cloudwatch|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "244179238", "PostHistoryTypeId": "5", "PostId": "59469265", "RevisionGUID": "a3a3545d-8052-41b3-a25b-4208dd5dd873", "CreationDate": "2021-04-07T11:31:56.097", "UserId": "1480391", "Comment": "added 24 characters in body; edited title", "Text": "I have an app with a bunch of Lambdas. Instead of adding one CloudWatch alarm for each is there a way to combine all of them into one alarm that goes off if any of the Lambdas error out?\r\n\r\nSo far I tried:\r\n\r\n- Adding each function as a dimension (CloudFormation complains about duplicate FunctionNames)\r\n- Adding each function as a dimension with a different key than FunctionName, CloudFormation doesn't complain, but it doesn't really work either.\r\n\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "244179239", "PostHistoryTypeId": "4", "PostId": "59469265", "RevisionGUID": "a3a3545d-8052-41b3-a25b-4208dd5dd873", "CreationDate": "2021-04-07T11:31:56.097", "UserId": "1480391", "Comment": "added 24 characters in body; edited title", "Text": "CloudFormation alarm for multiple Lambdas", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "78117301", "PostTypeId": "2", "ParentId": "59469265", "CreationDate": "2024-03-06T20:38:47.157", "Score": "1", "Body": "<p>I came across this page while looking for a solution and learned about composite alarms from a comment above. So to pay it forward, here's some sample code in Python that I used to get the composite alarm working. I don't know if this is the best way to do this, but it works for my use case.</p>\n<pre><code>from aws_cdk import aws_cloudwatch as cw\n\nlambda_alarms = {}\nfor lambda_def in lambda_defs:\n    lambda_name = lambda_def['name']\n    lambda_object = _lambda.Function()\n    \n    error_metric = lambda_object.metric_errors(\n        period=aws_cdk.Duration.minutes(5),\n        statistic=&quot;Sum&quot;,\n        label=&quot;Total errors past five minutes&quot;\n    )\n\n    lambda_alarms[lambda_name] = cw.Alarm(self, f&quot;{lambda_name}-alarm&quot;,\n        comparison_operator=cw.ComparisonOperator.GREATER_THAN_THRESHOLD,\n        threshold=10,\n        evaluation_periods=1,\n        metric=error_metric\n    )\n        \nalarm_rule = cw.AlarmRule.any_of(*lambda_alarms.values())\n\n# the name here will show up in the email subject\ncomposite_alarm = cw.CompositeAlarm(self, &quot;LambdasCompositeAlarm&quot;,\n    alarm_rule=alarm_rule\n) \n\ntopic_name = &quot;Lambda Alarm Notifications&quot;\nerror_topic = sns.Topic(self, topic_name)\n\nemail_subscription = subs.EmailSubscription('you@email.com')\nerror_topic.add_subscription(email_subscription)\n\nalarm_action = cw_actions.SnsAction(\n    topic=error_topic\n)\ncomposite_alarm.add_alarm_action(alarm_action)\n</code></pre>\n", "OwnerUserId": "5796711", "LastActivityDate": "2024-03-06T20:38:47.157", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "304032143", "PostHistoryTypeId": "2", "PostId": "78117301", "RevisionGUID": "65116fb5-5047-4233-8db9-2f0e96a59dac", "CreationDate": "2024-03-06T20:38:47.157", "UserId": "5796711", "Text": "I came across this page while looking for a solution and learned about composite alarms from a comment above. So to pay it forward, here's some sample code in Python that I used to get the composite alarm working. I don't know if this is the best way to do this, but it works for my use case.\r\n\r\n    from aws_cdk import aws_cloudwatch as cw\r\n    \r\n    lambda_alarms = {}\r\n    for lambda_def in lambda_defs:\r\n        lambda_name = lambda_def['name']\r\n        lambda_object = _lambda.Function()\r\n        \r\n        error_metric = lambda_object.metric_errors(\r\n            period=aws_cdk.Duration.minutes(5),\r\n            statistic=\"Sum\",\r\n            label=\"Total errors past five minutes\"\r\n        )\r\n    \r\n        lambda_alarms[lambda_name] = cw.Alarm(self, f\"{lambda_name}-alarm\",\r\n            comparison_operator=cw.ComparisonOperator.GREATER_THAN_THRESHOLD,\r\n            threshold=10,\r\n            evaluation_periods=1,\r\n            metric=error_metric\r\n        )\r\n            \r\n    alarm_rule = cw.AlarmRule.any_of(*lambda_alarms.values())\r\n    \r\n    # the name here will show up in the email subject\r\n    composite_alarm = cw.CompositeAlarm(self, \"LambdasCompositeAlarm\",\r\n        alarm_rule=alarm_rule\r\n    ) \r\n    \r\n    topic_name = \"Lambda Alarm Notifications\"\r\n    error_topic = sns.Topic(self, topic_name)\r\n    \r\n    email_subscription = subs.EmailSubscription('you@email.com')\r\n    error_topic.add_subscription(email_subscription)\r\n    \r\n    alarm_action = cw_actions.SnsAction(\r\n        topic=error_topic\r\n    )\r\n    composite_alarm.add_alarm_action(alarm_action)", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "So to pay it forward, here's some sample code in Python that I used to get the composite alarm working. ", "keywords": ["pay"]}]}], "filtered-sentences": [{"source": "Body", "text": "So to pay it forward, here's some sample code in Python that I used to get the composite alarm working. ", "keywords": ["pay"]}]}, {"Id": "59472988", "PostTypeId": "2", "ParentId": "59469265", "CreationDate": "2019-12-24T19:58:51.643", "Score": "1", "Body": "<p>You have your metrics per lambda function but you also have overall metrics that include data for all functions. You can just alarm on that.</p>\n\n<p>You can find them in CloudWatch Console Metrics view by selecting <strong>All > Lambda > Across All Functions</strong></p>\n\n<p>These metrics don't have any dimensions, just the namespace and metric name, example source of a graph would be:</p>\n\n<pre><code>{\n    \"metrics\": [\n        [ \"AWS/Lambda\", \"Errors\" ]\n    ],\n    \"view\": \"timeSeries\",\n    \"stacked\": false,\n    \"region\": \"eu-west-1\",\n    \"stat\": \"Sum\",\n    \"period\": 300\n}\n</code></pre>\n", "OwnerUserId": "1803990", "LastActivityDate": "2019-12-24T19:58:51.643", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "105127577", "PostId": "59472988", "Score": "2", "Text": "That's helpful, but I needed only a subset of the lambdas, not one, not all.", "CreationDate": "2019-12-25T01:56:55.520", "UserId": "5129009", "filtered-sentences": []}], "history": [{"Id": "211806501", "PostHistoryTypeId": "2", "PostId": "59472988", "RevisionGUID": "9a27d82e-0dca-4d76-8c98-7b54b5da23e3", "CreationDate": "2019-12-24T19:58:51.643", "UserId": "1803990", "Text": "You have your metrics per lambda function but you also have overall metrics that include data for all functions. You can just alarm on that.\r\n\r\nYou can find them in CloudWatch Console Metrics view by selecting **All > Lambda > Across All Functions**\r\n\r\nThese metrics don't have any dimensions, just the namespace and metric name, example source of a graph would be:\r\n\r\n    {\r\n        \"metrics\": [\r\n            [ \"AWS/Lambda\", \"Errors\" ]\r\n        ],\r\n        \"view\": \"timeSeries\",\r\n        \"stacked\": false,\r\n        \"region\": \"eu-west-1\",\r\n        \"stat\": \"Sum\",\r\n        \"period\": 300\r\n    }", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "59477076", "PostTypeId": "2", "ParentId": "59469265", "CreationDate": "2019-12-25T09:40:55.477", "Score": "1", "Body": "<p>You should create Alarm using metric math expression on the metrics (plural) required.</p>\n\n<p>In this way you can control the metrics you need and not use \"All > Lambda > Across All Functions.\".</p>\n\n<p><a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Create-alarm-on-metric-math-expression.html\" rel=\"nofollow noreferrer\">https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Create-alarm-on-metric-math-expression.html</a></p>\n", "OwnerUserId": "3910455", "LastEditorUserId": "3910455", "LastEditDate": "2019-12-25T09:59:06.007", "LastActivityDate": "2019-12-25T09:59:06.007", "CommentCount": "5", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "105136137", "PostId": "59477076", "Score": "0", "Text": "Exactly what I ended up doing, but then you lose the granularity of knowing which function errored out. Not that big of a problem if you have two or three, but checking 10ish is a bit of a pain...", "CreationDate": "2019-12-25T15:15:19.033", "UserId": "5129009", "filtered-sentences": []}, {"Id": "109497301", "PostId": "59477076", "Score": "0", "Text": "@F\u00e1bioDias so any solution for it? and what expression you used for it?", "CreationDate": "2020-05-20T08:09:48.193", "UserId": "10689474", "filtered-sentences": []}, {"Id": "109561894", "PostId": "59477076", "Score": "0", "Text": "@Tula one alarm per lambda function, to keep granularity. Templated that out into the same default file and moved on", "CreationDate": "2020-05-21T23:29:47.773", "UserId": "5129009", "filtered-sentences": []}, {"Id": "109922191", "PostId": "59477076", "Score": "0", "Text": "@F\u00e1bioDias Instead, you can directly configure sns as a lambda function destination right? In this way, you'll get the error message too", "CreationDate": "2020-06-02T12:30:56.147", "UserId": "10689474", "filtered-sentences": []}, {"Id": "109943043", "PostId": "59477076", "Score": "0", "Text": "@Tula, I always had an SNS as AlarmActions of the alarm, but the point is that I didn't want to create one alarm per lambda, but I wanted the alarm itself to tell me which lambda errored out, which afaik, it doesn't", "CreationDate": "2020-06-03T01:18:19.953", "UserId": "5129009", "filtered-sentences": []}], "history": [{"Id": "211824569", "PostHistoryTypeId": "5", "PostId": "59477076", "RevisionGUID": "4e561e9c-5842-4c0c-8327-ffca42ce9ff3", "CreationDate": "2019-12-25T09:59:06.007", "UserId": "3910455", "Comment": "added 30 characters in body", "Text": "You should create Alarm using metric math expression on the metrics (plural) required.\r\n\r\nIn this way you can control the metrics you need and not use \"All > Lambda > Across All Functions.\".\r\n\r\nhttps://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Create-alarm-on-metric-math-expression.html\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "211823906", "PostHistoryTypeId": "2", "PostId": "59477076", "RevisionGUID": "90073001-50c2-4008-8128-bc2ef49b9da6", "CreationDate": "2019-12-25T09:40:55.477", "UserId": "3910455", "Text": "You should create Alarm based on metric math expression.\r\n\r\nIn this way you can control the metrics you need and not use \"All > Lambda > Across All Functions.\".\r\n\r\nhttps://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Create-alarm-on-metric-math-expression.html\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}, {"Id": "59472018", "PostTypeId": "2", "ParentId": "59469265", "CreationDate": "2019-12-24T17:48:19.007", "Score": "1", "Body": "<p>One possible solution is to use Metrics and combine all dimensions using Expression: MAX([d1,d2,...]). Just make sure to pass 'ReturnData: false' on the other metrics.</p>\n", "OwnerUserId": "5129009", "LastActivityDate": "2019-12-24T17:48:19.007", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "110733345", "PostId": "59472018", "Score": "0", "Text": "This, however, won't tell you which lambda broke, so somewhat limited usefulness. there is also this: https://aws.amazon.com/about-aws/whats-new/2020/03/amazon-cloudwatch-now-allows-you-to-combine-multiple-alarms/", "CreationDate": "2020-06-28T01:11:39.873", "UserId": "5129009", "filtered-sentences": []}], "history": [{"Id": "211802514", "PostHistoryTypeId": "2", "PostId": "59472018", "RevisionGUID": "01ef59a2-a915-4947-b084-df5089fd8de0", "CreationDate": "2019-12-24T17:48:19.007", "UserId": "5129009", "Text": "One possible solution is to use Metrics and combine all dimensions using Expression: MAX([d1,d2,...]). Just make sure to pass 'ReturnData: false' on the other metrics.\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": false, "filtered-sentences": []}
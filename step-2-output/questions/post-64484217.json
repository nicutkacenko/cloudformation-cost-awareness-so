{"Id": "64484217", "PostTypeId": "1", "CreationDate": "2020-10-22T14:17:00.203", "Score": "0", "ViewCount": "1920", "Body": "<p>I'm creating a Deployment Group in CodeDeploy with a CloudFormation template.\nThe Deployment Group is successfully created and the application is deployed perfectly fine.</p>\n<p>The CF resource that I defined (<code>Type: AWS::CodeDeploy::DeploymentGroup</code>) has the &quot;<em>Deployment</em>&quot; property set. The thing is that I would like to configure automatic rollbacks for this deployment, but as per CF documentation for &quot;<em>AutoRollbackConfiguration</em>&quot; property: &quot;<em>Information about the automatic rollback configuration that is associated with the deployment group. <strong>If you specify this property, don't specify the Deployment property</strong>.</em>&quot;</p>\n<p>So my understanding is that if I specify &quot;<em>Deployment</em>&quot;, I cannot set &quot;<em>AutoRollbackConfiguration</em>&quot;... Then how are you supposed to configure any rollback for the deployment? I don't see any other resource property that relates to rollbacks.</p>\n<p>Should I create a second DeploymentGroup resource and bind it to the same instances that the original Deployment Group has? I'm not sure this is possible or makes sense but I ran out of options.</p>\n<p>Thanks,\nNicolas</p>\n", "OwnerUserId": "13826951", "LastActivityDate": "2020-10-25T14:41:24.320", "Title": "How to set automatic rollbacks in CodeDeploy with CloudFormation?", "Tags": "|aws-cloudformation|rollback|aws-code-deploy|", "AnswerCount": "2", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "233374493", "PostHistoryTypeId": "2", "PostId": "64484217", "RevisionGUID": "b6ae304d-d9b5-46e5-9cec-7e4adfe4d18a", "CreationDate": "2020-10-22T14:17:00.203", "UserId": "13826951", "Text": "I'm creating a Deployment Group in CodeDeploy with a CloudFormation template.\r\nThe Deployment Group is successfully created and the application is deployed perfectly fine.\r\n\r\nThe CF resource that I defined (`Type: AWS::CodeDeploy::DeploymentGroup`) has the \"*Deployment*\" property set. The thing is that I would like to configure automatic rollbacks for this deployment, but as per CF documentation for \"*AutoRollbackConfiguration*\" property: \"*Information about the automatic rollback configuration that is associated with the deployment group. **If you specify this property, don't specify the Deployment property**.*\"\r\n\r\nSo my understanding is that if I specify \"*Deployment*\", I cannot set \"*AutoRollbackConfiguration*\"... Then how are you supposed to configure any rollback for the deployment? I don't see any other resource property that relates to rollbacks.\r\n\r\n\r\nShould I create a second DeploymentGroup resource and bind it to the same instances that the original Deployment Group has? I'm not sure this is possible or makes sense but I ran out of options.\r\n\r\nThanks,\r\nNicolas", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "233374494", "PostHistoryTypeId": "1", "PostId": "64484217", "RevisionGUID": "b6ae304d-d9b5-46e5-9cec-7e4adfe4d18a", "CreationDate": "2020-10-22T14:17:00.203", "UserId": "13826951", "Text": "How to set automatic rollbacks in CodeDeploy with CloudFormation?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "233374495", "PostHistoryTypeId": "3", "PostId": "64484217", "RevisionGUID": "b6ae304d-d9b5-46e5-9cec-7e4adfe4d18a", "CreationDate": "2020-10-22T14:17:00.203", "UserId": "13826951", "Text": "|aws-cloudformation|rollback|aws-code-deploy|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}], "answers": [{"Id": "64523484", "PostTypeId": "2", "ParentId": "64484217", "CreationDate": "2020-10-25T12:06:55.970", "Score": "0", "Body": "<p>First i like to describe why you cannot specify both, deployment and rollback configuration:</p>\n<p>Whenever you specify a deployment directly for the group, you already state which revision you like to deploy. This conflicts with the idea of CloudFormation of having resources managed by it without having a drift in the actual configuration of those resources.</p>\n<p>I would recommend the following:</p>\n<ol>\n<li>Use CloudFormation to deploy the 'underlying' infrastructure (the deployment group, application, roles, instances, etc.)</li>\n<li>Create a CodePipline within this infrastructure template, which then includes a CodeDeploy deployment action (<a href=\"https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-CodeDeploy.html\" rel=\"nofollow noreferrer\">https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-CodeDeploy.html</a>, <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-actiontypeid.html\" rel=\"nofollow noreferrer\">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-actiontypeid.html</a>)</li>\n<li>The pipeline can triggered whenever you have a new version inside you revision location</li>\n</ol>\n<p>This approach clearly separates the underlying stuff, which is not changing dynamically and the actual application deployment, done using a proper pipeline.</p>\n<p>Additionally in this way you can specify how you like to deploy (green/blue, canary) and how/when rollbacks should be handled. The status of your deployment also to be seen inside CodePipeline.</p>\n", "OwnerUserId": "6409329", "LastActivityDate": "2020-10-25T12:06:55.970", "CommentCount": "1", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "114093312", "PostId": "64523484", "Score": "0", "Text": "Thanks for your response f7o.\nI'm adding some information and thoughts below to discuss further.", "CreationDate": "2020-10-25T14:42:44.553", "UserId": "13826951", "filtered-sentences": []}], "history": [{"Id": "233552383", "PostHistoryTypeId": "2", "PostId": "64523484", "RevisionGUID": "81231b11-5ebe-4cae-83ba-2277f6bced2c", "CreationDate": "2020-10-25T12:06:55.970", "UserId": "6409329", "Text": "First i like to describe why you cannot specify both, deployment and rollback configuration:\r\n\r\nWhenever you specify a deployment directly for the group, you already state which revision you like to deploy. This conflicts with the idea of CloudFormation of having resources managed by it without having a drift in the actual configuration of those resources.\r\n\r\nI would recommend the following:\r\n 1. Use CloudFormation to deploy the 'underlying' infrastructure (the deployment group, application, roles, instances, etc.)\r\n 2. Create a CodePipline within this infrastructure template, which then includes a CodeDeploy deployment action (https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-CodeDeploy.html, https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codepipeline-pipeline-stages-actions-actiontypeid.html)\r\n 3. The pipeline can triggered whenever you have a new version inside you revision location\r\n\r\nThis approach clearly separates the underlying stuff, which is not changing dynamically and the actual application deployment, done using a proper pipeline.\r\n\r\nAdditionally in this way you can specify how you like to deploy (green/blue, canary) and how/when rollbacks should be handled. The status of your deployment also to be seen inside CodePipeline.", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "This approach clearly separates the underlying stuff, which is not changing dynamically and the actual application deployment, done using a proper pipeline. ", "keywords": ["change"]}]}], "filtered-sentences": [{"source": "Body", "text": "This approach clearly separates the underlying stuff, which is not changing dynamically and the actual application deployment, done using a proper pipeline. ", "keywords": ["change"]}]}, {"Id": "64524974", "PostTypeId": "2", "ParentId": "64484217", "CreationDate": "2020-10-25T14:41:24.320", "Score": "0", "Body": "<p>I didn't mention it but what you are suggesting about CodePipeline is exactly what I did.</p>\n<p>In fact, I have one CloudFormation template that creates all the infrastructure and includes the DeploymentGroup. With this, the application is deployed for the first time to my EC2 instances.</p>\n<p>Then I have another CF template for CI/CD purposes with a CodeDeploy stage/action that references the previous DeploymentGroup. Whenever I push some code to my repository, the Pipeline is triggered, code is built and new version successfully deployed to the instances.</p>\n<p>However, I don't see how/where in any of the CF templates to handle/configure the rollback for the DeploymentGroup as you were saying. I think I get the idea of your explanation about the conflict CF might have in case of having a drift, but my impression is that in case of errors during the CF stack creation, CF rollback should just remove the DeploymentGroup you're trying to create. In other words, for me there's no CodeDeploy deployment rollback involved in that scenario, just removing the resource (DeploymentGroup) CF was trying to create.</p>\n<p>One thing that really impresses me is that you can enable/disable automatic rollbacks for the DeploymentGroup through the AWS Console. Just edit and go to Advanced Configuration for the DeploymentGroup and you have a checkbox. I tried it and triggered the Pipeline again and worked perfectly. I made a faulty change to make the deployment fail in purpose, and then CodeDeploy automatically reverted back to the previous version of my application... completely expected behavior. Doesn't make much sense that this simple boolean/flag option is not available through CF.</p>\n<p>Hope this makes sense and helps clarifying my current situation. Any extra help would be highly appreciated.\nThanks again</p>\n", "OwnerUserId": "13826951", "LastActivityDate": "2020-10-25T14:41:24.320", "CommentCount": "5", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "114093624", "PostId": "64524974", "Score": "0", "Text": "As i understood you included the `Deployment` property into the `DeploymentGroup` inside the CF template to have a first deployment directly from the CF Stack. But is there a reason not to let the CodeDeploy action at the end deploy the first version. Then you can omit the deployment part inside CF, enter your boolean `true` to auto-rollback and then deploy the application only with CodePipeline and the CodeDeploy action.\n\nAnd yes sure always a way to work around CF, change something manually afterwards. Just makes it hard for someone else troubleshooting when your not there anymore :)", "CreationDate": "2020-10-25T14:57:56.940", "UserId": "6409329", "filtered-sentences": [{"source": "Text", "text": "And yes sure always a way to work around CF, change something manually afterwards. ", "keywords": ["change"]}]}, {"Id": "114093647", "PostId": "64524974", "Score": "0", "Text": "That has nothing to do with the CF Rollback itself. CF should only rollback if a change within the actual infrastructure went wrong.", "CreationDate": "2020-10-25T14:59:06.617", "UserId": "6409329", "filtered-sentences": [{"source": "Text", "text": "CF should only rollback if a change within the actual infrastructure went wrong.", "keywords": ["change"]}]}, {"Id": "114103980", "PostId": "64524974", "Score": "0", "Text": "What you understood is exactly what I did, not just for the first deployment but also for the future ones.\nSorry but I'm not getting your suggestion. Somewhere you have to define a DeploymentGroup that describes your deployment and to be referenced by CodePipeline. The moment you define it, a deployment is triggered by default, so I don't see then how to avoid that and let the Pipeline's deployment action do it instead.\nYou mentioned omitting the deployment part inside CF, but a deployment must be defined to be pointed by the pipeline... Are you suggesting to create the CodeDeploy manually..", "CreationDate": "2020-10-26T02:52:49.677", "UserId": "13826951", "filtered-sentences": []}, {"Id": "114104071", "PostId": "64524974", "Score": "0", "Text": "..and then binding it with CodePipeline? If so, in my humble opinion I don't think that's very efficient. Plus, if the Deploy action of that pipeline is set with rollback, then who will do the real deploy in the CICD?\nBottom line is, everything I need works fine as it is, just missing the autorollback which can be set manually through the console. So I'm really skeptical to believe that the AWS folks miss to include that ability in the CF or worse, made it in purpose. I am more inclined to think that I am missing something here... :)", "CreationDate": "2020-10-26T03:03:53.803", "UserId": "13826951", "filtered-sentences": [{"source": "Text", "text": "If so, in my humble opinion I don't think that's very efficient. ", "keywords": ["efficient"]}]}, {"Id": "114106266", "PostId": "64524974", "Score": "0", "Text": "Thanks for hour detailed answer, i will try it myself and rework my answer with more concret details on my idea", "CreationDate": "2020-10-26T06:30:24.767", "UserId": "6409329", "filtered-sentences": []}], "history": [{"Id": "233558449", "PostHistoryTypeId": "2", "PostId": "64524974", "RevisionGUID": "bc306096-ab99-4e6d-8266-dba941689b7e", "CreationDate": "2020-10-25T14:41:24.320", "UserId": "13826951", "Text": "I didn't mention it but what you are suggesting about CodePipeline is exactly what I did. \r\n\r\nIn fact, I have one CloudFormation template that creates all the infrastructure and includes the DeploymentGroup. With this, the application is deployed for the first time to my EC2 instances.\r\n\r\nThen I have another CF template for CI/CD purposes with a CodeDeploy stage/action that references the previous DeploymentGroup. Whenever I push some code to my repository, the Pipeline is triggered, code is built and new version successfully deployed to the instances.\r\n\r\nHowever, I don't see how/where in any of the CF templates to handle/configure the rollback for the DeploymentGroup as you were saying. I think I get the idea of your explanation about the conflict CF might have in case of having a drift, but my impression is that in case of errors during the CF stack creation, CF rollback should just remove the DeploymentGroup you're trying to create. In other words, for me there's no CodeDeploy deployment rollback involved in that scenario, just removing the resource (DeploymentGroup) CF was trying to create.\r\n\r\nOne thing that really impresses me is that you can enable/disable automatic rollbacks for the DeploymentGroup through the AWS Console. Just edit and go to Advanced Configuration for the DeploymentGroup and you have a checkbox. I tried it and triggered the Pipeline again and worked perfectly. I made a faulty change to make the deployment fail in purpose, and then CodeDeploy automatically reverted back to the previous version of my application... completely expected behavior. Doesn't make much sense that this simple boolean/flag option is not available through CF.\r\n\r\nHope this makes sense and helps clarifying my current situation. Any extra help would be highly appreciated.\r\nThanks again", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "I made a faulty change to make the deployment fail in purpose, and then CodeDeploy automatically reverted back to the previous version of my application... completely expected behavior. ", "keywords": ["change"]}]}], "filtered-sentences": [{"source": "Body", "text": "I made a faulty change to make the deployment fail in purpose, and then CodeDeploy automatically reverted back to the previous version of my application... completely expected behavior. ", "keywords": ["change"]}]}], "contains-topic": true, "filtered-sentences": []}
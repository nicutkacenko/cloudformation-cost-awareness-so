{"Id": "41707732", "PostTypeId": "1", "AcceptedAnswerId": "41713578", "CreationDate": "2017-01-17T21:56:49.600", "Score": "2", "ViewCount": "3017", "Body": "<p>Having trouble configuring AWS Lambda to be triggered by a Rule->Trigger as a Scheduled Event Source using CloudFormation (in reality, using Python's Troposphere.) This has cost me a couple of days already, and any help would be appreciated.</p>\n\n<p>Here's the relevant CF JSON snippet -</p>\n\n<pre><code>        \"DataloaderRetrier\": {\n        \"Properties\": {\n            \"Code\": {\n                \"S3Bucket\": \"mycompanylabs-config\",\n                \"S3Key\": \"v3/mycompany-component-loader-lambda-0.5.jar\"\n            },\n            \"FunctionName\": \"DataloaderRetriervitest27\",\n            \"Handler\": \"mycompany.ScheduledEventHandler::handleRequest\",\n            \"MemorySize\": 320,\n            \"Role\": \"arn:aws:iam::166662328783:role/kinesis-lambda-role\",\n            \"Runtime\": \"java8\",\n            \"VpcConfig\": {\n                \"SecurityGroupIds\": [\n                    \"sg-2f1f6047\"\n                ],\n                \"SubnetIds\": [\n                    \"subnet-ec3c1435\"\n                ]\n            }\n        },\n        \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"DataloaderRetrierEventTriggerPermission\": {\n        \"Properties\": {\n            \"Action\": \"lambda:InvokeFunction\",\n            \"FunctionName\": {\n                \"Fn::GetAtt\": [\n                    \"DataloaderRetrier\",\n                    \"Arn\"\n                ]\n            },\n            \"Principal\": \"events.amazonaws.com\",\n            \"SourceAccount\": {\n                \"Ref\": \"AWS::AccountId\"\n            },\n            \"SourceArn\": {\n                \"Fn::GetAtt\": [\n                    \"DataloaderRetrierEventTriggerRule\",\n                    \"Arn\"\n                ]\n            }\n        },\n        \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"DataloaderRetrierEventTriggerRule\": {\n        \"DependsOn\": \"DataloaderRetrier\",\n        \"Properties\": {\n            \"Description\": \"Reminding the lambda to read from the retry SQS\",\n            \"Name\": \"DataloaderRetrierEventTriggerRulevitest27\",\n            \"ScheduleExpression\": \"rate(1 minute)\",\n            \"State\": \"ENABLED\",\n            \"Targets\": [\n                {\n                    \"Arn\": {\n                        \"Fn::GetAtt\": [\n                            \"DataloaderRetrier\",\n                            \"Arn\"\n                        ]\n                    },\n                    \"Id\": \"DataloaderRetrierEventTriggerTargetvitest27\",\n                    \"Input\": \"{\\\"Hey\\\":\\\"WAKE UP!\\\"}\"\n                }\n            ]\n        },\n        \"Type\": \"AWS::Events::Rule\"\n    }\n</code></pre>\n\n<p>The AWS Lambda function shows zero invocations, and the Events->Rules metric shows the correct number of invocations, however they all fail. The Lambda shows the trigger in the Triggers section, and the Rule shows the lambda in its trigger sections. They link up fine.</p>\n\n<p>However, if I go in and manually create <em>the same trigger</em> under the rule in the web console, it will happily start sending events to the Lambda. </p>\n\n<p>PS - here's the troposphere code:</p>\n\n<pre><code># DATALOADER RETRIER LAMBDA\ndataloader_retrier = t.add_resource(awslambda.Function(\n    \"DataloaderRetrier\",\n    Code=awslambda.Code(\n        \"DataloaderRetrierCode\",\n        S3Bucket='mycompanylabs-config',\n        S3Key='v3/mycompany-snowplow-loader-lambda-0.5.jar'\n    ),\n    FunctionName=suffix(\"DataloaderRetrier\"),\n    Handler=\"mycompany.ScheduledEventHandler::handleRequest\",\n    MemorySize=\"320\",\n    Role=\"arn:aws:iam::166662328783:role/kinesis-lambda-role\",\n    Runtime=\"java8\",\n    VpcConfig=lambda_vpc_config\n))\n\ndataloader_retrier_scheduled_rule = t.add_resource(events.Rule(\n    \"DataloaderRetrierEventTriggerRule\",\n    Name=suffix(\"DataloaderRetrierEventTriggerRule\"),\n    Description=\"Reminding the lambda to read from the retry SQS\",\n    Targets=[events.Target(\n        Id=suffix(\"DataloaderRetrierEventTriggerTarget\"),\n        Arn=tr.GetAtt(\"DataloaderRetrier\", \"Arn\"),\n        Input='{\"Hey\":\"WAKE UP!\"}'\n    )],\n    State='ENABLED',\n    ScheduleExpression=\"rate(1 minute)\",\n    DependsOn=\"DataloaderRetrier\"\n)),\n\nt.add_resource(awslambda.Permission(\n    \"DataloaderRetrierEventTriggerPermission\",\n    Action=\"lambda:InvokeFunction\",\n    FunctionName=tr.GetAtt(\"DataloaderRetrier\", \"Arn\"),\n    Principal=\"events.amazonaws.com\",\n    SourceAccount=tr.Ref(\"AWS::AccountId\"),\n    SourceArn=tr.GetAtt(\"DataloaderRetrierEventTriggerRule\", \"Arn\")\n))\n</code></pre>\n", "OwnerUserId": "395990", "LastActivityDate": "2017-01-18T07:32:44.840", "Title": "AWS Scheduled Event Rule for Lambda doesn't work in CloudFormation", "Tags": "|amazon-web-services|aws-lambda|aws-cloudformation|troposphere|", "AnswerCount": "1", "CommentCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "136222299", "PostHistoryTypeId": "2", "PostId": "41707732", "RevisionGUID": "7ad97e6a-d6e8-449d-b7d5-050aa91d4a7b", "CreationDate": "2017-01-17T21:56:49.600", "UserId": "395990", "Text": "Having trouble configuring AWS Lambda to be triggered by a Rule->Trigger as a Scheduled Event Source using CloudFormation (in reality, using Python's Troposphere.) This has cost me a couple of days already, and any help would be appreciated.\r\n\r\nHere's the relevant CF JSON snippet -\r\n\r\n            \"DataloaderRetrier\": {\r\n            \"Properties\": {\r\n                \"Code\": {\r\n                    \"S3Bucket\": \"mycompanylabs-config\",\r\n                    \"S3Key\": \"v3/mycompany-component-loader-lambda-0.5.jar\"\r\n                },\r\n                \"FunctionName\": \"DataloaderRetriervitest27\",\r\n                \"Handler\": \"mycompany.ScheduledEventHandler::handleRequest\",\r\n                \"MemorySize\": 320,\r\n                \"Role\": \"arn:aws:iam::166662328783:role/kinesis-lambda-role\",\r\n                \"Runtime\": \"java8\",\r\n                \"VpcConfig\": {\r\n                    \"SecurityGroupIds\": [\r\n                        \"sg-2f1f6047\"\r\n                    ],\r\n                    \"SubnetIds\": [\r\n                        \"subnet-ec3c1435\"\r\n                    ]\r\n                }\r\n            },\r\n            \"Type\": \"AWS::Lambda::Function\"\r\n        },\r\n        \"DataloaderRetrierEventTriggerPermission\": {\r\n            \"Properties\": {\r\n                \"Action\": \"lambda:InvokeFunction\",\r\n                \"FunctionName\": {\r\n                    \"Fn::GetAtt\": [\r\n                        \"DataloaderRetrier\",\r\n                        \"Arn\"\r\n                    ]\r\n                },\r\n                \"Principal\": \"events.amazonaws.com\",\r\n                \"SourceAccount\": {\r\n                    \"Ref\": \"AWS::AccountId\"\r\n                },\r\n                \"SourceArn\": {\r\n                    \"Fn::GetAtt\": [\r\n                        \"DataloaderRetrierEventTriggerRule\",\r\n                        \"Arn\"\r\n                    ]\r\n                }\r\n            },\r\n            \"Type\": \"AWS::Lambda::Permission\"\r\n        },\r\n        \"DataloaderRetrierEventTriggerRule\": {\r\n            \"DependsOn\": \"DataloaderRetrier\",\r\n            \"Properties\": {\r\n                \"Description\": \"Reminding the lambda to read from the retry SQS\",\r\n                \"Name\": \"DataloaderRetrierEventTriggerRulevitest27\",\r\n                \"ScheduleExpression\": \"rate(1 minute)\",\r\n                \"State\": \"ENABLED\",\r\n                \"Targets\": [\r\n                    {\r\n                        \"Arn\": {\r\n                            \"Fn::GetAtt\": [\r\n                                \"DataloaderRetrier\",\r\n                                \"Arn\"\r\n                            ]\r\n                        },\r\n                        \"Id\": \"DataloaderRetrierEventTriggerTargetvitest27\",\r\n                        \"Input\": \"{\\\"Hey\\\":\\\"WAKE UP!\\\"}\"\r\n                    }\r\n                ]\r\n            },\r\n            \"Type\": \"AWS::Events::Rule\"\r\n        }\r\n\r\n\r\nThe AWS Lambda function shows zero invocations, and the Events->Rules metric shows the correct number of invocations, however they all fail. The Lambda shows the trigger in the Triggers section, and the Rule shows the lambda in its trigger sections. They link up fine.\r\n\r\nHowever, if I go in and manually create _the same trigger_ under the rule in the web console, it will happily start sending events to the Lambda. \r\n\r\nPS - here's the troposphere code:\r\n\r\n    # DATALOADER RETRIER LAMBDA\r\n    dataloader_retrier = t.add_resource(awslambda.Function(\r\n        \"DataloaderRetrier\",\r\n        Code=awslambda.Code(\r\n            \"DataloaderRetrierCode\",\r\n            S3Bucket='mycompanylabs-config',\r\n            S3Key='v3/mycompany-snowplow-loader-lambda-0.5.jar'\r\n        ),\r\n        FunctionName=suffix(\"DataloaderRetrier\"),\r\n        Handler=\"mycompany.ScheduledEventHandler::handleRequest\",\r\n        MemorySize=\"320\",\r\n        Role=\"arn:aws:iam::166662328783:role/kinesis-lambda-role\",\r\n        Runtime=\"java8\",\r\n        VpcConfig=lambda_vpc_config\r\n    ))\r\n    \r\n    dataloader_retrier_scheduled_rule = t.add_resource(events.Rule(\r\n        \"DataloaderRetrierEventTriggerRule\",\r\n        Name=suffix(\"DataloaderRetrierEventTriggerRule\"),\r\n        Description=\"Reminding the lambda to read from the retry SQS\",\r\n        Targets=[events.Target(\r\n            Id=suffix(\"DataloaderRetrierEventTriggerTarget\"),\r\n            Arn=tr.GetAtt(\"DataloaderRetrier\", \"Arn\"),\r\n            Input='{\"Hey\":\"WAKE UP!\"}'\r\n        )],\r\n        State='ENABLED',\r\n        ScheduleExpression=\"rate(1 minute)\",\r\n        DependsOn=\"DataloaderRetrier\"\r\n    )),\r\n    \r\n    t.add_resource(awslambda.Permission(\r\n        \"DataloaderRetrierEventTriggerPermission\",\r\n        Action=\"lambda:InvokeFunction\",\r\n        FunctionName=tr.GetAtt(\"DataloaderRetrier\", \"Arn\"),\r\n        Principal=\"events.amazonaws.com\",\r\n        SourceAccount=tr.Ref(\"AWS::AccountId\"),\r\n        SourceArn=tr.GetAtt(\"DataloaderRetrierEventTriggerRule\", \"Arn\")\r\n    ))", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": [{"source": "Text", "text": "This has cost me a couple of days already, and any help would be appreciated. ", "keywords": ["cost"]}]}, {"Id": "136222300", "PostHistoryTypeId": "1", "PostId": "41707732", "RevisionGUID": "7ad97e6a-d6e8-449d-b7d5-050aa91d4a7b", "CreationDate": "2017-01-17T21:56:49.600", "UserId": "395990", "Text": "AWS Scheduled Event Rule for Lambda doesn't work in CloudFormation", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "136222301", "PostHistoryTypeId": "3", "PostId": "41707732", "RevisionGUID": "7ad97e6a-d6e8-449d-b7d5-050aa91d4a7b", "CreationDate": "2017-01-17T21:56:49.600", "UserId": "395990", "Text": "|amazon-web-services|aws-lambda|aws-cloudformation|troposphere|", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "answers": [{"Id": "41713578", "PostTypeId": "2", "ParentId": "41707732", "CreationDate": "2017-01-18T07:27:26.593", "Score": "5", "Body": "<p>You need to remove the <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-sourceaccount\" rel=\"noreferrer\"><code>SourceAccount</code></a> parameter from your <a href=\"http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html\" rel=\"noreferrer\"><code>AWS::Lambda::Permission</code></a> Resource.</p>\n\n<p>As described in the <a href=\"http://docs.aws.amazon.com/lambda/latest/dg/API_AddPermission.html\" rel=\"noreferrer\"><code>AddPermission</code></a> API documentation, the <a href=\"http://docs.aws.amazon.com/lambda/latest/dg/API_AddPermission.html#SSS-AddPermission-request-SourceAccount\" rel=\"noreferrer\"><code>SourceAccount</code></a> parameter restricts the 'source' of the permitted invocation to the specified AWS Account ID, for example when specifying an S3 Bucket or CloudWatch Logs notification.</p>\n\n<p>However (and the docs should probably be made more clear on this point), in the case of a CloudWatch Events Schedule Expression, the <code>source</code> of the Event is <a href=\"http://docs.aws.amazon.com/lambda/latest/dg/eventsources.html#eventsources-scheduled-event\" rel=\"noreferrer\"><code>aws.events</code></a>, not your own AWS Account ID, which is why adding this parameter causes the event to fail to trigger the Lambda function.</p>\n", "OwnerUserId": "2518355", "LastEditorUserId": "2518355", "LastEditDate": "2017-01-18T07:32:44.840", "LastActivityDate": "2017-01-18T07:32:44.840", "CommentCount": "0", "ContentLicense": "CC BY-SA 3.0", "history": [{"Id": "136245841", "PostHistoryTypeId": "2", "PostId": "41713578", "RevisionGUID": "636bb594-22e9-4435-8bd6-a3d20676c246", "CreationDate": "2017-01-18T07:27:26.593", "UserId": "2518355", "Text": "You need to remove the [`SourceAccount`](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-sourceaccount) parameter from your [`AWS::Lambda::Permission`](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html) Resource.\r\n\r\nThis parameter restricts the 'source' of the permitted invocation to the specified AWS Account ID, for example when specifying an S3 Bucket or CloudWatch Logs notification. However, in the case of a CloudWatch Events Schedule Expression, the `source` of the Event is `aws.events`, not your own AWS Account ID, which is why adding this parameter causes the event to fail to trigger the Lambda function.", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}, {"Id": "136246143", "PostHistoryTypeId": "5", "PostId": "41713578", "RevisionGUID": "908a7aab-d942-4f7d-9fa9-2861b7909dba", "CreationDate": "2017-01-18T07:32:44.840", "UserId": "2518355", "Comment": "minor edit", "Text": "You need to remove the [`SourceAccount`](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-sourceaccount) parameter from your [`AWS::Lambda::Permission`](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html) Resource.\r\n\r\nAs described in the [`AddPermission`](http://docs.aws.amazon.com/lambda/latest/dg/API_AddPermission.html) API documentation, the [`SourceAccount`](http://docs.aws.amazon.com/lambda/latest/dg/API_AddPermission.html#SSS-AddPermission-request-SourceAccount) parameter restricts the 'source' of the permitted invocation to the specified AWS Account ID, for example when specifying an S3 Bucket or CloudWatch Logs notification.\r\n\r\nHowever (and the docs should probably be made more clear on this point), in the case of a CloudWatch Events Schedule Expression, the `source` of the Event is [`aws.events`](http://docs.aws.amazon.com/lambda/latest/dg/eventsources.html#eventsources-scheduled-event), not your own AWS Account ID, which is why adding this parameter causes the event to fail to trigger the Lambda function.", "ContentLicense": "CC BY-SA 3.0", "filtered-sentences": []}], "filtered-sentences": []}], "contains-topic": false, "filtered-sentences": [{"source": "Body", "text": "This has cost me a couple of days already, and any help would be appreciated. ", "keywords": ["cost"]}]}
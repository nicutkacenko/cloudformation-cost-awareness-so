{"Id": "56205671", "PostTypeId": "1", "AcceptedAnswerId": "57291162", "CreationDate": "2019-05-19T07:32:39.303", "Score": "2", "ViewCount": "375", "Body": "<p>While creating a spot instance using console, it is not compulsory to choose a subnet. I can...</p>\n\n<pre><code>Subnet: No preference (default subnet in any Availability Zone)\n</code></pre>\n\n<p>But while creating a spot instance using cloudformation template, I need to choose a subnet and I am not sure which one to choose for best price.\nDoes it mean that using web interface is better than cloudformation template (for spot instances)?</p>\n", "OwnerUserId": "139150", "LastEditorUserId": "139150", "LastEditDate": "2019-07-30T10:25:33.827", "LastActivityDate": "2019-07-31T16:29:01.993", "Title": "How to specify subnet with no preference like web interface in a template?", "Tags": "|amazon-web-services|aws-cloudformation|amazon-ec2-spot-market|", "AnswerCount": "2", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "101056630", "PostId": "56205671", "Score": "0", "Text": "Which CloudFormation resource are you using to create a spot instance?", "CreationDate": "2019-07-30T21:19:26.680", "UserId": "10473469", "filtered-sentences": [{"source": "Text", "text": "Which CloudFormation resource are you using to create a spot instance?", "keywords": ["instance"]}]}, {"Id": "101061080", "PostId": "56205671", "Score": "0", "Text": "I use a template like this that works as per my requirement. The only problem is as mentioned above, I can not select more than 1 subnet. I am not sure if I should choose 1a, 1b or 1c and the spot prices are different for each one.    https://raw.githubusercontent.com/shantanuo/cloudformation/master/updated/linux_instance.txt", "CreationDate": "2019-07-31T03:25:16.350", "UserId": "139150", "filtered-sentences": []}], "history": [{"Id": "198021573", "PostHistoryTypeId": "2", "PostId": "56205671", "RevisionGUID": "11496e3e-3952-43e3-9c76-ff1eea0d6a93", "CreationDate": "2019-05-19T07:32:39.303", "UserId": "139150", "Text": "While creating a spot instance using console, it is not compulsory to choose a subnet. I can...\r\n\r\n    Subnet: No preference (default subnet in any Availability Zone)\r\n\r\nBut while creating a spot instance using cloudformation template, I need to choose a subnet and I am not sure which one to choose for best price.\r\nDoes it mean that using web interface is better than cloudformation template (for spot instances)?\r\n", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "While creating a spot instance using console, it is not compulsory to choose a subnet. ", "keywords": ["instance"]}, {"source": "Text", "text": "But while creating a spot instance using cloudformation template, I need to choose a subnet and I am not sure which one to choose for best price. ", "keywords": ["instance"]}]}, {"Id": "198021574", "PostHistoryTypeId": "1", "PostId": "56205671", "RevisionGUID": "11496e3e-3952-43e3-9c76-ff1eea0d6a93", "CreationDate": "2019-05-19T07:32:39.303", "UserId": "139150", "Text": "How to specify subnet with no preference like web interface in a template?", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "198021575", "PostHistoryTypeId": "3", "PostId": "56205671", "RevisionGUID": "11496e3e-3952-43e3-9c76-ff1eea0d6a93", "CreationDate": "2019-05-19T07:32:39.303", "UserId": "139150", "Text": "|aws-cloudformation|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "199319150", "PostHistoryTypeId": "33", "PostId": "56205671", "RevisionGUID": "6f6bee37-30b3-47af-b9dd-35bbf96b0c32", "CreationDate": "2019-06-09T03:41:35.650", "UserId": "139150", "Comment": "183286", "filtered-sentences": []}, {"Id": "199797805", "PostHistoryTypeId": "34", "PostId": "56205671", "RevisionGUID": "65d5037e-7b4f-4c8b-b3d5-3a125b7aa54c", "CreationDate": "2019-06-17T06:03:20.900", "UserId": "-1", "Comment": "183286", "filtered-sentences": []}, {"Id": "202526335", "PostHistoryTypeId": "33", "PostId": "56205671", "RevisionGUID": "70818c88-fcce-4ba9-b009-1d02ef9adbe1", "CreationDate": "2019-07-30T10:23:10.150", "UserId": "139150", "Comment": "186198", "filtered-sentences": []}, {"Id": "202526541", "PostHistoryTypeId": "6", "PostId": "56205671", "RevisionGUID": "d3c9ba0c-fd90-4120-816a-ab9220e4f974", "CreationDate": "2019-07-30T10:25:33.827", "UserId": "139150", "Comment": "edited tags", "Text": "|amazon-web-services|aws-cloudformation|amazon-ec2-spot-market|", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": []}, {"Id": "202657039", "PostHistoryTypeId": "34", "PostId": "56205671", "RevisionGUID": "21626ea9-25e8-48b1-b389-385168c33ed8", "CreationDate": "2019-08-01T05:12:43.700", "UserId": "139150", "Comment": "186198", "filtered-sentences": []}], "answers": [{"Id": "56533891", "PostTypeId": "2", "ParentId": "56205671", "CreationDate": "2019-06-10T21:42:46.857", "Score": "1", "Body": "<p>Spot instance pricing is determined by <a href=\"https://docs.aws.amazon.com/whitepapers/latest/cost-optimization-leveraging-ec2-spot-instances/how-spot-instances-work.html\" rel=\"nofollow noreferrer\">long term trends of supply and demand for EC2 instances</a>, not which subnet you chose to launch the spot instance into.</p>\n\n<p>Its <strong>always</strong> beneficial to develop a cloudformation template for each of your AWS solutions.  This keeps with the <a href=\"https://containersonaws.com/introduction/infrastructure-as-code/\" rel=\"nofollow noreferrer\">\"Infrastructure as Code\"</a> mantra which carries many positive benefits such as reuse, ability to track changes with revision control, cattle not pets, etc.</p>\n\n<p>Regarding the default subnets:  For your account, each Region has a default VPC which contains default subnets per Availability Zone.  This is a convenience feature provided by AWS so you can start launching instances quickly.  These default subnets are <a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html\" rel=\"nofollow noreferrer\">public subnets</a> and if you launch instances into them, these instances get public ips and are exposed to the internet.  For better security, develop a private subnet and launch instances into the private subnet and access them via bastion host. </p>\n", "OwnerUserId": "819019", "LastEditorUserId": "819019", "LastEditDate": "2019-06-10T21:49:09.440", "LastActivityDate": "2019-06-10T21:49:09.440", "CommentCount": "0", "ContentLicense": "CC BY-SA 4.0", "history": [{"Id": "199412052", "PostHistoryTypeId": "2", "PostId": "56533891", "RevisionGUID": "024c21f5-c27b-4f32-b31a-1f4fd16f5a81", "CreationDate": "2019-06-10T21:42:46.857", "UserId": "819019", "Text": "Spot instance pricing is determined by [long term trends of supply and demand for EC2 instances][1], not which subnet you chose to launch the spot instance into.\r\n\r\nIts **always** beneficial to develop a cloudformation template for each of your AWS solutions.  This keeps with the [\"Infrastructure as Code\"][2] mantra which carries many positive benefits such as reuse, ability to track changes with revision control, etc.\r\n\r\nRegarding the default subnets:  For your account, each Region has a default VPC which contains default subnets per Availability Zone.  This is a convenience feature provided by AWS so you can start launching instances quickly.  These default subnets are [public subnets][3] and if you launch instances into them, these instances get public ips and are exposed to the internet.  \r\n\r\n  [1]: https://docs.aws.amazon.com/whitepapers/latest/cost-optimization-leveraging-ec2-spot-instances/how-spot-instances-work.html\r\n  [2]: https://containersonaws.com/introduction/infrastructure-as-code/\r\n  [3]: https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Spot instance pricing is determined by [long term trends of supply and demand for EC2 instances][1], not which subnet you chose to launch the spot instance into. ", "keywords": ["instance"]}, {"source": "Text", "text": "This keeps with the [\"Infrastructure as Code\"][2] mantra which carries many positive benefits such as reuse, ability to track changes with revision control, etc. ", "keywords": ["change"]}, {"source": "Text", "text": "This is a convenience feature provided by AWS so you can start launching instances quickly. ", "keywords": ["feature"]}, {"source": "Text", "text": "These default subnets are [public subnets][3] and if you launch instances into them, these instances get public ips and are exposed to the internet. [1]: https://docs.aws.amazon.com/whitepapers/latest/cost-optimization-leveraging-ec2-spot-instances/how-spot-instances-work.html [2]: https://containersonaws.com/introduction/infrastructure-as-code/ [3]: https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html", "keywords": ["cost"]}]}, {"Id": "199412306", "PostHistoryTypeId": "5", "PostId": "56533891", "RevisionGUID": "addd5b3f-7a93-48e1-b9fe-0ce4afa6de9c", "CreationDate": "2019-06-10T21:49:09.440", "UserId": "819019", "Comment": "added 142 characters in body", "Text": "Spot instance pricing is determined by [long term trends of supply and demand for EC2 instances][1], not which subnet you chose to launch the spot instance into.\r\n\r\nIts **always** beneficial to develop a cloudformation template for each of your AWS solutions.  This keeps with the [\"Infrastructure as Code\"][2] mantra which carries many positive benefits such as reuse, ability to track changes with revision control, cattle not pets, etc.\r\n\r\nRegarding the default subnets:  For your account, each Region has a default VPC which contains default subnets per Availability Zone.  This is a convenience feature provided by AWS so you can start launching instances quickly.  These default subnets are [public subnets][3] and if you launch instances into them, these instances get public ips and are exposed to the internet.  For better security, develop a private subnet and launch instances into the private subnet and access them via bastion host. \r\n\r\n  [1]: https://docs.aws.amazon.com/whitepapers/latest/cost-optimization-leveraging-ec2-spot-instances/how-spot-instances-work.html\r\n  [2]: https://containersonaws.com/introduction/infrastructure-as-code/\r\n  [3]: https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "Spot instance pricing is determined by [long term trends of supply and demand for EC2 instances][1], not which subnet you chose to launch the spot instance into. ", "keywords": ["instance"]}, {"source": "Text", "text": "This keeps with the [\"Infrastructure as Code\"][2] mantra which carries many positive benefits such as reuse, ability to track changes with revision control, cattle not pets, etc. ", "keywords": ["change"]}, {"source": "Text", "text": "This is a convenience feature provided by AWS so you can start launching instances quickly. ", "keywords": ["feature"]}, {"source": "Text", "text": "For better security, develop a private subnet and launch instances into the private subnet and access them via bastion host. [1]: https://docs.aws.amazon.com/whitepapers/latest/cost-optimization-leveraging-ec2-spot-instances/how-spot-instances-work.html [2]: https://containersonaws.com/introduction/infrastructure-as-code/ [3]: https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html", "keywords": ["cost"]}]}], "filtered-sentences": [{"source": "Body", "text": "Spot instance pricing is determined by long term trends of supply and demand for EC2 instances, not which subnet you chose to launch the spot instance into. ", "keywords": ["instance"]}, {"source": "Body", "text": "This keeps with the \"Infrastructure as Code\" mantra which carries many positive benefits such as reuse, ability to track changes with revision control, cattle not pets, etc. ", "keywords": ["change"]}, {"source": "Body", "text": "This is a convenience feature provided by AWS so you can start launching instances quickly. ", "keywords": ["feature"]}]}, {"Id": "57291162", "PostTypeId": "2", "ParentId": "56205671", "CreationDate": "2019-07-31T12:50:57.200", "Score": "1", "Body": "<h3>Requirement and corresponding allocation strategy</h3>\n\n<p>I interpreted your requirement \"best price\" as obtaining a SpotFleet [1] which is configured for cost optimization. AWS describes how to create a cost-optimized spot fleet in the docs [2]:</p>\n\n<blockquote>\n  <p>To optimize the costs for your use of Spot Instances, specify the lowestPrice allocation strategy so that Spot Fleet automatically deploys the cheapest combination of instance types and Availability Zones based on the current Spot price.</p>\n</blockquote>\n\n<p>You already specified the correct <em>AllocationStrategy</em> <code>lowestPrice</code> for this case in your CloudFormation template provided in the comments above. AWS describes this allocation strategy as:</p>\n\n<blockquote>\n  <p>The Spot Instances come from the pool with the lowest price. This is the default strategy.</p>\n</blockquote>\n\n<h3>What is a spot instance pool?</h3>\n\n<blockquote>\n  <p>A Spot Instance pool is a set of unused EC2 instances with the same <strong>instance type</strong> (for example, m5.large), <strong>operating system</strong>, <strong>Availability Zone</strong>, and <strong>network platform</strong> [i.e. EC2-Classic or EC2-VPC, see [3]].</p>\n  \n  <p>The Spot Fleet selects the Spot Instance pools that are used to fulfill the request, based on the <strong>launch specifications</strong> included in your Spot Fleet request, and the <strong>configuration of the Spot Fleet request</strong> <em>[which is lowestPrice in our case]</em>. [2]</p>\n</blockquote>\n\n<p>That answers one part of your question:</p>\n\n<p>No, the subnet does not directly determine the spot price. It is the availability zone which determines the price, i.e. instances of the same instance type, operating system and network platform always have the same spot price if they reside in the same availability zone. Since a subnet cannot span multiple availability zones, the spot price for instances in a particular subnet is always identical - i.e. the price for the (AZ, Instance Type, OS, Network Platform) combination.</p>\n\n<h3>Automatic subnet and AZ selection</h3>\n\n<p>You state in your question that you have to choose a subnet. That is not true. The <em>NetworkInterfaces</em> attribute of your <em>LaunchSpecification</em> [4] is optional.\nIf you omit it, CloudFormation behaves exactly the same as the AWS Management Console.\nYou can read about it in the <em>Spot Fleet Examples</em> section of the docs [5]:</p>\n\n<blockquote>\n  <p><strong>Example 1: Launch Spot Instances Using the Lowest-Priced Availability Zone or Subnet in the Region</strong></p>\n  \n  <p>The following example specifies a single launch specification without an Availability Zone or subnet. The Spot Fleet launches the instances in the lowest-priced Availability Zone that has a default subnet. The price you pay does not exceed the On-Demand price.</p>\n\n<pre><code>{\n  \"TargetCapacity\": 20,\n  \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\",\n  \"LaunchSpecifications\": [\n      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"KeyName\": \"my-key-pair\",\n          \"SecurityGroups\": [\n              {\n                  \"GroupId\": \"sg-1a2b3c4d\"\n              }\n          ],\n          \"InstanceType\": \"m3.medium\",\n          \"IamInstanceProfile\": {\n              \"Arn\": \"arn:aws:iam::123456789012:instance-profile/my-iam-role\"\n          }\n      }\n  ]\n}\n</code></pre>\n</blockquote>\n\n<p>If you really need to assign a NetworkInterface to your instance (e.g. because you require a public IP address), there is also a solution listed in [5]:</p>\n\n<blockquote>\n<pre><code>      {\n          \"ImageId\": \"ami-1a2b3c4d\",\n          \"KeyName\": \"my-key-pair\",\n          \"InstanceType\": \"m3.medium\",\n          \"NetworkInterfaces\": [\n              {\n                  \"DeviceIndex\": 0,\n                  \"SubnetId\": \"subnet-1a2b3c4d\",\n                  \"Groups\": [ \"sg-1a2b3c4d\" ],\n                  \"AssociatePublicIpAddress\": true\n              }\n          ],\n          \"IamInstanceProfile\": {\n              \"Arn\": \"arn:aws:iam::880185128111:instance-profile/my-iam-role\"\n          }\n      }\n</code></pre>\n</blockquote>\n\n<p>That is exactly what you implemented in your CloudFormation template as far as I see.\nAWS states for this approach: </p>\n\n<blockquote>\n  <p>The Spot service launches the instances in whichever subnet is in the lowest-priced Availability Zone.</p>\n</blockquote>\n\n<p>and</p>\n\n<blockquote>\n  <p>You can't specify different subnets from the same Availability Zone in a Spot Fleet request.</p>\n</blockquote>\n\n<p>That means, you should create one launch specification for each availability zone you want to distribute your instances across. Each of those launch specifications should differ by SubnetId:</p>\n\n<pre><code>[...]\n  LaunchSpecifications: [\n      {\n          [...]\n          \"NetworkInterfaces\": [\n              {\n                  \"DeviceIndex\": 0,\n                  \"SubnetId\": \"subnet-1a2b3c4d\",  // choose a subnet from AZ a\n                  \"Groups\": [ \"sg-1a2b3c4d\" ],\n                  \"AssociatePublicIpAddress\": true\n              }\n          ],\n          [...]\n      },\n      {\n          [...]\n          \"NetworkInterfaces\": [\n              {\n                  \"DeviceIndex\": 0,\n                  \"SubnetId\": \"subnet-xxxxxxxx\",  // choose a subnet from AZ b\n                  \"Groups\": [ \"sg-1a2b3c4d\" ],\n                  \"AssociatePublicIpAddress\": true\n              }\n          ],\n          [...]\n      },\n      [... etc. for each AZ]\n  ],\n[...]\n</code></pre>\n\n<h3>References</h3>\n\n<p>[1] <a href=\"https://docs.aws.amazon.com/de_de/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html\" rel=\"nofollow noreferrer\">https://docs.aws.amazon.com/de_de/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html</a><br>\n[2] <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet.html#spot-fleet-allocation-strategy\" rel=\"nofollow noreferrer\">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet.html#spot-fleet-allocation-strategy</a><br>\n[3] <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-classic-platform.html\" rel=\"nofollow noreferrer\">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-classic-platform.html</a><br>\n[4] <a href=\"https://docs.aws.amazon.com/de_de/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces\" rel=\"nofollow noreferrer\">https://docs.aws.amazon.com/de_de/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces</a><br>\n[5] <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-examples.html#fleet-config1\" rel=\"nofollow noreferrer\">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-examples.html#fleet-config1</a></p>\n", "OwnerUserId": "10473469", "LastEditorUserId": "10473469", "LastEditDate": "2019-07-31T16:29:01.993", "LastActivityDate": "2019-07-31T16:29:01.993", "CommentCount": "2", "ContentLicense": "CC BY-SA 4.0", "comments": [{"Id": "101097479", "PostId": "57291162", "Score": "0", "Text": "Using these guidelines, I was able to remove subnet and rewrite my template. Thanks for your help. I know why \"IamFleetRole\" is required. But what about \"IamInstanceProfile\" and why is it there?", "CreationDate": "2019-08-01T05:12:18.717", "UserId": "139150", "filtered-sentences": []}, {"Id": "101108898", "PostId": "57291162", "Score": "0", "Text": "I think the instance profile attribute is optional. It is necessary If your spot instances must have access to other AWS services. An instance profile attaches an instance role to a particular instance. It is often used for spot instances which are used to host ECS clusters, see: https://github.com/awslabs/ec2-spot-labs/blob/master/ecs-ec2-spot-fleet/ecs-ec2-spot-fleet.yaml", "CreationDate": "2019-08-01T11:43:51.543", "UserId": "10473469", "filtered-sentences": [{"source": "Text", "text": "I think the instance profile attribute is optional. ", "keywords": ["instance"]}, {"source": "Text", "text": "An instance profile attaches an instance role to a particular instance. ", "keywords": ["instance"]}]}], "history": [{"Id": "202611798", "PostHistoryTypeId": "2", "PostId": "57291162", "RevisionGUID": "68cf8d4c-7b86-448e-93c5-89407adc6546", "CreationDate": "2019-07-31T12:50:57.200", "UserId": "10473469", "Text": "### Requirement and corresponding allocation strategy\r\nI interpreted your requirement \"best price\" as obtaining a SpotFleet [1] which is configured for cost optimization. AWS describes how to create a cost-optimized spot fleet in the docs [2]:\r\n\r\n> To optimize the costs for your use of Spot Instances, specify the lowestPrice allocation strategy so that Spot Fleet automatically deploys the cheapest combination of instance types and Availability Zones based on the current Spot price.\r\n\r\nYou already specified the correct *AllocationStrategy* `lowestPrice` for this case in your CloudFormation template provided in the comments above. AWS describes this allocation strategy as:\r\n\r\n> The Spot Instances come from the pool with the lowest price. This is the default strategy.\r\n\r\n### What is a spot instance pool?\r\n\r\n> A Spot Instance pool is a set of unused EC2 instances with the same **instance type** (for example, m5.large), **operating system**, **Availability Zone**, and **network platform** [i.e. EC2-Classic or EC2-VPC, see [3]].\r\n> \r\nThe Spot Fleet selects the Spot Instance pools that are used to fulfill the request, based on the **launch specifications** included in your Spot Fleet request, and the **configuration of the Spot Fleet request** *[which is lowestPrice in our case]*. [2]\r\n\r\nThat answers one part of your question:\r\n\r\nNo, the subnet does not directly determine the spot price. It is the availability zone which determines the price, i.e. instances of the same instance type, operating system and network platform always have the same spot price if they reside in the same availability zone. Since a subnet cannot span multiple availability zones, the spot price for instances in a particular subnet is always identical - i.e. the price for the (AZ, Instance Type, OS, Network Platform) combination.\r\n\r\n### Automatic subnet and AZ selection\r\nYou state in your question that you have to choose a subnet. That is not true. The *NetworkInterfaces* attribute of your *LaunchSpecification* [4] is optional.\r\nIf you omit it, CloudFormation behaves exactly the same as the AWS Management Console.\r\nYou can read about it in the *Spot Fleet Examples* section of the docs [5]:\r\n\r\n> **Example 1: Launch Spot Instances Using the Lowest-Priced Availability Zone or Subnet in the Region**\r\n\r\n> The following example specifies a single launch specification without an Availability Zone or subnet. The Spot Fleet launches the instances in the lowest-priced Availability Zone that has a default subnet. The price you pay does not exceed the On-Demand price.\r\n\r\n> ```\r\n{\r\n  \"TargetCapacity\": 20,\r\n  \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\",\r\n  \"LaunchSpecifications\": [\r\n      {\r\n          \"ImageId\": \"ami-1a2b3c4d\",\r\n          \"KeyName\": \"my-key-pair\",\r\n          \"SecurityGroups\": [\r\n              {\r\n                  \"GroupId\": \"sg-1a2b3c4d\"\r\n              }\r\n          ],\r\n          \"InstanceType\": \"m3.medium\",\r\n          \"IamInstanceProfile\": {\r\n              \"Arn\": \"arn:aws:iam::123456789012:instance-profile/my-iam-role\"\r\n          }\r\n      }\r\n  ]\r\n}\r\n\r\nIf you really need to assign a NetworkInterface to your instance (e.g. because you require a public IP address), there is also a solution listed in [5]:\r\n\r\n> ```     \r\n      {\r\n          \"ImageId\": \"ami-1a2b3c4d\",\r\n          \"KeyName\": \"my-key-pair\",\r\n          \"InstanceType\": \"m3.medium\",\r\n          \"NetworkInterfaces\": [\r\n              {\r\n                  \"DeviceIndex\": 0,\r\n                  \"SubnetId\": \"subnet-1a2b3c4d\",\r\n                  \"Groups\": [ \"sg-1a2b3c4d\" ],\r\n                  \"AssociatePublicIpAddress\": true\r\n              }\r\n          ],\r\n          \"IamInstanceProfile\": {\r\n              \"Arn\": \"arn:aws:iam::880185128111:instance-profile/my-iam-role\"\r\n          }\r\n      }\r\n\r\nThat is what you implemented in your CloudFormation template as far as I have seen.\r\nAWS states for this approach: \r\n\r\n> The Spot service launches the instances in whichever subnet is in the lowest-priced Availability Zone.\r\n\r\nand\r\n\r\n> You can't specify different subnets from the same Availability Zone in a Spot Fleet request.\r\n\r\nThat is, you should create one launch specification for each availability zone you want to distribute your instances across. Each of those launch specifications should differ by SubnetId:\r\n\r\n```\r\n[...]\r\n  LaunchSpecifications: [\r\n      {\r\n          [...]\r\n          \"NetworkInterfaces\": [\r\n              {\r\n                  \"DeviceIndex\": 0,\r\n                  \"SubnetId\": \"subnet-1a2b3c4d\",  // choose a subnet fro AZ a\r\n                  \"Groups\": [ \"sg-1a2b3c4d\" ],\r\n                  \"AssociatePublicIpAddress\": true\r\n              }\r\n          ],\r\n          [...]\r\n      },\r\n      {\r\n          [...]\r\n          \"NetworkInterfaces\": [\r\n              {\r\n                  \"DeviceIndex\": 0,\r\n                  \"SubnetId\": \"subnet-xxxxxxxx\",  // choose a subnet fro AZ b\r\n                  \"Groups\": [ \"sg-1a2b3c4d\" ],\r\n                  \"AssociatePublicIpAddress\": true\r\n              }\r\n          ],\r\n          [...]\r\n      },\r\n      [... etc. for each AZ]\r\n  ],\r\n[...]\r\n```\r\n\r\n### References\r\n[1] https://docs.aws.amazon.com/de_de/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html   \r\n[2] https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet.html#spot-fleet-allocation-strategy   \r\n[3] https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-classic-platform.html   \r\n[4] https://docs.aws.amazon.com/de_de/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces   \r\n[5] https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-examples.html#fleet-config1", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "### Requirement and corresponding allocation strategy I interpreted your requirement \"best price\" as obtaining a SpotFleet [1] which is configured for cost optimization. ", "keywords": ["cost"]}, {"source": "Text", "text": "AWS describes how to create a cost-optimized spot fleet in the docs [2]: > To optimize the costs for your use of Spot Instances, specify the lowestPrice allocation strategy so that Spot Fleet automatically deploys the cheapest combination of instance types and Availability Zones based on the current Spot price. ", "keywords": ["cheap", "cost", "instance"]}, {"source": "Text", "text": "### What is a spot instance pool? ", "keywords": ["instance"]}, {"source": "Text", "text": "> A Spot Instance pool is a set of unused EC2 instances with the same **instance type** (for example, m5.large), **operating system**, **Availability Zone**, and **network platform** [i.e. EC2-Classic or EC2-VPC, see [3]]. ", "keywords": ["instance"]}, {"source": "Text", "text": "> The Spot Fleet selects the Spot Instance pools that are used to fulfill the request, based on the **launch specifications** included in your Spot Fleet request, and the **configuration of the Spot Fleet request** *[which is lowestPrice in our case]*. ", "keywords": ["instance"]}, {"source": "Text", "text": "It is the availability zone which determines the price, i.e. instances of the same instance type, operating system and network platform always have the same spot price if they reside in the same availability zone. ", "keywords": ["instance"]}, {"source": "Text", "text": "Since a subnet cannot span multiple availability zones, the spot price for instances in a particular subnet is always identical - i.e. the price for the (AZ, Instance Type, OS, Network Platform) combination. ### Automatic subnet and AZ selection ", "keywords": ["instance"]}, {"source": "Text", "text": "The price you pay does not exceed the On-Demand price. ", "keywords": ["pay"]}, {"source": "Text", "text": "> ``` { \"TargetCapacity\": 20, \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\", \"LaunchSpecifications\": [ { \"ImageId\": \"ami-1a2b3c4d\", \"KeyName\": \"my-key-pair\", \"SecurityGroups\": [ { \"GroupId\": \"sg-1a2b3c4d\" } ], \"InstanceType\": \"m3.medium\", \"IamInstanceProfile\": { \"Arn\": \"arn:aws:iam::123456789012:instance-profile/my-iam-role\" } } ] } If you really need to assign a NetworkInterface to your instance (e.g. because you require a public IP address), there is also a solution listed in [5]: > ``` { \"ImageId\": \"ami-1a2b3c4d\", \"KeyName\": \"my-key-pair\", \"InstanceType\": \"m3.medium\", \"NetworkInterfaces\": [ { \"DeviceIndex\": 0, \"SubnetId\": \"subnet-1a2b3c4d\", \"Groups\": [ \"sg-1a2b3c4d\" ], \"AssociatePublicIpAddress\": true } ], \"IamInstanceProfile\": { \"Arn\": \"arn:aws:iam::880185128111:instance-profile/my-iam-role\" } } ", "keywords": ["instance"]}]}, {"Id": "202628696", "PostHistoryTypeId": "5", "PostId": "57291162", "RevisionGUID": "9f9650a6-5eb7-4526-8ed3-382482e2540e", "CreationDate": "2019-07-31T16:29:01.993", "UserId": "10473469", "Comment": "added 7 characters in body", "Text": "### Requirement and corresponding allocation strategy\r\nI interpreted your requirement \"best price\" as obtaining a SpotFleet [1] which is configured for cost optimization. AWS describes how to create a cost-optimized spot fleet in the docs [2]:\r\n\r\n> To optimize the costs for your use of Spot Instances, specify the lowestPrice allocation strategy so that Spot Fleet automatically deploys the cheapest combination of instance types and Availability Zones based on the current Spot price.\r\n\r\nYou already specified the correct *AllocationStrategy* `lowestPrice` for this case in your CloudFormation template provided in the comments above. AWS describes this allocation strategy as:\r\n\r\n> The Spot Instances come from the pool with the lowest price. This is the default strategy.\r\n\r\n### What is a spot instance pool?\r\n\r\n> A Spot Instance pool is a set of unused EC2 instances with the same **instance type** (for example, m5.large), **operating system**, **Availability Zone**, and **network platform** [i.e. EC2-Classic or EC2-VPC, see [3]].\r\n> \r\nThe Spot Fleet selects the Spot Instance pools that are used to fulfill the request, based on the **launch specifications** included in your Spot Fleet request, and the **configuration of the Spot Fleet request** *[which is lowestPrice in our case]*. [2]\r\n\r\nThat answers one part of your question:\r\n\r\nNo, the subnet does not directly determine the spot price. It is the availability zone which determines the price, i.e. instances of the same instance type, operating system and network platform always have the same spot price if they reside in the same availability zone. Since a subnet cannot span multiple availability zones, the spot price for instances in a particular subnet is always identical - i.e. the price for the (AZ, Instance Type, OS, Network Platform) combination.\r\n\r\n### Automatic subnet and AZ selection\r\nYou state in your question that you have to choose a subnet. That is not true. The *NetworkInterfaces* attribute of your *LaunchSpecification* [4] is optional.\r\nIf you omit it, CloudFormation behaves exactly the same as the AWS Management Console.\r\nYou can read about it in the *Spot Fleet Examples* section of the docs [5]:\r\n\r\n> **Example 1: Launch Spot Instances Using the Lowest-Priced Availability Zone or Subnet in the Region**\r\n\r\n> The following example specifies a single launch specification without an Availability Zone or subnet. The Spot Fleet launches the instances in the lowest-priced Availability Zone that has a default subnet. The price you pay does not exceed the On-Demand price.\r\n\r\n> ```\r\n{\r\n  \"TargetCapacity\": 20,\r\n  \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\",\r\n  \"LaunchSpecifications\": [\r\n      {\r\n          \"ImageId\": \"ami-1a2b3c4d\",\r\n          \"KeyName\": \"my-key-pair\",\r\n          \"SecurityGroups\": [\r\n              {\r\n                  \"GroupId\": \"sg-1a2b3c4d\"\r\n              }\r\n          ],\r\n          \"InstanceType\": \"m3.medium\",\r\n          \"IamInstanceProfile\": {\r\n              \"Arn\": \"arn:aws:iam::123456789012:instance-profile/my-iam-role\"\r\n          }\r\n      }\r\n  ]\r\n}\r\n\r\nIf you really need to assign a NetworkInterface to your instance (e.g. because you require a public IP address), there is also a solution listed in [5]:\r\n\r\n> ```     \r\n      {\r\n          \"ImageId\": \"ami-1a2b3c4d\",\r\n          \"KeyName\": \"my-key-pair\",\r\n          \"InstanceType\": \"m3.medium\",\r\n          \"NetworkInterfaces\": [\r\n              {\r\n                  \"DeviceIndex\": 0,\r\n                  \"SubnetId\": \"subnet-1a2b3c4d\",\r\n                  \"Groups\": [ \"sg-1a2b3c4d\" ],\r\n                  \"AssociatePublicIpAddress\": true\r\n              }\r\n          ],\r\n          \"IamInstanceProfile\": {\r\n              \"Arn\": \"arn:aws:iam::880185128111:instance-profile/my-iam-role\"\r\n          }\r\n      }\r\n\r\nThat is exactly what you implemented in your CloudFormation template as far as I see.\r\nAWS states for this approach: \r\n\r\n> The Spot service launches the instances in whichever subnet is in the lowest-priced Availability Zone.\r\n\r\nand\r\n\r\n> You can't specify different subnets from the same Availability Zone in a Spot Fleet request.\r\n\r\nThat means, you should create one launch specification for each availability zone you want to distribute your instances across. Each of those launch specifications should differ by SubnetId:\r\n\r\n```\r\n[...]\r\n  LaunchSpecifications: [\r\n      {\r\n          [...]\r\n          \"NetworkInterfaces\": [\r\n              {\r\n                  \"DeviceIndex\": 0,\r\n                  \"SubnetId\": \"subnet-1a2b3c4d\",  // choose a subnet from AZ a\r\n                  \"Groups\": [ \"sg-1a2b3c4d\" ],\r\n                  \"AssociatePublicIpAddress\": true\r\n              }\r\n          ],\r\n          [...]\r\n      },\r\n      {\r\n          [...]\r\n          \"NetworkInterfaces\": [\r\n              {\r\n                  \"DeviceIndex\": 0,\r\n                  \"SubnetId\": \"subnet-xxxxxxxx\",  // choose a subnet from AZ b\r\n                  \"Groups\": [ \"sg-1a2b3c4d\" ],\r\n                  \"AssociatePublicIpAddress\": true\r\n              }\r\n          ],\r\n          [...]\r\n      },\r\n      [... etc. for each AZ]\r\n  ],\r\n[...]\r\n```\r\n\r\n### References\r\n[1] https://docs.aws.amazon.com/de_de/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-spotfleet.html   \r\n[2] https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet.html#spot-fleet-allocation-strategy   \r\n[3] https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-classic-platform.html   \r\n[4] https://docs.aws.amazon.com/de_de/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications-networkinterfaces   \r\n[5] https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-examples.html#fleet-config1", "ContentLicense": "CC BY-SA 4.0", "filtered-sentences": [{"source": "Text", "text": "### Requirement and corresponding allocation strategy I interpreted your requirement \"best price\" as obtaining a SpotFleet [1] which is configured for cost optimization. ", "keywords": ["cost"]}, {"source": "Text", "text": "AWS describes how to create a cost-optimized spot fleet in the docs [2]: > To optimize the costs for your use of Spot Instances, specify the lowestPrice allocation strategy so that Spot Fleet automatically deploys the cheapest combination of instance types and Availability Zones based on the current Spot price. ", "keywords": ["cheap", "cost", "instance"]}, {"source": "Text", "text": "### What is a spot instance pool? ", "keywords": ["instance"]}, {"source": "Text", "text": "> A Spot Instance pool is a set of unused EC2 instances with the same **instance type** (for example, m5.large), **operating system**, **Availability Zone**, and **network platform** [i.e. EC2-Classic or EC2-VPC, see [3]]. ", "keywords": ["instance"]}, {"source": "Text", "text": "> The Spot Fleet selects the Spot Instance pools that are used to fulfill the request, based on the **launch specifications** included in your Spot Fleet request, and the **configuration of the Spot Fleet request** *[which is lowestPrice in our case]*. ", "keywords": ["instance"]}, {"source": "Text", "text": "It is the availability zone which determines the price, i.e. instances of the same instance type, operating system and network platform always have the same spot price if they reside in the same availability zone. ", "keywords": ["instance"]}, {"source": "Text", "text": "Since a subnet cannot span multiple availability zones, the spot price for instances in a particular subnet is always identical - i.e. the price for the (AZ, Instance Type, OS, Network Platform) combination. ### Automatic subnet and AZ selection ", "keywords": ["instance"]}, {"source": "Text", "text": "The price you pay does not exceed the On-Demand price. ", "keywords": ["pay"]}, {"source": "Text", "text": "> ``` { \"TargetCapacity\": 20, \"IamFleetRole\": \"arn:aws:iam::123456789012:role/aws-ec2-spot-fleet-tagging-role\", \"LaunchSpecifications\": [ { \"ImageId\": \"ami-1a2b3c4d\", \"KeyName\": \"my-key-pair\", \"SecurityGroups\": [ { \"GroupId\": \"sg-1a2b3c4d\" } ], \"InstanceType\": \"m3.medium\", \"IamInstanceProfile\": { \"Arn\": \"arn:aws:iam::123456789012:instance-profile/my-iam-role\" } } ] } If you really need to assign a NetworkInterface to your instance (e.g. because you require a public IP address), there is also a solution listed in [5]: > ``` { \"ImageId\": \"ami-1a2b3c4d\", \"KeyName\": \"my-key-pair\", \"InstanceType\": \"m3.medium\", \"NetworkInterfaces\": [ { \"DeviceIndex\": 0, \"SubnetId\": \"subnet-1a2b3c4d\", \"Groups\": [ \"sg-1a2b3c4d\" ], \"AssociatePublicIpAddress\": true } ], \"IamInstanceProfile\": { \"Arn\": \"arn:aws:iam::880185128111:instance-profile/my-iam-role\" } } ", "keywords": ["instance"]}]}], "filtered-sentences": [{"source": "Body", "text": "Requirement and corresponding allocation strategy I interpreted your requirement \"best price\" as obtaining a SpotFleet [1] which is configured for cost optimization. ", "keywords": ["cost"]}, {"source": "Body", "text": "AWS describes how to create a cost-optimized spot fleet in the docs [2]: ", "keywords": ["cost"]}, {"source": "Body", "text": "To optimize the costs for your use of Spot Instances, specify the lowestPrice allocation strategy so that Spot Fleet automatically deploys the cheapest combination of instance types and Availability Zones based on the current Spot price. ", "keywords": ["cheap", "instance"]}, {"source": "Body", "text": "What is a spot instance pool? ", "keywords": ["instance"]}, {"source": "Body", "text": "A Spot Instance pool is a set of unused EC2 instances with the same instance type (for example, m5.large), operating system, Availability Zone, and network platform [i.e. EC2-Classic or EC2-VPC, see [3]]. ", "keywords": ["instance"]}, {"source": "Body", "text": "The Spot Fleet selects the Spot Instance pools that are used to fulfill the request, based on the launch specifications included in your Spot Fleet request, and the configuration of the Spot Fleet request [which is lowestPrice in our case]. [2] ", "keywords": ["instance"]}, {"source": "Body", "text": "It is the availability zone which determines the price, i.e. instances of the same instance type, operating system and network platform always have the same spot price if they reside in the same availability zone. ", "keywords": ["instance"]}, {"source": "Body", "text": "Since a subnet cannot span multiple availability zones, the spot price for instances in a particular subnet is always identical - i.e. the price for the (AZ, Instance Type, OS, Network Platform) combination. ", "keywords": ["instance"]}, {"source": "Body", "text": "The price you pay does not exceed the On-Demand price. ", "keywords": ["pay"]}, {"source": "Body", "text": "If you really need to assign a NetworkInterface to your instance (e.g. because you require a public IP address), there is also a solution listed in [5]: ", "keywords": ["instance"]}]}], "contains-topic": true, "filtered-sentences": [{"source": "Body", "text": "While creating a spot instance using console, it is not compulsory to choose a subnet. ", "keywords": ["instance"]}, {"source": "Body", "text": "But while creating a spot instance using cloudformation template, I need to choose a subnet and I am not sure which one to choose for best price. ", "keywords": ["instance"]}]}